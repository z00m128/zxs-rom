		OUTPUT	"BSROM140.BIN"

VERZIA		EQU	140

VERA		EQU	VERZIA/100
VERB		EQU	VERA*100
VERC		EQU	VERZIA-VERB
VERD		EQU	VERC/10
VERE		EQU	VERD*10
VERF		EQU	VERC-VERE

VER1		EQU	'0'+VERA
VER2		EQU	'0'+VERD
VER3		EQU	'0'+VERF

		ORG	#0000

; RST #00
START:		DI
		XOR	A
		LD	DE,#FFFF
		JP	NMI_MENU

; Error restart
; RST #08
ERROR_1:	LD	HL,(#5C5D)
		CALL	TOERR
		JR	ERROR_2

; Print a character
; RST #10
PRINT_A:	JP	PRINT_A_2

; Unused bytes
		DW	#FFFF
		DW	#FFFF
		DB	#FF

; Collect a character
; RST #18
GET_CHAR:	LD	HL,(#5C5D)
		LD	A,(HL)
TEST_CHAR:	CALL	SKIP_OVER
		RET	NC
NEXT_CHAR:	CALL	CH_ADD_1
		JR	TEST_CHAR

; Unused bytes
		DW	#FFFF
		DB	#FF

; Calculator restart
; RST #28
		JP	CALCULATE

; Unused bytes
		DW	#FFFF
		DW	#FFFF
		DB	#FF

; Create free locations in work space
; RST #30
BC_SPACES:	PUSH	BC
		LD	HL,(#5C61)
		PUSH	HL
		JP	RESERVE

; Maskable interrupt routine
; RST #38
MASK_INT:	PUSH	AF
		PUSH	HL
		LD	HL,(#5C78)
		INC	HL
		LD	(#5C78),HL
		LD	A,H
		OR	L
		JR	NZ,KEY_INT
		INC	(IY+#40)
KEY_INT:	PUSH	BC
		PUSH	DE
		CALL	KEYBOARD
		POP	DE
		POP	BC
		POP	HL
		POP	AF
		EI
		RET

; A continuation of the code at #0008
ERROR_2:	POP	HL
		LD	L,(HL)
ERROR_3:	LD	(IY+#00),L
		LD	SP,(#5C3D)
		JP	SET_STK

; Unused bytes
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DB	#FF

; Non-maskable interrupt routine
; RST #66
RESET:		JP	NMI_MENU

		OR	B			; Looks like this is unused torso 
		LD	E,H			; of the original reset routine.
		LD	A,H			; It was replaced with jump to NMI menu.
		OR	L			;
		JR	NZ,NO_RESET		;
		JP	(HL)			;
NO_RESET:	POP	HL			;
		POP	AF			;
		RETN				; End of unused bytes.

; Fetch the next immediate character following the current valid character address
; and update the associated system variable.
CH_ADD_1:	LD	HL,(#5C5D)
TEMP_PTR1:	INC	HL
TEMP_PTR2:	LD	(#5C5D),HL
		LD	A,(HL)
		RET

; Skip over white-space and other characters irrelevant to the parsing of a basic line
SKIP_OVER:	CP	#21
		RET	NC
		CP	#0D
		RET	Z
		CP	#10
		RET	C
		CP	#18
		CCF
		RET	C
		INC	HL
		CP	#16
		JR	C,SKIPS
		INC	HL
SKIPS:		SCF
		LD	(#5C5D),HL
		RET

; Six look-up tables for keyboard reading routine to decode the key values.
; Table for tokenized characters (134d-255d).
; Begins with function type words without a leading space.
; The last byte of a token is inverted to denote the end of the word.
TKN_TABLE:	DC	"?"				
		DC	"RND"
		DC	"INKEY$"
		DC	"PI"
		DC	"FN"
		DC	"POINT"
		DC	"SCREEN$"
		DC	"ATTR"
		DC	"AT"
		DC	"TAB"
		DC	"VAL$"
		DC	"CODE"
		DC	"VAL"
		DC	"LEN"
		DC	"SIN"
		DC	"COS"
		DC	"TAN"
		DC	"ASN"
		DC	"ACS"
		DC	"ATN"
		DC	"LN"
		DC	"EXP"
		DC	"INT"
		DC	"SQR"
		DC	"SGN"
		DC	"ABS"
		DC	"PEEK"
		DC	"IN"
		DC	"USR"
		DC	"STR$"
		DC	"CHR$"
		DC	"NOT"
		DC	"BIN"
		
; Function type words with a leading space
; if they begin with a letter.	
		DC	"OR"			
		DC	"AND"
		DC	"<="
		DC	">="
		DC	"<>"
		DC	"LINE"
		DC	"THEN"
		DC	"TO"
		DC	"STEP"
		DC	"DEF FN"
		DC	"CAT"
		DC	"FORMAT"
		DC	"MOVE"
		DC	"ERASE"
		DC	"OPEN #"
		DC	"CLOSE #"
		DC	"MERGE"
		DC	"VERIFY"
		DC	"BEEP"
		DC	"CIRCLE"
		DC	"INK"
		DC	"PAPER"
		DC	"FLASH"
		DC	"BRIGHT"
		DC	"INVERSE"
		DC	"OVER"
		DC	"OUT"
		DC	"LPRINT"
		DC	"LLIST"
		DC	"STOP"
		DC	"READ"
		DC	"DATA"
		DC	"RESTORE"
		DC	"NEW"
		DC	"BORDER"
		DC	"CONTINUE"
		DC	"DIM"
		DC	"REM"
		DC	"FOR"
		DC	"GO TO"
		DC	"GO SUB"
		DC	"INPUT"
		DC	"LOAD"
		DC	"LIST"
		DC	"LET"
		DC	"PAUSE"
		DC	"NEXT"
		DC	"POKE"
		DC	"PRINT"
		DC	"PLOT"
		DC	"RUN"
		DC	"SAVE"
		DC	"RANDOMIZE"
		DC	"IF"
		DC	"CLS"
		DC	"DRAW"
		DC	"CLEAR"
		DC	"RETURN"
		DC	"COPY"

; maps for the standard 40-key ZX Spectrum keyboard
; SHIFT (#27) is read directly.
MAIN_KEYS:	DB	#42			;B
		DB	#48			;H
		DB	#59			;Y
		DB	#36			;6
		DB	#35			;5
		DB	#54			;T
		DB	#47			;G
		DB	#56			;V
		DB	#4E			;N
		DB	#4A			;J
		DB	#55			;U
		DB	#37			;7
		DB	#34			;4
		DB	#52			;R
		DB	#46			;F
		DB	#43			;C
		DB	#4D			;M
		DB	#4B			;K
		DB	#49			;I
		DB	#38			;8
		DB	#33			;3
		DB	#45			;E
		DB	#44			;D
		DB	#58			;X
		DB	#0E			;Symbol shift
		DB	#4C			;L
		DB	#4F			;O
		DB	#39			;9
		DB	#32			;2
		DB	#57			;W
		DB	#53			;S
		DB	#5A			;Z
		DB	#20			;Space
		DB	#0D			;Enter
		DB	#50			;P
		DB	#30			;0
		DB	#31			;1
		DB	#51			;Q
		DB	#41			;A

; Unshifted extended mode keys.
; The green keywords on the original keyboard.
E_UNSHIFT:	DB	#E3			;READ
		DB	#C4			;BIN
		DB	#E0			;LPRINT
		DB	#E4			;DATA
		DB	#B4			;TAN
		DB	#BC			;SGN
		DB	#BD			;ABS
		DB	#BB			;SQR
		DB	#AF			;CODE
		DB	#B0			;VAL
		DB	#B1			;LEN
		DB	#C0			;USR
		DB	#A7			;PI
		DB	#A6			;INKEY$
		DB	#BE			;PEEK
		DB	#AD			;TAB
		DB	#B2			;SIN
		DB	#BA			;INT
		DB	#E5			;RESTORE
		DB	#A5			;RND
		DB	#C2			;CHR$
		DB	#E1			;LLIST
		DB	#B3			;COS
		DB	#B9			;EXP
		DB	#C1			;STR$
		DB	#B8			;LN

; Shifted extended mode keys.
; The red keywords below keys on the original keyboard.
EXT_SHIFT:	DB	#7E			;~
		DB	#DC			;BRIGHT
		DB	#DA			;PAPER
		DB	#5C			;\
		DB	#B7			;ATN
		DB	#7B			;{
		DB	#7D			;}
		DB	#D8			;CIRCLE
		DB	#BF			;IN
		DB	#AE			;VAL$
		DB	#AA			;SCREEN$
		DB	#AB			;ATTR
		DB	#DD			;INVERSE
		DB	#DE			;OVER
		DB	#DF			;OUT
		DB	#7F			;(c)
		DB	#B5			;ASN
		DB	#D6			;VERIFY
		DB	#7C			;|
		DB	#D5			;MERGE
		DB	#5D			;]
		DB	#DB			;FLASH
		DB	#B6			;ACS
		DB	#D9			;INK
		DB	#5B			;[
		DB	#D7			;BEEP

; Shift key control codes assigned to the digits.
; White labels above the number characters on the digits keys on the orig. keyboard.
CTL_CODES:	DB	#0C			;DELETE
		DB	#07			;EDIT
		DB	#06			;Caps lock
		DB	#04			;True video
		DB	#05			;Inverse video
		DB	#08			;Cursor left
		DB	#0A			;Cursor down
		DB	#0B			;Cursor up
		DB	#09			;Cursor right
		DB	#0F			;GRAPH

; Keys shifted with Symbol shift.
; Red symbols on the alphabetic characters on the original keyboard.
SYM_CODES:	DB	#E2			;STOP
		DB	#2A			;*
		DB	#3F			;?
		DB	#CD			;STEP
		DB	#C8			;>=
		DB	#CC			;TO
		DB	#CB			;THEN
		DB	#5E			;^
		DB	#AC			;AT
		DB	#2D			;-
		DB	#2B			;+
		DB	#3D			;=
		DB	#2E			;.
		DB	#2C			;,
		DB	#3B			;;
		DB	#22			;"
		DB	#C7			;<=
		DB	#3C			;<
		DB	#C3			;NOT
		DB	#3E			;>
		DB	#C5			;OR
		DB	#2F			;/
		DB	#C9			;<>
		DB	#60			;Â£
		DB	#C6			;AND
		DB	#3A			;:

; Keywords assigned to the digits in extended mode.
; On the original keyboard those are remaining red keywords below the keys.
E_DIGITS:	DB	#D0			;FORMAT
		DB	#CE			;DEF FN
		DB	#A8			;FN
		DB	#CA			;LINE
		DB	#D3			;OPEN #
		DB	#D4			;CLOSE #
		DB	#D1			;MOVE
		DB	#D2			;ERASE
		DB	#A9			;POINT
		DB	#CF			;CAT

; Keyboard scanning
; returns 1 or 2 keys in DE
KEY_SCAN:	LD	L,#2F
		LD	DE,#FFFF
		LD	BC,#FEFE
KEY_LINE:	IN	A,(C)
		CPL
		AND	#1F
		JR	Z,KEY_DONE
		LD	H,A
		LD	A,L
KEY_3KEYS:	INC	D
		RET	NZ
KEY_BITS:	SUB	#08
		SRL	H
		JR	NC,KEY_BITS
		LD	D,E
		LD	E,A
		JR	NZ,KEY_3KEYS
KEY_DONE:	DEC	L
		RLC	B
		JR	C,KEY_LINE
		LD	A,D
		INC	A
		RET	Z
		CP	#28
		RET	Z
		CP	#19
		RET	Z
		LD	A,E
		LD	E,D
		LD	D,A
		CP	#18
		RET

; Scan keyboard and decode value
KEYBOARD:	CALL	KEY_SCAN
		RET	NZ
		LD	HL,#5C00
K_ST_LOOP:	BIT	7,(HL)
		JR	NZ,K_CH_SET
		INC	HL
		DEC	(HL)
		DEC	HL
		JR	NZ,K_CH_SET
		LD	(HL),#FF
K_CH_SET:	LD	A,L
		LD	HL,#5C04
		CP	L
		JR	NZ,K_ST_LOOP
		CALL	K_TEST
		RET	NC
		LD	HL,#5C00
		CP	(HL)
		JR	Z,K_REPEAT
		EX	DE,HL
		LD	HL,#5C04
		CP	(HL)
		JR	Z,K_REPEAT
		BIT	7,(HL)
		JR	NZ,K_NEW
		EX	DE,HL
		BIT	7,(HL)
		RET	Z
K_NEW:		LD	E,A
		LD	(HL),A
		INC	HL
		LD	(HL),#05
		INC	HL
		LD	A,(#5C09)
		LD	(HL),A
		INC	HL
		LD	C,(IY+#07)
		LD	D,(IY+#01)
		PUSH	HL
		CALL	K_DECODE
		POP	HL
		LD	(HL),A
K_END:		LD	(#5C08),A
		SET	5,(IY+#01)
		RET

; Repeat key routine
K_REPEAT:	INC	HL
		LD	(HL),#05
		INC	HL
		DEC	(HL)
		RET	NZ
		LD	A,(#5C0A)
		LD	(HL),A
		INC	HL
		LD	A,(HL)
		JR	K_END

; Test key value
K_TEST:		LD	B,D
		LD	D,#00
		LD	A,E
		CP	#27
		RET	NC
		CP	#18
		JR	NZ,K_MAIN
		BIT	7,B
		RET	NZ
K_MAIN:		LD	HL,MAIN_KEYS
		ADD	HL,DE
		LD	A,(HL)
		SCF
		RET

; Keyboard decoding
K_DECODE:	LD	A,E
		CP	#3A
		JR	C,K_DIGIT
		DEC	C
		JP	M,K_KLC_LET
		JR	Z,K_E_LET
		ADD	A,#4F
		RET

; Test if B is empty (i.e. not a shift)
; forward to K_LOOK_UP if neither shift
K_E_LET:	LD	HL,#01EB		;E_UNSHIFT-#41
		INC	B
		JR	Z,K_LOOK_UP
		LD	HL,#0205		;EXT_SHIFT-#41

; Prepare to index
K_LOOK_UP:	LD	D,#00
		ADD	HL,DE
		LD	A,(HL)
		RET

; Prepare base of SYM_CODES
K_KLC_LET:	LD	HL,#0229		;SYM_CODES-#41
		BIT	0,B
		JR	Z,K_LOOK_UP
		BIT	3,D
		JR	Z,K_TOKENS
		BIT	3,(IY+#30)
		RET	NZ
		INC	B
		RET	NZ
		ADD	A,#20
		RET
; Add offset to main code to get tokens
K_TOKENS:	ADD	A,#A5
		RET

; Digits, space, enter and symbol shift decoding
K_DIGIT:	CP	#30
		RET	C
		DEC	C
		JP	M,K_KLC_DGT
		JR	NZ,K_GRA_DGT
		LD	HL,#0254		;E_DIGITS-#30
		BIT	5,B
		JR	Z,K_LOOK_UP
		CP	#38
		JR	NC,K_8_AND_9
		SUB	#20
		INC	B
		RET	Z
		ADD	A,#08
		RET

; Digits 8 and 9 decoding
K_8_AND_9:	SUB	#36
		INC	B
		RET	Z
		ADD	A,#FE
		RET

; Graphics mode with digits
K_GRA_DGT:	LD	HL,#0230		;CTL_CODES-#30
		CP	#39
		JR	Z,K_LOOK_UP
		CP	#30
		JR	Z,K_LOOK_UP
		AND	#07
		ADD	A,#80
		INC	B
		RET	Z
		XOR	#0F
		RET

; Digits in 'KLC' mode
K_KLC_DGT:	INC	B
		RET	Z
		BIT	5,B
		LD	HL,#0230		;CTL_CODES-#30
		JR	NZ,K_LOOK_UP
		SUB	#10
		CP	#22
		JR	Z,K_AT_CHAR
		CP	#20
		RET	NZ
		LD	A,#5F
		RET

; Substitute ascii '@'
K_AT_CHAR	LD	A,#40
		RET

; Routine to control loudspeaker
BEEPER:		DI
		LD	A,L
		SRL	L
		SRL	L
		CPL
		AND	#03
		LD	C,A
		LD	B,#00
		LD	IX,BE_IX_3
		ADD	IX,BC
		LD	A,(#5C48)
		AND	#38
		RRCA
		RRCA
		RRCA
		OR	#08
BE_IX_3:	NOP
		NOP
		NOP
		INC	B
		INC	C
BE_HL_LP:	DEC	C
		JR	NZ,BE_HL_LP
		LD	C,#3F
		DEC	B
		JP	NZ,BE_HL_LP
		XOR	#10
		OUT	(#FE),A
		LD	B,H
		LD	C,A
		BIT	4,A
		JR	NZ,BE_AGAIN
		LD	A,D
		OR	E
		JR	Z,BE_END
		LD	A,C
		LD	C,L
		DEC	DE
L_03F0:		JP	(IX)
BE_AGAIN:	LD	C,L
		INC	C
		JP	(IX)
BE_END:		EI
		RET

; Handle BEEP command
BEEP:		RST	#28			;*calc
		DB	$31			;DUPLICATE - duplicate pitch
		DB	$27			;INT - convert to integer
		DB	$C0			;st-mem-0 - store integer pitch to memory 0
		DB	$03			;SUBTRACT - calculate fractional part of pitch = fp_pitch - int_pitch
		DB	$34			;STK_DATA - push constant
		DB	$EC			;Exponent: $7C, Bytes: 4 - constant = 0.05762265
		DB	$6C,$98,$1F,$F5 	;($6C,$98,$1F,$F5)
		DB	$04			;MULTIPLY - compute:
		DB	$A1			;STK_ONE - 1 + 0.05762265 * fraction_part(pitch)
		DB	$0F			;ADDITION
		DB	$38			;END_CALC - leave on calc stack

		LD	HL,#5C92
		LD	A,(HL)
		AND	A
		JR	NZ,REPORT_B
		INC	HL
		LD	C,(HL)
		INC	HL
		LD	B,(HL)
		LD	A,B
		RLA
		SBC	A,A
		CP	C
		JR	NZ,REPORT_B
		INC	HL
		CP	(HL)
		JR	NZ,REPORT_B
		LD	A,B
		ADD	A,#3C
		JP	P,BE_I_OK
		JP	PO,REPORT_B
BE_I_OK:	LD	B,#FA
BE_OCTAVE:	INC	B
		SUB	#0C
		JR	NC,BE_OCTAVE
		ADD	A,#0C
		PUSH	BC
		LD	HL,SEMI_TONE
		CALL	LOC_MEM
		CALL	STACK_NUM

		RST	#28			;*calc
		DB	#04			;MULTIPLY
		DB	#38			;END_CALC

		POP	AF
		ADD	A,(HL)
		LD	(HL),A

		RST	#28			;*calc
		DB	#C0			;st-mem-0
		DB	#02			;DELETE
		DB	#31			;DUPLICATE
		DB	#38			;END_CALC

		CALL	FIND_INT1
		CP	#0B
		JR	NC,REPORT_B

		RST	#28			;*calc
		DB	#E0			;get-mem-0
		DB	#04			;MULTIPLY
		DB	#E0			;get-mem-0
		DB	#34			;STK_DATA
		DB	#80			;Exponent $93, Bytes: 3
		DB	#43, #55, #9F, #80
		DB	#01			;EXCHANGE
		DB	#05			;DIVISION
		DB	#34			;STK_DATA
		DB	#35			;Exponent: $85, Bytes: 1
		DB	#71
		DB	#03			;SUBTRACT
		DB	#38			;END_CALC

		CALL	FIND_INT2
		PUSH	BC
		CALL	FIND_INT2
		POP	HL
		LD	D,B
		LD	E,C
		LD	A,D
		OR	E
		RET	Z
		DEC	DE
		JP	BEEPER

REPORT_B:	RST	#08			; ERROR_1
		DB	#0A			; Integer out of range

; Semi-tone table.
; Holds frequencies corresponding to semitones in middle octave.
SEMI_TONE:	DB	#89, #02, #D0, #12, #86
		DB	#89, #0A, #97, #60, #75
		DB	#89, #12, #D5, #17, #1F
		DB	#89, #1B, #90, #41, #02
		DB	#89, #24, #D0, #53, #CA
		DB	#89, #2E, #9D, #36, #B1
		DB	#89, #38, #FF, #49, #3E
		DB	#89, #43, #FF, #6A, #73
		DB	#89, #4F, #A7, #00, #54
		DB	#89, #5C, #00, #00, #00
		DB	#89, #69, #14, #F6, #24
		DB	#89, #76, #F1, #10, #05
 
NONAME:		RST	#18
		LD	HL,NNTAB
		LD	BC,#0005
		CPIR
		JP	NZ,L_1C8C
		LD	C,#00
		JP	L_2AA9
NNTAB:		DB	#3A
		DW	#AA0D
		DW	#E4AF
		DW	#0000

; Save header and program or data
SA_BYTES:	LD	HL,SA_LD_RET
		PUSH	HL
SA_BYTES1:	LD	HL,L_1F80
		BIT	7,A
		JR	Z,SA_FLAG
		LD	HL,L_0C98
SA_FLAG:	EX	AF,AF'
		INC	DE
		DEC	IX
		DI
		LD	A,#02
		LD	B,A
SA_LEADER:	DJNZ	SA_LEADER
		OUT	(#FE),A
		XOR	#0F
		LD	B,#A4
		DEC	L
		JR	NZ,SA_LEADER
		DEC	B
		DEC	H
		JP	P,SA_LEADER
		LD	B,#2F
SA_SYNC_1:	DJNZ	SA_SYNC_1
		OUT	(#FE),A
		LD	A,#0D
		LD	B,#37
SA_SYNC_2:	DJNZ	SA_SYNC_2
		OUT	(#FE),A
		LD	BC,#3B0E		; B=$3B time(*), C=$0E, YELLOW, MIC OFF.
		EX	AF,AF'
		LD	L,A
		JP	SA_START

SA_LOOP:	LD	A,D
		OR	E
		JR	Z,SA_PARITY
		LD	L,(IX+#00)
SA_LOOP_P:	LD	A,H
		XOR	L
SA_START:	LD	H,A
		LD	A,#01
		SCF
		JP	SA_8_BITS

SA_PARITY:	LD	L,H
		JR	SA_LOOP_P

SA_BIT_2:	LD	A,C
		BIT	7,B
SA_BIT_1:	DJNZ	SA_BIT_1
		JR	NC,SA_OUT
		LD	B,#42
SA_SET:		DJNZ	SA_SET
SA_OUT		OUT	(#FE),A
		LD	B,#3E
		JR	NZ,SA_BIT_2
		DEC	B
		XOR	A
		INC	A
SA_8_BITS	RL	L
		JP	NZ,SA_BIT_1
		DEC	DE
		INC	IX
		LD	B,#31
		LD	A,#7F
		IN	A,(#FE)
		RRA
		RET	NC
		LD	A,D
		INC	A
		JP	NZ,SA_LOOP
		LD	B,#3B
SA_DELAY	DJNZ	SA_DELAY
		RET

; Reset border nad check BREAK for LOAD and SAVE
SA_LD_RET	PUSH	AF
		LD	A,(#5C48)
		AND	#38
		RRCA
		RRCA
		RRCA
		OUT	(#FE),A
		LD	A,#7F
		IN	A,(#FE)
		RRA
		EI
		JR	C,SA_LD_END
REPORT_DA:	RST	#08			; Error report
		DB	#0C			; BREAK - CONT repeats
SA_LD_END:	POP	AF
		RET

; Load header or data
LD_BYTES:	INC	D
		EX	AF,AF'
		DEC	D
		DI
		LD	A,#0F
		OUT	(#FE),A
		LD	HL,SA_LD_RET
		PUSH	HL
		IN	A,(#FE)
		RRA
LD_BYTES1:	AND	#20
		OR	#02
		LD	C,A
		CP	A
LD_BREAK:	RET	NZ
LD_START:	CALL	LD_EDGE_1
		JR	NC,LD_BREAK
		LD	HL,#0115		; smaller delay (was #0415 in orig. ROM)
LD_WAIT:	DJNZ	LD_WAIT
		DEC	HL
		LD	A,H
		OR	L
		JR	NZ,LD_WAIT
		CALL	LD_EDGE_2
		JR	NC,LD_BREAK
LD_LEADER:	LD	B,#9C
		CALL	LD_EDGE_2
		JR	NC,LD_BREAK
		LD	A,#C6
		CP	B
		JR	NC,LD_START
		INC	H
		JR	NZ,LD_LEADER
LD_SYNC:	LD	B,#C9
		CALL	LD_EDGE_1
		JR	NC,LD_BREAK
		LD	A,B
		CP	#D4
		JR	NC,LD_SYNC
		CALL	LD_EDGE_1
		RET	NC
		LD	A,C
		XOR	#03
		LD	C,A
		LD	H,#00
		LD	B,#B0
		JR	LD_MARKER

LD_LOOP:	EX	AF,AF'
		JR	NZ,LD_FLAG
		JR	NC,LD_VERIFY
		LD	(IX+#00),L
		JR	LD_NEXT

LD_FLAG:	RL	C
		XOR	L
		RET	NZ
		LD	A,C
		RRA
		LD	C,A
		INC	DE
		JR	LD_DEC

LD_VERIFY:	LD	A,(IX+#00)
		XOR	L
		RET	NZ
LD_NEXT:	INC	IX
LD_DEC:		DEC	DE
		EX	AF,AF'
		LD	B,#B2
LD_MARKER:	LD	L,#01
LD_8_BITS:	CALL	LD_EDGE_2
		RET	NC
		LD	A,#CB
		CP	B
		RL	L
		LD	B,#B0
		JP	NC,LD_8_BITS
		LD	A,H
		XOR	L
		LD	H,A
		LD	A,D
		OR	E
		JR	NZ,LD_LOOP
		LD	A,H
		CP	#01
		RET

; Check signal being loaded
LD_EDGE_2:	CALL	LD_EDGE_1
		RET	NC
LD_EDGE_1:	LD	A,#16
LD_DELAY:	DEC	A
		JR	NZ,LD_DELAY
		AND	A
LD_SAMPLE	INC	B
		RET	Z
		LD	A,#7F
		IN	A,(#FE)
		RRA
		RET	NC
		XOR	C
		AND	#20
		JR	Z,LD_SAMPLE
		LD	A,C
		CPL
		LD	C,A
		AND	#07
		OR	#08
		OUT	(#FE),A
		SCF
		RET

; Entry point for tape commands
SAVE_ETC:	POP	AF
		LD	A,(#5C74)
		SUB	#E0
		LD	(#5C74),A
		CALL	NONAME			; File name is not mandatory now
		CALL	L_2530
		JR	Z,SA_DATA
		LD	BC,#0011
		LD	A,(#5C74)
		AND	A
		JR	Z,SA_SPACE
		LD	C,#22
SA_SPACE:	RST	#30
		PUSH	DE
		POP	IX
		LD	B,#0B
		LD	A,#20
SA_BLANK:	LD	(DE),A
		INC	DE
		DJNZ	SA_BLANK
		LD	(IX+#01),#FF
		CALL	L_2BF1
		LD	HL,#FFF6
		DEC	BC
		ADD	HL,BC
		INC	BC
		JR	NC,SA_NAME
		LD	A,(#5C74)
		AND	A
		JR	NZ,SA_NULL
REPORT_FA:	RST	#08			; Error report
		DB	#0E			; Invalid file name
SA_NULL:	LD	A,B
		OR	C
		JR	Z,SA_DATA
		LD	BC,#000A
SA_NAME:	PUSH	IX
		POP	HL
		INC	HL
		EX	DE,HL
		LDIR
SA_DATA:	RST	#18
		CP	#E4
		JR	NZ,SA_SCR
		LD	A,(#5C74)
		CP	#03
		JP	Z,L_1C8A
		RST	#20
		CALL	L_28B2
		SET	7,C
		JR	NC,SA_V_OLD
		LD	HL,#0000
		LD	A,(#5C74)
		DEC	A
		JR	Z,SA_V_NEW
REPORT_2A:	RST	#08			; Error report
		DB	#01			; Variable not found
SA_V_OLD:	JP	NZ,L_1C8A
		CALL	L_2530
		JR	Z,SA_DATA_1
		INC	HL
		LD	A,(HL)
		LD	(IX+#0B),A
		INC	HL
		LD	A,(HL)
		LD	(IX+#0C),A
		INC	HL
SA_V_NEW:	LD	(IX+#0E),C
		LD	A,#01
		BIT	6,C
		JR	Z,SA_V_TYPE
		INC	A
SA_V_TYPE:	LD	(IX+#00),A
SA_DATA_1:	EX	DE,HL
		RST	#20
		CP	#29
		JR	NZ,SA_V_OLD
		RST	#20
		CALL	CHECK_END
		EX	DE,HL
		JP	SA_ALL

SA_SCR:		CP	#AA
		JR	NZ,SA_CODE
		LD	A,(#5C74)
		CP	#03
		JP	Z,L_1C8A
		RST	#20
		CALL	CHECK_END
		LD	(IX+#0B),#00
		LD	(IX+#0C),#1B
		LD	HL,#4000
		LD	(IX+#0D),L
		LD	(IX+#0E),H
		JR	SA_TYPE_3

SA_CODE:	CP	#AF
		JR	NZ,SA_LINE
		LD	A,(#5C74)
		CP	#03
		JP	Z,L_1C8A
		RST	#20
		CALL	L_2048
		JR	NZ,SA_CODE_1
		LD	A,(#5C74)
		AND	A
		JP	Z,L_1C8A
		CALL	L_1CE6
		JR	SA_CODE_2

SA_CODE_1:	CALL	L_1C82
		RST	#18
		CP	#2C
		JR	Z,SA_CODE_3
		LD	A,(#5C74)
		AND	A
		JP	Z,L_1C8A
SA_CODE_2:	CALL	L_1CE6
		JR	SA_CODE_4

SA_CODE_3:	RST	#20
		CALL	L_1C82
SA_CODE_4	CALL	CHECK_END
		CALL	FIND_INT2
		LD	(IX+#0B),C
		LD	(IX+#0C),B
		CALL	FIND_INT2
		LD	(IX+#0D),C
		LD	(IX+#0E),B
		LD	H,B
		LD	L,C
SA_TYPE_3	LD	(IX+#00),#03
		JR	SA_ALL

SA_LINE:	CP	#CA
		JR	Z,SA_LINE_1
		CALL	CHECK_END
		LD	(IX+#0E),#80
		JR	SA_TYPE_0

SA_LINE_1:	LD	A,(#5C74)
		AND	A
		JP	NZ,L_1C8A
		RST	#20
		CALL	L_1C82
		CALL	CHECK_END
		CALL	FIND_INT2
		LD	(IX+#0D),C
		LD	(IX+#0E),B
SA_TYPE_0:	LD	(IX+#00),#00
		LD	HL,(#5C59)
		LD	DE,(#5C53)
		SCF
		SBC	HL,DE
		LD	(IX+#0B),L
		LD	(IX+#0C),H
		LD	HL,(#5C4B)
		SBC	HL,DE
		LD	(IX+#0F),L
		LD	(IX+#10),H
		EX	DE,HL
SA_ALL:		LD	A,(#5C74)
		AND	A
		JP	Z,L_0970
		PUSH	HL
		LD	BC,#0011
		ADD	IX,BC
LD_LOOK_H:	PUSH	IX
		LD	DE,#0011
		XOR	A
		SCF
		CALL	LD_BYTES
		POP	IX
		JR	NC,LD_LOOK_H
		LD	A,#FE
		CALL	L_1601
		LD	(IY+#52),#FF
		LD	C,#80
		LD	A,(IX+#00)
		CP	(IX-#11)
		JR	NZ,LD_TYPE
		LD	C,#F6
LD_TYPE:	CP	#04
		JR	NC,LD_LOOK_H
		LD	DE,TAPE_MSGS2
		PUSH	BC
		CALL	L_0C0A
		POP	BC
		PUSH	IX
		POP	DE
		LD	HL,#FFF0
		ADD	HL,DE
		LD	B,#0A
		LD	A,(HL)
		INC	A
		JR	NZ,LD_NAME
		LD	A,C
		ADD	A,B
		LD	C,A
LD_NAME:	INC	DE
		LD	A,(DE)
		CP	(HL)
		INC	HL
		JR	NZ,LD_CH_PR
		INC	C
LD_CH_PR:	RST	#10
		DJNZ	LD_NAME
		BIT	7,C
		JR	NZ,LD_LOOK_H
		LD	A,#0D
		RST	#10
		POP	HL
		LD	A,(IX+#00)
		CP	#03
		JR	Z,VR_CONTROL
		LD	A,(#5C74)
		DEC	A
		JP	Z,L_0808
		CP	#02
		JP	Z,L_08B6
VR_CONTROL	PUSH	HL			; Handle VERIFY control
		LD	L,(IX-#06)
L_07CD	EQU	$-2
	LD	H,(IX-#05)
	LD	E,(IX+#0B)
	LD	D,(IX+#0C)
	LD	A,H
	OR	L
	JR	Z,L_07E9
	SBC	HL,DE
	JR	C,L_0806
	JR	Z,L_07E9
	LD	A,(IX+#00)
	CP	#03
	JR	NZ,L_0806
L_07E9	POP	HL
	LD	A,H
	OR	L
	JR	NZ,L_07F4
	LD	L,(IX+#0D)
	LD	H,(IX+#0E)
L_07F4	PUSH	HL
	POP	IX
	LD	A,(#5C74)
	CP	#02
	SCF
	JR	NZ,L_0800
	AND	A
L_0800	LD	A,#FF
L_0802	CALL	LD_BYTES
	RET	C
L_0806	RST	#08
;
;#0807
	DB	#1A
;
L_0808	LD	E,(IX+#0B)
	LD	D,(IX+#0C)
	PUSH	HL
	LD	A,H
	OR	L
	JR	NZ,L_0819
	INC	DE
	INC	DE
	INC	DE
	EX	DE,HL
	JR	L_0825
;
L_0819	LD	L,(IX-#06)
	LD	H,(IX-#05)
	EX	DE,HL
	SCF
	SBC	HL,DE
	JR	C,L_082E
L_0825	LD	DE,#0005
	ADD	HL,DE
	LD	B,H
	LD	C,L
	CALL	L_1F05
L_082E	POP	HL
	LD	A,(IX+#00)
	AND	A
	JR	Z,L_0873
	LD	A,H
	OR	L
	JR	Z,L_084C
	DEC	HL
	LD	B,(HL)
	DEC	HL
	LD	C,(HL)
	DEC	HL
	INC	BC
	INC	BC
	INC	BC
	LD	(#5C5F),IX
	CALL	L_19E8
	LD	IX,(#5C5F)
L_084C	LD	HL,(#5C59)
	DEC	HL
	LD	C,(IX+#0B)
	LD	B,(IX+#0C)
	PUSH	BC
	INC	BC
	INC	BC
	INC	BC
	LD	A,(IX-#03)
	PUSH	AF
	CALL	MAKE_ROOM
	INC	HL
	POP	AF
	LD	(HL),A
	POP	DE
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	PUSH	HL
	POP	IX
	SCF
	LD	A,#FF
	JP	L_0802
;
L_0873	EX	DE,HL
	LD	HL,(#5C59)
	DEC	HL
	LD	(#5C5F),IX
	LD	C,(IX+#0B)
	LD	B,(IX+#0C)
	PUSH	BC
	CALL	L_19E5
	POP	BC
	PUSH	HL
	PUSH	BC
	CALL	MAKE_ROOM
	LD	IX,(#5C5F)
	INC	HL
	LD	C,(IX+#0F)
	LD	B,(IX+#10)
	ADD	HL,BC
	LD	(#5C4B),HL
	LD	H,(IX+#0E)
	LD	A,H
	AND	#C0
	JR	NZ,L_08AD
	LD	L,(IX+#0D)
	LD	(#5C42),HL
	LD	(IY+#0A),#00
L_08AD	POP	DE
	POP	IX
	SCF
	LD	A,#FF
	JP	L_0802
;
L_08B6	LD	C,(IX+#0B)
	LD	B,(IX+#0C)
	PUSH	BC
	INC	BC
	RST	#30
	LD	(HL),#80
	EX	DE,HL
	POP	DE
	PUSH	HL
	PUSH	HL
	POP	IX
	SCF
	LD	A,#FF
	CALL	L_0802
	POP	HL
	LD	DE,(#5C53)
L_08D2	LD	A,(HL)
	AND	#C0
	JR	NZ,L_08F0
L_08D7	LD	A,(DE)
	INC	DE
	CP	(HL)
	INC	HL
	JR	NZ,L_08DF
	LD	A,(DE)
	CP	(HL)
L_08DF	DEC	DE
	DEC	HL
	JR	NC,L_08EB
	PUSH	HL
	EX	DE,HL
	CALL	L_19B8
	POP	HL
	JR	L_08D7
;
L_08EB	CALL	L_092C
	JR	L_08D2
;
L_08F0	LD	A,(HL)
	LD	C,A
	CP	#80
	RET	Z
	PUSH	HL
	LD	HL,(#5C4B)
L_08F9	LD	A,(HL)
	CP	#80
	JR	Z,L_0923
	CP	C
	JR	Z,L_0909
L_0901	PUSH	BC
	CALL	L_19B8
	POP	BC
	EX	DE,HL
	JR	L_08F9
;
L_0909	AND	#E0
	CP	#A0
	JR	NZ,L_0921
	POP	DE
	PUSH	DE
	PUSH	HL
L_0912	INC	HL
	INC	DE
	LD	A,(DE)
	CP	(HL)
	JR	NZ,L_091E
	RLA
	JR	NC,L_0912
	POP	HL
	JR	L_0921
;
L_091E	POP	HL
	JR	L_0901
;
L_0921	LD	A,#FF
L_0923	POP	DE
	EX	DE,HL
	INC	A
	SCF
	CALL	L_092C
	JR	L_08F0
;
L_092C	JR	NZ,L_093E
	EX	AF,AF'
	LD	(#5C5F),HL
	EX	DE,HL
	CALL	L_19B8
	CALL	L_19E8
	EX	DE,HL
	LD	HL,(#5C5F)
	EX	AF,AF'
L_093E	EX	AF,AF'
	PUSH	DE
	CALL	L_19B8
	LD	(#5C5F),HL
	LD	HL,(#5C53)
	EX	(SP),HL
	PUSH	BC
	EX	AF,AF'
	JR	C,L_0955
	DEC	HL
	CALL	MAKE_ROOM
	INC	HL
	JR	L_0958
;
L_0955	CALL	MAKE_ROOM
L_0958	INC	HL
	POP	BC
	POP	DE
	LD	(#5C53),DE
	LD	DE,(#5C5F)
	PUSH	BC
	PUSH	DE
	EX	DE,HL
	LDIR
	POP	HL
	POP	BC
	PUSH	DE
	CALL	L_19E8
	POP	DE
	RET
;
L_0970	PUSH	HL
	LD	A,#FD
	CALL	L_1601
	XOR	A
	LD	DE,TAPE_MSGS
	CALL	L_0C0A
	SET	5,(IY+#02)
	CALL	L_15D4
	PUSH	IX
	LD	DE,#0011
	XOR	A
	CALL	SA_BYTES
	POP	IX
	LD	B,#32
L_0991	HALT
	DJNZ	L_0991
	LD	E,(IX+#0B)
	LD	D,(IX+#0C)
	POP	IX
	LD	A,#FF
	JP	SA_BYTES
;
TAPE_MSGS:	DB	#80
		DC	"Press REC & PLAY, then any key."
TAPE_MSGS2:	EQU	$-1
		DB	#0D
		DC	"Program: "
		DB	#0D
		DC	"Number array: "
		DB	#0D
		DC	"Character array: "
		DB	#0D
		DC	"Bytes: "
;
L_09F4	CALL	DISPL
	CP	#1E
	JP	NC,L_0AD9
	CP	#06
	JR	C,L_0A69
	CP	#18
	JR	NC,L_0A69
	LD	HL,L_0A0B
	LD	E,A
	LD	D,#00
	ADD	HL,DE
L_0A0B	LD	E,(HL)
	ADD	HL,DE
	PUSH	HL
	JP	PO_FETCH
;
;#0A11
	DB	#4E
	DB	#57
	DB	#10
	DB	#29
	DB	#54
	DB	#53
	DB	#52
	DB	#37
	DB	#50
	DB	#4F
	DB	#5F
	DB	#5E
	DB	#5D
	DB	#5C
	DB	#5B
	DB	#5A
	DB	#54
	DB	#53
;
;#0A23
	INC	C
	LD	A,#22
	CP	C
	JR	NZ,L_0A3A
	BIT	1,(IY+#01)
	JR	NZ,L_0A38
	INC	B
	LD	C,#02
	LD	A,#19
	CP	B
	JR	NZ,L_0A3A
	DEC	B
L_0A38	LD	C,#21
L_0A3A	JP	L_0DD9
;
	LD	A,(#5C91)
	PUSH	AF
	LD	(IY+#57),#01
	LD	A,#20
	CALL	L_0AD9
	POP	AF
	LD	(#5C91),A
	RET
;
	BIT	1,(IY+#01)
	JP	NZ,L_0ECD
	LD	C,#21
	CALL	L_0C55
	DEC	B
	JP	L_0DD9

	CALL	PO_FETCH
	LD	A,C
	DEC	A
	DEC	A
	AND	#10
	JR	L_0AC3
;
L_0A69	LD	A,#3F
	JR	L_0AD9
;
L_0A6D	LD	DE,L_0A87
	LD	(#5C0F),A
	JR	L_0A80
;
	LD	DE,L_0A6D
	JR	L_0A7D
;
	LD	DE,L_0A87
L_0A7D	LD	(#5C0E),A
L_0A80	LD	HL,(#5C51)
	LD	(HL),E
	INC	HL
	LD	(HL),D
	RET
;
L_0A87	LD	DE,L_09F4
	CALL	L_0A80
	LD	HL,(#5C0E)
	LD	D,A
	LD	A,L
	CP	#16
	JP	C,L_2211
	JR	NZ,L_0AC2
	LD	B,H
	LD	C,D
	LD	A,#1F
	SUB	C
	JR	C,L_0AAC
	ADD	A,#02
	LD	C,A
	BIT	1,(IY+#01)
	JR	NZ,L_0ABF
	LD	A,#16
	SUB	B
L_0AAC	JP	C,L_1E9F
	INC	A
	LD	B,A
	INC	B
	BIT	0,(IY+#02)
	JP	NZ,L_0C55
	CP	(IY+#31)
	JP	C,L_0C86
L_0ABF	JP	L_0DD9
;
L_0AC2	LD	A,H
L_0AC3	CALL	PO_FETCH
	ADD	A,C
	DEC	A
	AND	#1F
	RET	Z
	LD	D,A
	SET	0,(IY+#01)
L_0AD0	LD	A,#20
	CALL	L_0C3B
	DEC	D
	JR	NZ,L_0AD0
	RET
;
L_0AD9	CALL	L_0B24
L_0ADC	BIT	1,(IY+#01)
	JR	NZ,L_0AFC
	BIT	0,(IY+#02)
	JR	NZ,L_0AF0
	LD	(#5C88),BC
	LD	(#5C84),HL
	RET
;
L_0AF0	LD	(#5C8A),BC
	LD	(#5C82),BC
	LD	(#5C86),HL
	RET
;
L_0AFC	LD	(IY+#45),C
	LD	(#5C80),HL
	RET

;Fetch position parameters
PO_FETCH:	BIT	1,(IY+#01)
		JR	NZ,PO_F_FR
		LD	BC,(#5C88)
		LD	HL,(#5C84)
		BIT	0,(IY+#02)
		RET	Z
		LD	BC,(#5C8A)
		LD	HL,(#5C86)
		RET

PO_F_FR:	LD	C,(IY+#45)
		LD	HL,(#5C80)
		RET
;
L_0B24	CP	#80
	JR	C,L_0B65
	CP	#90
	JR	NC,L_0B52
	LD	B,A
	CALL	L_0B38
	CALL	PO_FETCH
	LD	DE,#5C92
	JR	L_0B7F
;
L_0B38	LD	HL,#5C92
	CALL	L_0B3E
L_0B3E	RR	B
	SBC	A,A
	AND	#0F
	LD	C,A
	RR	B
	SBC	A,A
	AND	#F0
	OR	C
	LD	C,#04
L_0B4C	LD	(HL),A
	INC	HL
	DEC	C
	JR	NZ,L_0B4C
	RET
;
L_0B52	SUB	#A5
	JR	NC,L_0B5F
	ADD	A,#15
	PUSH	BC
	LD	BC,(#5C7B)
	JR	L_0B6A
;
L_0B5F	CALL	L_0C10
	JP	PO_FETCH
;
L_0B65	PUSH	BC
	LD	BC,(#5C36)
L_0B6A	EX	DE,HL
	LD	HL,#5C3B
	RES	0,(HL)
	CP	#20
	JR	NZ,L_0B76
	SET	0,(HL)
L_0B76	LD	H,#00
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,BC
	POP	BC
	EX	DE,HL
L_0B7F	LD	A,C
	DEC	A
	LD	A,#21
	JR	NZ,L_0B93
	DEC	B
	LD	C,A
	BIT	1,(IY+#01)
	JR	Z,L_0B93
	PUSH	DE
	CALL	L_0ECD
	POP	DE
	LD	A,C
L_0B93	CP	C
	PUSH	DE
	CALL	Z,L_0C55
	POP	DE
	PUSH	BC
	PUSH	HL
	LD	A,(#5C91)
	LD	B,#FF
	RRA
	JR	C,L_0BA4
	INC	B
L_0BA4	RRA
	RRA
	SBC	A,A
	LD	C,A
	LD	A,#08
	AND	A
	BIT	1,(IY+#01)
	JR	Z,L_0BB6
	SET	1,(IY+#30)
	SCF
L_0BB6	EX	DE,HL
L_0BB7	EX	AF,AF'
	LD	A,(DE)
	AND	B
	XOR	(HL)
	XOR	C
	LD	(DE),A
	EX	AF,AF'
	JR	C,L_0BD3
	INC	D
L_0BC1	INC	HL
	DEC	A
	JR	NZ,L_0BB7
	EX	DE,HL
	DEC	H
	BIT	1,(IY+#01)
	CALL	Z,L_0BDB
	POP	HL
	POP	BC
	DEC	C
	INC	HL
	RET
;
L_0BD3	EX	AF,AF'
	LD	A,#20
	ADD	A,E
	LD	E,A
	EX	AF,AF'
	JR	L_0BC1
;
L_0BDB	LD	A,H
	RRCA
	RRCA
	RRCA
	AND	#03
	OR	#58
	LD	H,A
	LD	DE,(#5C8F)
	LD	A,(HL)
	XOR	E
	AND	D
	XOR	E
	BIT	6,(IY+#57)
	JR	Z,L_0BFA
	AND	#C7
	BIT	2,A
	JR	NZ,L_0BFA
	XOR	#38
L_0BFA	BIT	4,(IY+#57)
	JR	Z,L_0C08
	AND	#F8
	BIT	5,A
	JR	NZ,L_0C08
	XOR	#07
L_0C08	LD	(HL),A
	RET
;
L_0C0A	PUSH	HL
	LD	H,#00
	EX	(SP),HL
	JR	L_0C14
;
L_0C10	LD	DE,TKN_TABLE
L_0C13	PUSH	AF
L_0C14	CALL	L_0C41
	JR	C,L_0C22
	LD	A,#20
	BIT	0,(IY+#01)
	CALL	Z,L_0C3B
L_0C22	LD	A,(DE)
	AND	#7F
	CALL	L_0C3B
	LD	A,(DE)
	INC	DE
	ADD	A,A
	JR	NC,L_0C22
	POP	DE
	CP	#48
	JR	Z,L_0C35
	CP	#82
	RET	C
L_0C35	LD	A,D
	CP	#03
	RET	C
	LD	A,#20
L_0C3B	PUSH	DE
	EXX
	RST	#10
	EXX
	POP	DE
	RET
;
L_0C41	PUSH	AF
	EX	DE,HL
	INC	A
L_0C44	BIT	7,(HL)
	INC	HL
	JR	Z,L_0C44
	DEC	A
	JR	NZ,L_0C44
	EX	DE,HL
	POP	AF
	CP	#20
	RET	C
	LD	A,(DE)
	SUB	#41
	RET
;
L_0C55	BIT	1,(IY+#01)
	RET	NZ
	LD	DE,L_0DD9
	PUSH	DE
	LD	A,B
	BIT	0,(IY+#02)
	JP	NZ,L_0D02
	CP	(IY+#31)
	JR	C,L_0C86
	RET	NZ
	BIT	4,(IY+#02)
	JR	Z,L_0C88
	LD	E,(IY+#2D)
	DEC	E
	JR	Z,L_0CD2
	LD	A,#00
	CALL	L_1601
	LD	SP,(#5C3F)
	RES	4,(IY+#02)
	RET
;
L_0C86	RST	#08
;
;#0C87
	DB	#04
;
L_0C88	DEC	(IY+#52)
	JR	NZ,L_0CD2
	LD	A,#18
	SUB	B
	LD	(#5C8C),A
	LD	HL,(#5C8F)
	PUSH	HL
	LD	A,(#5C91)
L_0C98	EQU	$-2
	PUSH	AF
	LD	A,#FD
	CALL	L_1601
	XOR	A
	LD	DE,L_0CF8
	CALL	L_0C0A
	SET	5,(IY+#02)
	LD	HL,#5C3B
	SET	3,(HL)
	RES	5,(HL)
	EXX
	CALL	L_15D4
	EXX
	CP	#20
	JR	Z,L_0D00
	CP	#E2
	JR	Z,L_0D00
	OR	#20
	CP	#6E
	JR	Z,L_0D00
	LD	A,#FE
	CALL	L_1601
	POP	AF
	LD	(#5C91),A
	POP	HL
	LD	(#5C8F),HL
L_0CD2	CALL	L_0DFE
	LD	B,(IY+#31)
	INC	B
	LD	C,#21
	PUSH	BC
	CALL	L_0E9B
	LD	A,H
	RRCA
	RRCA
	RRCA
	AND	#03
	OR	#58
	LD	H,A
	LD	DE,#5AE0
	LD	A,(DE)
	LD	C,(HL)
	LD	B,#20
	EX	DE,HL
L_0CF0	LD	(DE),A
	LD	(HL),C
	INC	DE
	INC	HL
	DJNZ	L_0CF0
	POP	BC
	RET
;
L_0CF8	ADD	A,B
	LD	(HL),E
	LD	H,E
	LD	(HL),D
	LD	L,A
	LD	L,H
	LD	L,H
	CP	A
L_0D00	RST	#08
;
;#0D01
	DB	#0C
;
L_0D02	CP	#02
	JR	C,L_0C86
	ADD	A,(IY+#31)
	SUB	#19
	RET	NC
	NEG
	PUSH	BC
	LD	B,A
	LD	HL,(#5C8F)
	PUSH	HL
	LD	HL,(#5C91)
	PUSH	HL
	CALL	L_0D4D
	LD	A,B
L_0D1C	PUSH	AF
	LD	HL,#5C6B
	LD	B,(HL)
	LD	A,B
	INC	A
	LD	(HL),A
	LD	HL,#5C89
	CP	(HL)
	JR	C,L_0D2D
	INC	(HL)
	LD	B,#18
L_0D2D	CALL	L_0E00
	POP	AF
	DEC	A
	JR	NZ,L_0D1C
	POP	HL
	LD	(IY+#57),L
	POP	HL
	LD	(#5C8F),HL
	LD	BC,(#5C88)
	RES	0,(IY+#02)
	CALL	L_0DD9
	SET	0,(IY+#02)
	POP	BC
	RET
;
L_0D4D	XOR	A
	LD	HL,(#5C8D)
	BIT	0,(IY+#02)
	JR	Z,L_0D5B
	LD	H,A
	LD	L,(IY+#0E)
L_0D5B	LD	(#5C8F),HL
	LD	HL,#5C91
	JR	NZ,L_0D65
	LD	A,(HL)
	RRCA
L_0D65	XOR	(HL)
	AND	#55
	XOR	(HL)
	LD	(HL),A
	RET
;
L_0D6B	CALL	L_0DAF
L_0D6E	LD	HL,#5C3C
	RES	5,(HL)
	SET	0,(HL)
	CALL	L_0D4D
	LD	B,(IY+#31)
	CALL	L_0E44
	LD	HL,#5AC0
	LD	A,(#5C8D)
	DEC	B
	JR	L_0D8E
;
L_0D87	LD	C,#20
L_0D89	DEC	HL
	LD	(HL),A
	DEC	C
	JR	NZ,L_0D89
L_0D8E	DJNZ	L_0D87
	LD	(IY+#31),#02
L_0D94	LD	A,#FD
	CALL	L_1601
	LD	HL,(#5C51)
	LD	DE,L_09F4
	AND	A
L_0DA0	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	DE,L_10A8
	CCF
	JR	C,L_0DA0
	LD	BC,L_1721
	JR	L_0DD9
;
L_0DAF	LD	HL,#0000
	LD	(#5C7D),HL
	RES	0,(IY+#30)
	CALL	L_0D94
	LD	A,#FE
	CALL	L_1601
	CALL	L_0D4D
	LD	B,#18
	CALL	L_0E44
	LD	HL,(#5C51)
	LD	DE,L_09F4
	LD	(HL),E
	INC	HL
	LD	(HL),D
	LD	(IY+#52),#01
	LD	BC,L_1821
L_0DD9	LD	HL,#5B00
	BIT	1,(IY+#01)
	JR	NZ,L_0DF4
	LD	A,B
	BIT	0,(IY+#02)
	JR	Z,L_0DEE
	ADD	A,(IY+#31)
	SUB	#18
L_0DEE	PUSH	BC
	LD	B,A
	CALL	L_0E9B
	POP	BC
L_0DF4	LD	A,#21
	SUB	C
	LD	E,A
	LD	D,#00
	ADD	HL,DE
	JP	L_0ADC
;
L_0DFE	LD	B,#17
L_0E00	CALL	L_0E9B
	LD	C,#08
L_0E05	PUSH	BC
	PUSH	HL
	LD	A,B
	AND	#07
	LD	A,B
	JR	NZ,L_0E19
L_0E0D	EX	DE,HL
	LD	HL,#F8E0
	ADD	HL,DE
	EX	DE,HL
	LD	BC,#0020
	DEC	A
	LDIR
L_0E19	EX	DE,HL
	LD	HL,#FFE0
	ADD	HL,DE
	EX	DE,HL
	LD	B,A
	AND	#07
	RRCA
	RRCA
	RRCA
	LD	C,A
	LD	A,B
	LD	B,#00
	LDIR
	LD	B,#07
	ADD	HL,BC
	AND	#F8
	JR	NZ,L_0E0D
	POP	HL
	INC	H
	POP	BC
	DEC	C
	JR	NZ,L_0E05
	CALL	L_0E88
	LD	HL,#FFE0
	ADD	HL,DE
	EX	DE,HL
	LDIR
	LD	B,#01
L_0E44	PUSH	BC
	CALL	L_0E9B
	LD	C,#08
L_0E4A	PUSH	BC
	PUSH	HL
	LD	A,B
L_0E4D	AND	#07
	RRCA
	RRCA
	RRCA
	LD	C,A
	LD	A,B
	LD	B,#00
	DEC	C
	LD	D,H
	LD	E,L
	LD	(HL),#00
	INC	DE
	LDIR
	LD	DE,#0701			;was L_0701
	ADD	HL,DE
	DEC	A
	AND	#F8
	LD	B,A
	JR	NZ,L_0E4D
	POP	HL
	INC	H
	POP	BC
	DEC	C
	JR	NZ,L_0E4A
	CALL	L_0E88
	LD	H,D
	LD	L,E
	INC	DE
	LD	A,(#5C8D)
	BIT	0,(IY+#02)
	JR	Z,L_0E80
	LD	A,(#5C48)
L_0E80	LD	(HL),A
	DEC	BC
	LDIR
	POP	BC
	LD	C,#21
	RET
;
L_0E88	LD	A,H
	RRCA
	RRCA
	RRCA
	DEC	A
	OR	#50
	LD	H,A
	EX	DE,HL
	LD	H,C
	LD	L,B
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	B,H
	LD	C,L
	RET
;
L_0E9B	LD	A,#18
	SUB	B
	LD	D,A
	RRCA
	RRCA
	RRCA
	AND	#E0
	LD	L,A
	LD	A,D
	AND	#18
	OR	#40
	LD	H,A
	RET
;
L_0EAC	DI
	LD	B,#B0
	LD	HL,#4000
L_0EB2	PUSH	HL
	PUSH	BC
	CALL	L_0EF4
	POP	BC
	POP	HL
	INC	H
	LD	A,H
	AND	#07
	JR	NZ,L_0EC9
	LD	A,L
	ADD	A,#20
	LD	L,A
	CCF
	SBC	A,A
	AND	#F8
	ADD	A,H
	LD	H,A
L_0EC9	DJNZ	L_0EB2
	JR	L_0EDA
;
L_0ECD	DI
	LD	HL,#5B00
	LD	B,#08
L_0ED3	PUSH	BC
	CALL	L_0EF4
	POP	BC
	DJNZ	L_0ED3
L_0EDA	LD	A,#04
	OUT	(#FB),A
	EI
L_0EDF	LD	HL,#5B00
	LD	(IY+#46),L
	XOR	A
	LD	B,A
L_0EE7	LD	(HL),A
	INC	HL
	DJNZ	L_0EE7
	RES	1,(IY+#30)
	LD	C,#21
	JP	L_0DD9
;
L_0EF4	LD	A,B
	CP	#03
	SBC	A,A
	AND	#02
	OUT	(#FB),A
	LD	D,A
L_0EFD	CALL	L_1F54
	JR	C,L_0F0C
	LD	A,#04
	OUT	(#FB),A
	EI
	CALL	L_0EDF
	RST	#08
;
;#0F0B
	DB	#0C
;
L_0F0C	IN	A,(#FB)
	ADD	A,A
	RET	M
	JR	NC,L_0EFD
	LD	C,#20
L_0F14	LD	E,(HL)
	INC	HL
	LD	B,#08
L_0F18	RL	D
	RL	E
	RR	D
L_0F1E	IN	A,(#FB)
	RRA
	JR	NC,L_0F1E
	LD	A,D
	OUT	(#FB),A
	DJNZ	L_0F18
	DEC	C
	JR	NZ,L_0F14
	RET
;
L_0F2C	LD	HL,(#5C3D)
	PUSH	HL
L_0F30	LD	HL,L_107F
	PUSH	HL
	LD	(#5C3D),SP
L_0F38	CALL	L_15D4
	PUSH	AF
	LD	D,#00
	LD	E,(IY-#01)
	LD	HL,#00C8
	CALL	BEEPER
	POP	AF
	LD	HL,L_0F38
	PUSH	HL
	CP	#18
	JR	NC,L_0F81
	CP	#07
	JR	C,L_0F81
	CP	#10
	JR	C,L_0F92
	LD	BC,#0002
	LD	D,A
	CP	#16
	JR	C,L_0F6C
	INC	BC
	BIT	7,(IY+#37)
	JP	Z,L_101E
	CALL	L_15D4
	LD	E,A
L_0F6C	CALL	L_15D4
	PUSH	DE
	LD	HL,(#5C5B)
	RES	0,(IY+#07)
	CALL	MAKE_ROOM
	POP	BC
	INC	HL
	LD	(HL),B
	INC	HL
	LD	(HL),C
	JR	L_0F8B
;
L_0F81	RES	0,(IY+#07)
	LD	HL,(#5C5B)
	CALL	ONE_SPACE
L_0F8B	LD	(DE),A
	INC	DE
	LD	(#5C5B),DE
	RET
;
L_0F92	LD	E,A
	LD	D,#00
	LD	HL,L_0F99
	ADD	HL,DE
L_0F99	LD	E,(HL)
	ADD	HL,DE
	PUSH	HL
	LD	HL,(#5C5B)
	RET
;
;#0FA0
	DB	#09
	DB	#66
	DB	#6A
	DB	#50
	DB	#B5
	DB	#70
	DB	#7E
	DB	#CF
	DB	#D4
;
L_0FA9	LD	HL,(#5C49)
	BIT	5,(IY+#37)
	JP	NZ,L_1097
	CALL	L_196E
	CALL	LIN2
	AND	#C0
	JP	NZ,L_1097
	PUSH	HL
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	LD	HL,#000A
	ADD	HL,BC
	LD	B,H
	LD	C,L
	CALL	L_1F05
	CALL	L_1097
	LD	HL,(#5C51)
	EX	(SP),HL
	PUSH	HL
	LD	A,#FF
	CALL	L_1601
	POP	HL
	DEC	HL
	CALL	L_1855
	LD	DE,#0005
	LD	HL,(#5C59)
	ADD	HL,DE
	LD	(#5C5B),HL
	POP	HL
	JP	L_1615

TOERR:		LD	(#5C5F),HL
		LD	(#5C5B),HL
		RET
;
	CALL	DOLE
	BIT	5,(IY+#37)
	RET	NZ
	NOP
	CALL	L_190F
	JR	L_106E
;
	LD	(IY+#00),#10
	JR	L_1024
;
L_1007	CALL	L_1031
	JR	L_1011
;
L_100C	LD	A,(HL)
	CP	#0D
	RET	Z
	INC	HL
L_1011	LD	(#5C5B),HL
	RET
;
	CALL	L_1031
L_1018	LD	BC,#0001
	JP	L_19E8
;
L_101E	CALL	L_15D4
	CALL	L_15D4
L_1024	POP	HL
	POP	HL
L_1026	POP	HL
	LD	(#5C3D),HL
	BIT	7,(IY+#00)
	RET	NZ
	LD	SP,HL
	RET
;
L_1031	SCF
	CALL	L_1195
	SBC	HL,DE
	ADD	HL,DE
	INC	HL
	POP	BC
	RET	C
	PUSH	BC
	LD	B,H
	LD	C,L
L_103E	LD	H,D
	LD	L,E
	INC	HL
	LD	A,(DE)
	AND	#F0
	CP	#10
	JR	NZ,L_1051
	INC	HL
	LD	A,(DE)
	SUB	#17
	ADC	A,#00
	JR	NZ,L_1051
	INC	HL
L_1051	AND	A
	SBC	HL,BC
	ADD	HL,BC
	EX	DE,HL
	JR	C,L_103E
	RET
;
	CALL	HORE
L_105A	EQU	$-2
	BIT	5,(IY+#37)
	RET	NZ
	CALL	L_196E
	EX	DE,HL
	CALL	LINE_NO
	LD	HL,#5C4A
	CALL	L_191C
L_106E	CALL	L_1795
L_1071	LD	A,#00
	JP	L_1601
;
	BIT	7,(IY+#37)
	JR	Z,L_1024
	JP	L_0F81
;
L_107F	BIT	4,(IY+#30)
	JR	Z,L_1026
	LD	(IY+#00),#FF
	LD	D,#00
	LD	E,(IY-#02)
	LD	HL,#0190
	CALL	BEEPER
	JP	L_0F30
;
L_1097	PUSH	HL
	CALL	L_1190
	DEC	HL
	CALL	L_19E5
	LD	(#5C5B),HL
	LD	(IY+#07),#00
	POP	HL
	RET
;
L_10A8	BIT	3,(IY+#02)
	CALL	NZ,L_111D
	AND	A
	BIT	5,(IY+#01)
	RET	Z
	LD	A,(#5C08)
	RES	5,(IY+#01)
	PUSH	AF
	BIT	5,(IY+#02)
	CALL	NZ,L_0D6E
	POP	AF
	CP	#20
	JR	NC,L_111B
	CP	#10
	JR	NC,L_10FA
	CP	#06
	JR	NC,L_10DB
	LD	B,A
	AND	#01
	LD	C,A
	LD	A,B
	RRA
	ADD	A,#12
	JR	L_1105
;
L_10DB	JR	NZ,L_10E6
	LD	HL,#5C6A
	LD	A,#08
	XOR	(HL)
	LD	(HL),A
	JR	L_10F4
;
L_10E6	CP	#0E
	RET	C
	SUB	#0D
	LD	HL,#5C41
	CP	(HL)
	LD	(HL),A
	JR	NZ,L_10F4
	LD	(HL),#00
L_10F4	SET	3,(IY+#02)
	CP	A
	RET
;
L_10FA	LD	B,A
	AND	#07
	LD	C,A
	LD	A,#10
	BIT	3,B
	JR	NZ,L_1105
	INC	A
L_1105	LD	(IY-#2D),C
	LD	DE,L_110D
	JR	L_1113
;
L_110D	LD	A,(#5C0D)
	LD	DE,L_10A8
L_1113	LD	HL,(#5C4F)
	INC	HL
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
L_111B	SCF
	RET
;
L_111D	CALL	L_0D4D
	RES	3,(IY+#02)
	RES	5,(IY+#02)
	LD	HL,(#5C8A)
	PUSH	HL
	LD	HL,(#5C3D)
	PUSH	HL
	LD	HL,L_1167
	PUSH	HL
	LD	(#5C3D),SP
	LD	HL,(#5C82)
	PUSH	HL
	SCF
	CALL	L_1195
	EX	DE,HL
	CALL	L_187D
	EX	DE,HL
	CALL	L_18E1
	LD	HL,(#5C8A)
	EX	(SP),HL
	EX	DE,HL
	CALL	L_0D4D
L_1150	LD	A,(#5C8B)
	SUB	D
	JR	C,L_117C
	JR	NZ,L_115E
	LD	A,E
	SUB	(IY+#50)
	JR	NC,L_117C
L_115E	LD	A,#20
	PUSH	DE
	CALL	L_09F4
	POP	DE
	JR	L_1150
;
L_1167	LD	D,#00
	LD	E,(IY-#02)
	LD	HL,#0190
	CALL	BEEPER
	LD	(IY+#00),#FF
	LD	DE,(#5C8A)
	JR	L_117E
;
L_117C	POP	DE
	POP	HL
L_117E	POP	HL
	LD	(#5C3D),HL
	POP	BC
	PUSH	DE
	CALL	L_0DD9
	POP	HL
	LD	(#5C82),HL
	LD	(IY+#26),#00
	RET
;
L_1190	LD	HL,(#5C61)
	DEC	HL
	AND	A
L_1195	LD	DE,(#5C59)
	BIT	5,(IY+#37)
	RET	Z
	LD	DE,(#5C61)
	RET	C
	LD	HL,(#5C63)
	RET
;
L_11A7	LD	A,(HL)
	CP	#0E
	LD	BC,#0006
	CALL	Z,L_19E8
	LD	A,(HL)
	INC	HL
	CP	#0D
	JR	NZ,L_11A7
	RET
;
L_11B7	DI
	LD	A,#FF
	LD	DE,(#5CB2)
L_11BE	EXX
	LD	BC,(#5CB4)
	LD	DE,(#5C38)
	LD	HL,(#5C7B)
	EXX
	LD	B,A
	XOR	A
	LD	I,A
	LD	C,A
	LD	H,D
	LD	L,E
	LD	A,B
	LD	B,C
	LD	SP,HL
L_11D5	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	HL,#A7FF
	ADD	HL,SP
	JR	C,L_11D5
	EX	DE,HL
	JR	L_11F0
;
L_11E6	CALL	FIND_INT2
	LD	A,B
	OR	C
	JP	Z,L_1E5F
	PUSH	BC
	RET
;
L_11F0	EXX
	LD	(#5CB4),BC
	LD	(#5C38),DE
	LD	(#5C7B),HL
	EXX
	INC	A
	JR	Z,L_1219
L_1200	LD	(#5CB4),HL
	LD	DE,#3EAF
	LD	BC,#00A8
	EX	DE,HL
	LDDR
	EX	DE,HL
	INC	HL
	LD	(#5C7B),HL
	DEC	HL
	LD	BC,#0040
	LD	(#5C38),BC
L_1219	LD	(#5CB2),HL
	LD	HL,#3C00
	LD	(#5C36),HL
	LD	HL,(#5CB2)
	LD	(HL),#3E
	DEC	HL
	LD	SP,HL
	DEC	HL
	DEC	HL
	LD	(#5C3D),HL
	IM	1
	LD	IY,#5C3A
	EI
	LD	HL,#5CB6
	LD	(#5C4F),HL
	LD	DE,L_15AF
	LD	BC,#0015
	EX	DE,HL
	LDIR
	EX	DE,HL
	DEC	HL
	LD	(#5C57),HL
	INC	HL
	LD	(#5C53),HL
	LD	(#5C4B),HL
	LD	(HL),#80
	INC	HL
	LD	(#5C59),HL
L_1256	LD	(HL),#0D
	INC	HL
	LD	(HL),#80
	INC	HL
	LD	(#5C61),HL
	LD	(#5C63),HL
	LD	(#5C65),HL
	LD	A,#07
	LD	(#5C8D),A
	LD	(#5C8F),A
	LD	(#5C48),A
	LD	HL,#0114
	LD	(#5C09),HL
	DEC	(IY-#3A)
	DEC	(IY-#36)
	LD	HL,L_15C6
	LD	DE,#5C10
	LD	BC,#000E
	LDIR
	LD	(IY+#31),#02
	LD	(IY+#0E),#0F
	CALL	HARD
	CALL	L_16B0
	LD	(IY+#00),#FF
	CALL	INFO
	CALL	SA_LD_RET
	JP	L_1303
;
L_12A2	LD	(IY+#31),#02
	CALL	L_1795
	CALL	L_16B0
L_12AC	LD	A,#00
	CALL	L_1601
	CALL	L_0F2C
	CALL	L_1B17
	BIT	7,(IY+#00)
	JR	NZ,L_12CF
	BIT	4,(IY+#30)
	JR	Z,L_1303
	LD	HL,(#5C59)
	CALL	L_11A7
	LD	(IY+#00),#FF
	JR	L_12AC
;
L_12CF	LD	HL,(#5C59)
	LD	(#5C5D),HL
	CALL	LIN3
	NOP
	NOP
	JP	NC,L_155D
	RST	#18
	CP	#0D
	JR	Z,L_12A2
	BIT	0,(IY+#30)
	CALL	NZ,L_0DAF
	CALL	L_0D6E
	LD	A,#19
	SUB	(IY+#4F)
	LD	(#5C8C),A
	SET	7,(IY+#01)

	LD	(IY+#00),#FF
	LD	(IY+#0A),#01
	CALL	L_1B8A
L_1303	RST	#38
	RES	5,(IY+#01)
	BIT	1,(IY+#30)
	CALL	NZ,L_0ECD
	LD	A,(#5C3A)
	INC	A
L_1313	PUSH	AF
	LD	HL,#0000
	LD	(IY+#37),H
	LD	(IY+#26),H
	LD	(#5C0B),HL
	LD	HL,#0001
	LD	(#5C16),HL
	CALL	L_16B0
	RES	5,(IY+#37)
	CALL	L_0D6E
	SET	5,(IY+#02)
	POP	AF
	LD	B,A
	CP	#0A
	JR	C,L_133C
	ADD	A,#07
L_133C	CALL	L_15EF
	LD	A,#20
	RST	#10
	LD	A,B
	LD	DE,RPT_MESGS
	CALL	L_0C0A
	XOR	A
			LD	DE,COMMA_SP - 1
	CALL	L_0C0A
	LD	BC,(#5C45)
	CALL	OUT_NUM_1
	LD	A,#3A
	RST	#10
	LD	C,(IY+#0D)
	LD	B,#00
	CALL	OUT_NUM_1
	CALL	L_1097
	LD	A,(#5C3A)
	INC	A
	JR	Z,L_1386
	CP	#09
	JR	Z,L_1373
	CP	#15
	JR	NZ,L_1376
L_1373	INC	(IY+#0D)
L_1376	LD	BC,#0003
	LD	DE,#5C70
	LD	HL,#5C44
	BIT	7,(HL)
	JR	Z,L_1384
	ADD	HL,BC
L_1384	LDDR
L_1386	LD	(IY+#0A),#FF
	RES	3,(IY+#01)
	JP	L_12AC

;The error mesages, with last byte inverted.
;The first #80 entry is dummy entry.
RPT_MESGS:	DB	#80
		DC	"OK"
		DC	"NEXT without FOR"
		DC	"Variable not found"
		DC	"Subscript wrong"
		DC	"Out of memory"
		DC	"Out of screen"
		DC	"Number too big"
		DC	"RETURN without GOSUB"
		DC	"End of file"
		DC	"STOP statement"
		DC	"Invalid argument"
		DC	"Integer out of range"
		DC	"Nonsense in BASIC"
		DC	"BREAK - CONT repeats"
		DC	"Out of DATA"
		DC	"Invalid file name"
		DC	"No room for line"
		DC	"STOP in INPUT"
		DC	"FOR without NEXT"
		DC	"Invalid I/O device"
		DC	"Invalid colour"
		DC	"BREAK into program"
		DC	"RAMTOP no good"
		DC	"Statement lost"
		DC	"Invalid stream"
		DC	"FN without DEF"
		DC	"Parameter error"
		DC	"Tape loading error"
COMMA_SP:	DC	", "

;Here is copyright message in the original ZX Spectrum ROM.
		DC	"Rom 140"
L_153E		EQU	$-2

		DC	"Prog:"
		DB	#16
		DB	#00
		DB	#0B

		DC	"Vars:"
		DB	#16
		DB	#00
		DB	#16

		DC	"Free:"
;
L_1555	LD	A,#10
	LD	BC,#0000
	JP	L_1313
;
L_155D	LD	(#5C49),BC
	LD	HL,(#5C5D)
	EX	DE,HL
	LD	HL,L_1555
	PUSH	HL
	LD	HL,(#5C61)
	SCF
	SBC	HL,DE
	PUSH	HL
	LD	H,B
	LD	L,C
	CALL	L_196E
	JR	NZ,L_157D
	CALL	L_19B8
	CALL	L_19E8
L_157D	POP	BC
	LD	A,C
	DEC	A
	OR	B
	JR	Z,L_15AB
	PUSH	BC
	INC	BC
	INC	BC
	INC	BC
	INC	BC
	DEC	HL
	LD	DE,(#5C53)
	PUSH	DE
	CALL	MAKE_ROOM
	POP	HL
	LD	(#5C53),HL
	POP	BC
	PUSH	BC
	INC	DE
	LD	HL,(#5C61)
	DEC	HL
	DEC	HL
	LDDR
	LD	HL,(#5C49)
	EX	DE,HL
	POP	BC
	LD	(HL),B
	DEC	HL
	LD	(HL),C
	DEC	HL
	LD	(HL),E
	DEC	HL
	LD	(HL),D
L_15AB	POP	AF
	JP	L_12A2
;
L_15AF	DB	#F4
	DB	#09
	DB	#A8
	DB	#10
;
;#15B3
	DB	"K"
;
;#15B4
	DB	#F4
	DB	#09
;
;#15B6
	DW	L_15C4
;
;#15B8
	DB	#53	;S
;
;#15B9
	DB	#81
	DB	#0F
;
;#15BB
	DW	L_15C4
;
;#15BD
	DB	"R"
;
;#15BE
	DB	#F4
	DB	#09
;
;#15C0
	DW	L_15C4
;
;#15C2
	DB	"P"
;
;#15C3
	DB	#80
;
L_15C4	RST	#08
;
;#15C5
	DB	#12
L_15C6	DB	#01
	DB	#00
	DB	#06
	DB	#00
	DB	#0B
	DB	#00
	DB	#01
	DB	#00
	DB	#01
	DB	#00
	DB	#06
	DB	#00
	DB	#10
	DB	#00
;
L_15D4	BIT	5,(IY+#02)
	JR	NZ,L_15DE
	SET	3,(IY+#02)
L_15DE	CALL	L_15E6
	RET	C
	JR	Z,L_15DE
	RST	#08
	RLCA
L_15E6	EXX
	PUSH	HL
	LD	HL,(#5C51)
	INC	HL
	INC	HL
	JR	L_15F7
;
L_15EF		LD	E,#30
		ADD	A,E
PRINT_A_2:	EXX
		PUSH	HL
		LD	HL,(#5C51)
L_15F7		LD	E,(HL)
		INC	HL
		LD	D,(HL)
		EX	DE,HL
		CALL	L_162C
		POP	HL
		EXX
		RET
;
L_1601	ADD	A,A
	ADD	A,#16
	LD	L,A
	LD	H,#5C
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	A,D
	OR	E
	JR	NZ,L_1610
L_160E	RST	#08
;
;#160F
	DB	#17
;
L_1610	DEC	DE
	LD	HL,(#5C4F)
	ADD	HL,DE
L_1615	LD	(#5C51),HL
	RES	4,(IY+#30)
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	LD	C,(HL)
	LD	HL,L_162D
	CALL	L_16DC
	RET	NC
	LD	D,#00
	LD	E,(HL)
	ADD	HL,DE
L_162C	JP	(HL)
;
L_162D	DB	"K"
;
;#162E
	DB	#06
;
;#162F
	DB	"S"
;
;#1630
	DB	#12
;
;#1631
	DB	"P"
;
;#1632
	DB	#1B
	DB	#00
;
;#1634
	SET	0,(IY+#02)
	RES	5,(IY+#01)
	SET	4,(IY+#30)
	JR	L_1646
;
	RES	0,(IY+#02)
L_1646	RES	1,(IY+#01)
	JP	L_0D4D
;
	SET	1,(IY+#01)
	RET
; Create a single space in workspace by ADD_CHAR
ONE_SPACE:	LD	BC,#0001
MAKE_ROOM:	PUSH	HL		; Create BC spaces in various areas
		CALL	L_1F05
		POP	HL
		CALL	L_1664
		LD	HL,(#5C65)
		EX	DE,HL
		LDDR
		RET
;
L_1664	PUSH	AF
	PUSH	HL
	LD	HL,#5C4B
	LD	A,#0E
L_166B	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	(SP),HL
	AND	A
	SBC	HL,DE
	ADD	HL,DE
	EX	(SP),HL
	JR	NC,L_167F
	PUSH	DE
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),D
	DEC	HL
	LD	(HL),E
	INC	HL
	POP	DE
L_167F	INC	HL
	DEC	A
	JR	NZ,L_166B
	EX	DE,HL
	POP	DE
	POP	AF
	AND	A
	SBC	HL,DE
	LD	B,H
	LD	C,L
	INC	BC
	ADD	HL,DE
	EX	DE,HL
	RET

; Collect line number
LINE_ZERO:	DB	#00
		DB	#00

LINE_NO_A:	EX	DE,HL
		LD	DE,LINE_ZERO
LINE_NO:	LD	A,(HL)
		AND	#C0
		JR	NZ,LINE_NO_A
		LD	D,(HL)
		INC	HL
		LD	E,(HL)
		RET
; Handle reserve room, continuation of the restart BC_SPACES
RESERVE:	LD	HL,(#5C63)
		DEC	HL
		CALL	MAKE_ROOM
		INC	HL
		INC	HL
		POP	BC
		LD	(#5C61),BC
		POP	BC
		EX	DE,HL
		INC	HL
		RET
;
L_16B0	LD	HL,(#5C59)
	LD	(HL),#0D
	LD	(#5C5B),HL
	INC	HL
	LD	(HL),#80
	INC	HL
	LD	(#5C61),HL
L_16BF	LD	HL,(#5C61)
	LD	(#5C63),HL
SET_STK:	LD	HL,(#5C63)
		LD	(#5C65),HL
		PUSH	HL
		LD	HL,#5C92
		LD	(#5C68),HL
		POP	HL
		RET
;
	LD	DE,(#5C59)
	JP	L_19E5
;
L_16DB	INC	HL
L_16DC	LD	A,(HL)
	AND	A
	RET	Z
	CP	C
	INC	HL
	JR	NZ,L_16DB
	SCF
	RET
;
L_16E5	CALL	L_171E
	CALL	L_1701
	LD	BC,#0000
	LD	DE,#A3E2
	EX	DE,HL
	ADD	HL,DE
	JR	C,L_16FC
	LD	BC,L_15D4
	ADD	HL,BC
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
L_16FC	EX	DE,HL
	LD	(HL),C
	INC	HL
	LD	(HL),B
	RET
;
L_1701	PUSH	HL
	LD	HL,(#5C4F)
	ADD	HL,BC
	INC	HL
	INC	HL
	INC	HL
	LD	C,(HL)
	EX	DE,HL
	LD	HL,L_1716
	CALL	L_16DC
	LD	C,(HL)
	LD	B,#00
	ADD	HL,BC
	JP	(HL)
;
L_1716	DB	"K"
;
;#1717
	DB	#05
;
;#1718
	DB	"S"
;
;#1719
	DB	#03
;
;#171A
	DB	"P"
;
;#171B
	DB	#01
;
;#171C
	POP	HL
	RET
;
L_171E	CALL	FIND_INT1
L_1721	CP	#10
	JR	C,L_1727
L_1725	RST	#08
;
;#1726
	DB	#17
;
L_1727	ADD	A,#03
	RLCA
	LD	HL,#5C10
	LD	C,A
	LD	B,#00
	ADD	HL,BC
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	DEC	HL
	RET
;
L_1736	RST	#28	;*calc
	LD	BC,#CD38
	LD	E,#17
	LD	A,B
	OR	C
	JR	Z,L_1756
	EX	DE,HL
	LD	HL,(#5C4F)
	ADD	HL,BC
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	EX	DE,HL
	CP	#4B
	JR	Z,L_1756
	CP	#53
	JR	Z,L_1756
	CP	#50
	JR	NZ,L_1725
L_1756	CALL	L_175D
	LD	(HL),E
	INC	HL
	LD	(HL),D
	RET
;
L_175D	PUSH	HL
	CALL	L_2BF1
	LD	A,B
	OR	C
	JR	NZ,L_1767
L_1765	RST	#08
;
;#1766
	DB	#0E
;
L_1767	PUSH	BC
	LD	A,(DE)
	AND	#DF
	LD	C,A
	LD	HL,L_177A
	CALL	L_16DC
	JR	NC,L_1765
	LD	C,(HL)
	LD	B,#00
	ADD	HL,BC
	POP	BC
	JP	(HL)
;
L_177A	DB	"K"
;
;#177B
	DB	#06
;
;#177C
	DB	"S"
;
;#177D
	DB	#08
;
;#177E
	DB	"P"
;
;#177F
	DB	#0A
	DB	#00
;
;#1781
	LD	E,#01
	JR	L_178B
;
	LD	E,#06
	JR	L_178B
;
	LD	E,#10
L_178B	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,L_1765
	LD	D,A
	POP	HL
	RET
;
L_1793	JR	L_1725
;
L_1795	LD	(#5C3F),SP
	LD	(IY+#02),#10
	CALL	L_0DAF
	SET	0,(IY+#02)
	LD	B,(IY+#31)
	CALL	L_0E44
	RES	0,(IY+#02)
	SET	0,(IY+#30)
	LD	HL,(#5C49)
	LD	DE,(#5C6C)
	AND	A
	SBC	HL,DE
	ADD	HL,DE
	JR	C,L_17E1
	PUSH	DE
	CALL	L_196E
	LD	DE,#02C0
	EX	DE,HL
	SBC	HL,DE
	EX	(SP),HL
	CALL	L_196E
	POP	BC
L_17CE	PUSH	BC
	CALL	L_19B8
	POP	BC
	ADD	HL,BC
	JR	C,L_17E4
	EX	DE,HL
	LD	D,(HL)
	INC	HL
	LD	E,(HL)
	DEC	HL
	LD	(#5C6C),DE
	JR	L_17CE
;
L_17E1	LD	(#5C6C),HL
L_17E4	LD	HL,(#5C6C)
	CALL	L_196E
	JR	Z,L_17ED
	EX	DE,HL
L_17ED	CALL	L_1833
	RES	4,(IY+#02)
	RET
;
L_17F5	LD	A,#03
	JR	L_17FB
;
L_17F9	LD	A,#02
L_17FB	LD	(IY+#02),#00
	CALL	L_2530
	CALL	NZ,L_1601
	RST	#18
	CALL	L_2070
	JR	C,L_181F
	RST	#18
	CP	#3B
	JR	Z,L_1814
	CP	#2C
	JR	NZ,L_181A
L_1814	RST	#20
	CALL	L_1C82
	JR	L_1822
;
L_181A	CALL	L_1CE6
	JR	L_1822
;
L_181F	CALL	FETCH_NUM
L_1821	EQU	$-1
L_1822	CALL	CHECK_END
	CALL	FIND_INT2
	LD	A,B
	AND	#3F
	LD	H,A
	LD	L,C
	LD	(#5C49),HL
	CALL	L_196E
L_1833	LD	E,#01
L_1835	CALL	L_1855
	RST	#10
	BIT	4,(IY+#02)
	JR	Z,L_1835
	LD	A,(#5C6B)
	SUB	(IY+#4F)
	JR	NZ,L_1835
	XOR	E
	RET	Z
	PUSH	HL
	PUSH	DE
	LD	HL,#5C6C
	CALL	L_190F
	POP	DE
	POP	HL
	JR	L_1835
;
L_1855	LD	BC,(#5C49)
	CALL	L_1980
	LD	D,#2A
	JR	Z,L_1865
	LD	DE,L_2000
	RL	E
L_1865	LD	(IY+#2D),E
	LD	A,(HL)
	CP	#40
	POP	BC
	RET	NC
	PUSH	BC
	CALL	LIN4
	INC	HL
	INC	HL
	INC	HL
	XOR	A
	XOR	D
	JR	Z,L_1879
	RST	#10
L_1879	NOP
	NOP
	NOP
	NOP
L_187D	SET	0,(IY+#01)
	PUSH	DE
	EX	DE,HL
	RES	2,(IY+#30)
	LD	HL,#5C3B
	RES	2,(HL)
	BIT	5,(IY+#37)
	JR	Z,L_1894
	SET	2,(HL)
L_1894	LD	HL,(#5C5F)
	AND	A
	SBC	HL,DE
	JR	NZ,L_18A1
	LD	A,#3F
	CALL	L_18C1
L_18A1	CALL	L_18E1
	EX	DE,HL
	LD	A,(HL)
	CALL	L_18B6
	INC	HL
	CP	#0D
	JR	Z,L_18B4
	EX	DE,HL
	CALL	L_1937
	JR	L_1894
;
L_18B4	POP	DE
	RET
;
L_18B6	CP	#0E
	RET	NZ
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	RET
;
L_18C1	EXX
	LD	HL,(#5C8F)
	PUSH	HL
	RES	7,H
	SET	7,L
	LD	(#5C8F),HL
	LD	HL,#5C91
	LD	D,(HL)
	PUSH	DE
	LD	(HL),#00
	CALL	L_09F4
	POP	HL
	LD	(IY+#57),H
	POP	HL
	LD	(#5C8F),HL
	EXX
	RET
;
L_18E1	LD	HL,(#5C5B)
	AND	A
	SBC	HL,DE
	RET	NZ
	LD	A,(#5C41)
	RLC	A
	JR	Z,L_18F3
	ADD	A,#43
	JR	L_1909
;
L_18F3	LD	HL,#5C3B
	RES	3,(HL)
	LD	A,#4B
	BIT	2,(HL)
	JR	Z,L_1909
	SET	3,(HL)
	INC	A
	BIT	3,(IY+#30)
	JR	Z,L_1909
	LD	A,#43
L_1909	PUSH	DE
	CALL	L_18C1
	POP	DE
	RET
;
L_190F	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	PUSH	HL
	EX	DE,HL
	INC	HL
	CALL	L_196E
	CALL	LINE_NO
	POP	HL
L_191C	BIT	5,(IY+#37)
	RET	NZ
	LD	(HL),D
	DEC	HL
	LD	(HL),E
	RET

; Outputting numbers at start of BASIC line
OUT_SP_2	LD	A,E
		AND	A
		RET	M
		JR	L_1937

OUT_SP_NO:	XOR	A
OUT_SP_1:	ADD	HL,BC
		INC	A
		JR	C,OUT_SP_1
		SBC	HL,BC
		DEC	A
		JR	Z,OUT_SP_2
		JP	L_15EF
;
L_1937	CALL	NUMERIC
	JR	NC,L_196C
	CP	#21
	JR	C,L_196C
	RES	2,(IY+#01)
	CP	#CB
	JR	Z,L_196C
	CP	#3A
	JR	NZ,L_195A
	BIT	5,(IY+#37)
	JR	NZ,L_1968
	BIT	2,(IY+#30)
	JR	Z,L_196C
	JR	L_1968
;
L_195A	CP	#22
	JR	NZ,L_1968
	PUSH	AF
	LD	A,(#5C6A)
	XOR	#04
	LD	(#5C6A),A
	POP	AF
L_1968	SET	2,(IY+#01)
L_196C	RST	#10
	RET
;
L_196E	PUSH	HL
	LD	HL,(#5C53)
	LD	D,H
	LD	E,L
L_1974	POP	BC
	CALL	LIN1
	RET	NC
	PUSH	BC
	CALL	L_19B8
	EX	DE,HL
	JR	L_1974
;
L_1980	LD	A,(HL)
	CP	B
	RET	NZ
	INC	HL
	LD	A,(HL)
	DEC	HL
	CP	C
	RET
;
	INC	HL
	INC	HL
	INC	HL
L_198B	LD	(#5C5D),HL
	LD	C,#00
L_1990	DEC	D
	RET	Z
	RST	#20
	CP	E
	JR	NZ,L_199A
	AND	A
	RET
;
L_1998	INC	HL
	LD	A,(HL)
L_199A	CALL	L_18B6
	LD	(#5C5D),HL
	CP	#22
	JR	NZ,L_19A5
	DEC	C
L_19A5	CP	#3A
	JR	Z,L_19AD
	CP	#CB
	JR	NZ,L_19B1
L_19AD	BIT	0,C
	JR	Z,L_1990
L_19B1	CP	#0D
	JR	NZ,L_1998
	DEC	D
	SCF
	RET
;
L_19B8	PUSH	HL
	LD	A,(HL)
	CP	#40
	JR	C,L_19D5
	BIT	5,A
	JR	Z,L_19D6
	ADD	A,A
	JP	M,L_19C7
	CCF
L_19C7	LD	BC,#0005
	JR	NC,L_19CE
	LD	C,#12
L_19CE	RLA
	INC	HL
	LD	A,(HL)
	JR	NC,L_19CE
	JR	L_19DB
;
L_19D5	INC	HL
L_19D6	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
L_19DB	ADD	HL,BC
	POP	DE
L_19DD	AND	A
	SBC	HL,DE
	LD	B,H
	LD	C,L
	ADD	HL,DE
	EX	DE,HL
	RET
;
L_19E5	CALL	L_19DD
L_19E8	PUSH	BC
	LD	A,B
	CPL
	LD	B,A
	LD	A,C
	CPL
	LD	C,A
	INC	BC
	CALL	L_1664
	EX	DE,HL
	POP	HL
	ADD	HL,DE
	PUSH	DE
	LDIR
	POP	HL
	RET
; Read line number of line editing area
E_LINE_NO:	LD	HL,(#5C59)
		DEC	HL
		LD	(#5C5D),HL
		RST	#20
		LD	HL,#5C92
		LD	(#5C65),HL
		CALL	L_2D3B
		CALL	L_2DA2
		JR	C,E_L_1
		LD	HL,#C000
		ADD	HL,BC
E_L_1:		JP	C,L_1C8A
		JP	SET_STK

; Report and line number outputting
OUT_NUM_1:	PUSH	DE
		PUSH	HL
		XOR	A
		BIT	7,B
		JR	NZ,OUT_NUM_4
		LD	H,B
		LD	E,#FF
		JP	NUMCOM

OUT_NUM_2:	PUSH	DE
		LD	D,(HL)
		INC	HL
		LD	E,(HL)
		PUSH	HL
		EX	DE,HL
		LD	E,#20
OUT_NUM_3:	LD	BC,#FC18
		CALL	OUT_SP_NO
		LD	BC,#FF9C
		CALL	OUT_SP_NO
		LD	C,#F6
		CALL	OUT_SP_NO
		LD	A,L
OUT_NUM_4:	CALL	L_15EF
		POP	HL
		POP	DE
		RET
;
L_1A48	DB	#B1
	DB	#CB
	DB	#BC
	DB	#BF
	DB	#C4
	DB	#AF
	DB	#B4
	DB	#93
	DB	#91
	DB	#92
	DB	#95
	DB	#98
	DB	#98
	DB	#98
	DB	#98
	DB	#98
	DB	#98
	DB	#98
	DB	#7F
	DB	#81
	DB	#2E
	DB	#6C
	DB	#6E
	DB	#70
	DB	#48
	DB	#94
	DB	#56
	DB	#3F
	DB	#41
	DB	#2B
	DB	#17
	DB	#1F
	DB	#37
	DB	#77
	DB	#44
	DB	#0F
	DB	#59
	DB	#2B
	DB	#43
	DB	#2D
	DB	#51
	DB	#3A
	DB	#6D
	DB	#42
	DB	#0D
	DB	#49
	DB	#5C
	DB	#44
	DB	#15
	DB	#5D
	DB	#01
;
;#1A7B
	DB	"="
;
;#1A7C
	DB	#02
	DB	#03
;
;#1A7E
	DW	L_1E67
;
;#1A80
	DB	#00
	DB	#06
	DB	#CB
	DB	#05
;
;#1A84
	DW	L_1CF0
;
;#1A86
	DB	#03
;
;#1A87
	DW	L_1EED
;
;#1A89
	DB	#00
	DB	#00
;
;#1A8B
	DW	L_1CEE
;
;#1A8D
	DB	#00
;
;#1A8E
	DW	L_1F23
;
;#1A90
	DB	#04
;
;#1A91
	DB	"="
;
;#1A92
	DB	#06
	DB	#CC
	DB	#06
	DB	#05
;
;#1A96
	DW	L_1D03
;
;#1A98
	DB	#04
	DB	#00
;
;#1A9A
	DW	L_1DAB
;
;#1A9C
	DB	#05
;
;#1A9D
	DW	L_1FCD
;
;#1A9F
	DB	#05
;
;#1AA0
	DW	L_2089
;
;#1AA2
	DB	#05
;
;#1AA3
	DW	L_2C02
;
;#1AA5
	DB	#05
;
;#1AA6
	DW	L_1BB2
;
;#1AA8
	DB	#00
;
;#1AA9
	DW	L_11B7
;
;#1AAB
	DB	#03
;
;#1AAC
	DW	L_1EA1
;
;#1AAE
	DB	#05
;
;#1AAF
	DW	L_17F9
;
;#1AB1
	DB	#06
	DB	#05
;
;#1AB3
	DW	POKE
;
;#1AB5
	DB	#03
;
;#1AB6
	DW	L_1E4F
;
;#1AB8
	DB	#03
;
;#1AB9
	DW	L_11E6
;
;#1ABB
	DB	#03
;
;#1ABC
	DW	L_1EAC
;
;#1ABE
	DB	#03
;
;#1ABF
	DW	CLS
;
;#1AC1
	DB	#09
	DB	#00
;
;#1AC3
	DW	L_22DC
;
;#1AC5
	DB	#03
;
;#1AC6
	DW	L_1F3A
;
;#1AC8
	DB	#00
	DB	#05
;
;#1ACA
	DW	L_1DED
;
;#1ACC
	DB	#05
;
;#1ACD
	DW	L_1E27
;
;#1ACF
	DB	#03
;
;#1AD0
	DW	L_1E42
;
;#1AD2
	DB	#09
	DB	#05
;
;#1AD4
	DW	L_2382
;
;#1AD6
	DB	#00
;
;#1AD7
	DW	L_0EAC
;
;#1AD9
	DB	#05
;
;#1ADA
	DW	L_1FC9
;
;#1ADC
	DB	#05
;
;#1ADD
	DW	L_17F5
;
;#1ADF
	DB	#0B
	DB	#0B
	DB	#0B
	DB	#0B
	DB	#08
	DB	#00
;
;#1AE5
	DW	BEEP
;
;#1AE7
	DB	#09
	DB	#05
;
;#1AE9
	DW	L_2320
;
;#1AEB
	DB	#07
	DB	#07
	DB	#07
	DB	#07
	DB	#07
	DB	#07
	DB	#08
	DB	#00
;
;#1AF3
	DW	L_1E7A
;
;#1AF5
	DB	#03
;
;#1AF6
	DW	L_2294
;
;#1AF8
	DB	#00
	DB	#05
;
;#1AFA
	DW	L_1F60
;
;#1AFC
	DB	#06
;
;#1AFD
	DB	","
;
;#1AFE
	DB	#0A
	DB	#00
;
	DW	L_1736
;
;#1B02
	DB	#06
	DB	#00
;
;#1B04
	DW	L_16E5
;
;#1B06
	DB	#0A
	DB	#00
;
;#1B08
	DW	L_1793
;
;#1B0A
	DB	#0A
;
;#1B0B
	DB	","
;
;#1B0C
	DB	#0A
	DB	#00
;
;#1B0E
	DW	L_1793
;
;#1B10
	DB	#0A
	DB	#00
;
;#1B12
	DW	L_1793
;
;#1B14
	DB	#00
;
;#1B15
	DW	L_1793
;
L_1B17	RES	7,(IY+#01)
	CALL	E_LINE_NO
	XOR	A
	LD	(#5C47),A
	DEC	A
	LD	(#5C3A),A
	JR	L_1B29
;
L_1B28	RST	#20
L_1B29	CALL	L_16BF
	INC	(IY+#0D)
	JP	M,L_1C8A
	RST	#18
	LD	B,#00
	CP	#0D
	JR	Z,L_1BB3
	CP	#3A
	JR	Z,L_1B28
	LD	HL,L_1B76
	PUSH	HL
	CP	#CE
	JP	C,COMM
	SUB	#CE
	LD	C,A
	RST	#20
	LD	HL,L_1A48
	ADD	HL,BC
	LD	C,(HL)
	ADD	HL,BC
	JR	L_1B55
;
L_1B52	LD	HL,(#5C74)
L_1B55	LD	A,(HL)
	INC	HL
	LD	(#5C74),HL
	LD	BC,L_1B52
	PUSH	BC
	LD	C,A
	CP	#20
	JR	NC,L_1B6F
	LD	HL,L_1C01
	LD	B,#00
	ADD	HL,BC
	LD	C,(HL)
	ADD	HL,BC
	PUSH	HL
	RST	#18
	DEC	B
	RET
;
L_1B6F	RST	#18
	CP	C
	JP	NZ,L_1C8A
	RST	#20
	RET
;
L_1B76	CALL	L_1F54
	JR	C,L_1B7D
	RST	#08
;
;#1B7C
	DB	#14
;
L_1B7D	BIT	7,(IY+#0A)
	JR	NZ,STMT_NEXT
	LD	HL,(#5C42)
	BIT	7,H
	JR	Z,L_1B9E
L_1B8A	LD	HL,#FFFE
	LD	(#5C45),HL
	LD	HL,(#5C61)
	DEC	HL
	LD	DE,(#5C59)
	DEC	DE
	LD	A,(#5C44)
	JR	L_1BD1
;
L_1B9E	CALL	L_196E
	LD	A,(#5C44)
	JR	Z,L_1BBF
	AND	A
	JR	NZ,L_1BEC
	LD	B,A
	LD	A,(HL)
	AND	#C0
	LD	A,B
	JR	Z,L_1BBF
	RST	#08
;
;#1BB1
	DB	#FF
;
L_1BB2	POP	BC
L_1BB3	CALL	L_2530
	RET	Z
	LD	HL,(#5C55)
	LD	A,#C0
	AND	(HL)
	RET	NZ
	XOR	A
L_1BBF	CP	#01
	ADC	A,#00
	LD	D,(HL)
	INC	HL
	LD	E,(HL)
	LD	(#5C45),DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	ADD	HL,DE
	INC	HL
L_1BD1	LD	(#5C55),HL
	EX	DE,HL
	LD	(#5C5D),HL
	LD	D,A
	LD	E,#00
	LD	(IY+#0A),#FF
	DEC	D
	LD	(IY+#0D),D
	JP	Z,L_1B28
	INC	D
	CALL	L_198B
	JR	Z,STMT_NEXT
L_1BEC	RST	#08
;
;#1BED
	DB	#16

; End of statements
CHECK_END:	CALL	L_2530
		RET	NZ
		POP	BC
		POP	BC
STMT_NEXT:	RST	#18			;Go to next statement
		CP	#0D
		JR	Z,L_1BB3
		CP	#3A
		JP	Z,L_1B28
		JP	L_1C8A
;
L_1C01	DB	#0F
	DB	#1D
	DB	#4B
	DB	#09
	DB	#67
	DB	#0B
	DB	#7B
	DB	#8E
	DB	#71
	DB	#B4
	DB	#81
	DB	#CF
;
;#1C0D
	CALL	FETCH_NUM
	CP	A
	POP	BC
	CALL	Z,CHECK_END
	EX	DE,HL
	LD	HL,(#5C74)
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	EX	DE,HL
	PUSH	BC
	RET
;
L_1C1F	CALL	L_28B2
L_1C22	LD	(IY+#37),#00
	JR	NC,L_1C30
	SET	1,(IY+#37)
	JR	NZ,L_1C46
L_1C2E	RST	#08
;
;#1C2F
	DB	#01
;
L_1C30	CALL	Z,L_2996
	BIT	6,(IY+#01)
	JR	NZ,L_1C46
	XOR	A
	CALL	L_2530
	CALL	NZ,L_2BF1
	LD	HL,#5C71
	OR	(HL)
	LD	(HL),A
	EX	DE,HL
L_1C46	LD	(#5C72),BC
	LD	(#5C4D),HL
	RET
;
	POP	BC
	CALL	L_1C56
	CALL	CHECK_END
	RET
;
L_1C56	LD	A,(#5C3B)
L_1C59	PUSH	AF
	CALL	L_24FB
	POP	AF
	LD	D,(IY+#01)
	XOR	D
	AND	#40
	JR	NZ,L_1C8A
	BIT	7,D
	JP	NZ,L_2AFF
	RET
;
	CALL	L_28B2
	PUSH	AF
	LD	A,C
	OR	#9F
	INC	A
	JR	NZ,L_1C8A
	POP	AF
	JR	L_1C22
;
L_1C79	RST	#20
L_1C7A	CALL	L_1C82
	CP	#2C
	JR	NZ,L_1C8A
	RST	#20
L_1C82	CALL	L_24FB
	BIT	6,(IY+#01)
	RET	NZ
L_1C8A	RST	#08
;
;#1C8B
	DB	#0B
;
L_1C8C	CALL	L_24FB
	BIT	6,(IY+#01)
	RET	Z
	JR	L_1C8A
;
	BIT	7,(IY+#01)
	RES	0,(IY+#02)
	CALL	NZ,L_0D4D
	POP	AF
	LD	A,(#5C74)
	SUB	#13
	CALL	L_21FC
	CALL	CHECK_END
	LD	HL,(#5C8F)
	LD	(#5C8D),HL
	LD	HL,#5C91
	LD	A,(HL)
	RLCA
	XOR	(HL)
	AND	#AA
	XOR	(HL)
	LD	(HL),A
	RET
;
	CALL	L_2530
	JR	Z,L_1CD6
	RES	0,(IY+#02)
	CALL	L_0D4D
	LD	HL,#5C90
	LD	A,(HL)
	OR	#F8
	LD	(HL),A
	RES	6,(IY+#57)
	RST	#18
L_1CD6	CALL	L_21E2
	JR	L_1C7A
;
	JP	SAVE_ETC
;
FETCH_NUM:	CP	#0D
		JR	Z,L_1CE6
		CP	#3A
		JR	NZ,L_1C82
L_1CE6		CALL	L_2530
		RET	Z
		RST	#28	;*calc
;
;#1CEB
	DB	#A0
	DB	#38
;
;#1CED
	RET
;
L_1CEE	RST	#08
;
;#1CEF
	DB	#08
;
L_1CF0	POP	BC
	CALL	L_2530
	JR	Z,L_1D00
	RST	#28	;*calc
;
;#1CF7
	DB	#02
	DB	#38
;
;#1CF9
	EX	DE,HL
	CALL	L_34E9
	JP	C,L_1BB3
L_1D00	JP	L_1B29
;
L_1D03	CP	#CD
	JR	NZ,L_1D10
	RST	#20
	CALL	L_1C82
	CALL	CHECK_END
	JR	L_1D16
;
L_1D10	CALL	CHECK_END
	RST	#28	;*calc
;
;#1D14
	DB	#A1
	DB	#38
L_1D16	DB	#EF
	DB	#C0
	DB	#02
	DB	#01
	DB	#E0
	DB	#01
	DB	#38
;
;#1D1D
	CALL	L_2AFF
	LD	(#5C68),HL
	DEC	HL
	LD	A,(HL)
	SET	7,(HL)
	LD	BC,#0006
	ADD	HL,BC
	RLCA
	JR	C,L_1D34
	LD	C,#0D
	CALL	MAKE_ROOM
	INC	HL
L_1D34	PUSH	HL
	RST	#28	;*calc
;
;#1D36
	DB	#02
	DB	#02
	DB	#38
;
;#1D39
	POP	HL
	EX	DE,HL
	LD	C,#0A
	LDIR
	LD	HL,(#5C45)
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	LD	D,(IY+#0D)
	INC	D
	INC	HL
	LD	(HL),D
	CALL	L_1DDA
	RET	NC
	LD	B,(IY+#38)
	LD	HL,(#5C45)
	LD	(#5C42),HL
	LD	A,(#5C47)
	NEG
	LD	D,A
	LD	HL,(#5C5D)
	LD	E,#F3
L_1D64	PUSH	BC
	LD	BC,(#5C55)
	CALL	L_1D86
	LD	(#5C55),BC
	POP	BC
	JR	C,L_1D84
	RST	#20
	OR	#20
	CP	B
	JR	Z,L_1D7C
	RST	#20
	JR	L_1D64
;
L_1D7C	RST	#20
	LD	A,#01
	SUB	D
	LD	(#5C44),A
	RET
;
L_1D84	RST	#08
;
;#1D85
	DB	#11
;
L_1D86	LD	A,(HL)
	CP	#3A
	JR	Z,L_1DA3
L_1D8B	INC	HL
	LD	A,(HL)
	AND	#C0
	SCF
	RET	NZ
	LD	B,(HL)
	INC	HL
	LD	C,(HL)
	LD	(#5C42),BC
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	PUSH	HL
	ADD	HL,BC
	LD	B,H
	LD	C,L
	POP	HL
	LD	D,#00
L_1DA3	PUSH	BC
	CALL	L_198B
	POP	BC
	RET	NC
	JR	L_1D8B
;
L_1DAB	BIT	1,(IY+#37)
	JP	NZ,L_1C2E
	LD	HL,(#5C4D)
	BIT	7,(HL)
	JR	Z,L_1DD8
	INC	HL
	LD	(#5C68),HL
	RST	#28	;*calc
;
;#1DBE
	DB	#E0
	DB	#E2
	DB	#0F
	DB	#C0
	DB	#02
	DB	#38
;
;#1DC4
	CALL	L_1DDA
	RET	C
	LD	HL,(#5C68)
	LD	DE,#000F
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	H,(HL)
	EX	DE,HL
	JP	L_1E73
;
L_1DD8	RST	#08
;
;#1DD9
	DB	#00
;
L_1DDA	RST	#28	;*calc
;
;#1DDB
	DB	#E1
	DB	#E0
	DB	#E2
	DB	#36
	DB	#00
	DB	#02
	DB	#01
	DB	#03
	DB	#37
	DB	#00
	DB	#04
	DB	#38
;
;#1DE7
	AND	A
	RET
;
;#1DE9
	DB	#38
;
;#1DEA
	SCF
	RET
;
L_1DEC	RST	#20
L_1DED	CALL	L_1C1F
	CALL	L_2530
	JR	Z,L_1E1E
	RST	#18
	LD	(#5C5F),HL
	LD	HL,(#5C57)
	LD	A,(HL)
	CP	#2C
	JR	Z,L_1E0A
	LD	E,#E4
	CALL	L_1D86
	JR	NC,L_1E0A
	RST	#08
;
;#1E09
	DB	#0D
;
L_1E0A	CALL	TEMP_PTR1
	CALL	L_1C56
	RST	#18
	LD	(#5C57),HL
	LD	HL,(#5C5F)
	LD	(IY+#26),#00
	CALL	TEMP_PTR2
L_1E1E	RST	#18
	CP	#2C
	JR	Z,L_1DEC
	CALL	CHECK_END
	RET
;
L_1E27	CALL	L_2530
	JR	NZ,L_1E37
L_1E2C	CALL	L_24FB
	CP	#2C
	CALL	NZ,CHECK_END
	RST	#20
	JR	L_1E2C
;
L_1E37	LD	A,#E4
L_1E39	LD	B,A
	CPDR
	LD	DE,#0200
	JP	L_198B
;
L_1E42	CALL	FIND_INT2
L_1E45	LD	H,B
	LD	L,C
	CALL	L_196E
	DEC	HL
	LD	(#5C57),HL
	RET
;
L_1E4F	CALL	FIND_INT2
	LD	A,B
	OR	C
	JR	NZ,L_1E5A
	LD	BC,(#5C78)
L_1E5A	LD	(#5C76),BC
	RET
;
L_1E5F	LD	HL,(#5C6E)
	LD	D,(IY+#36)
	JR	L_1E73
;
L_1E67	CALL	FIND_INT2
	LD	H,B
	LD	L,C
	LD	D,#00
	LD	A,H
	CP	#F0
	JR	NC,L_1E9F
L_1E73	LD	(#5C42),HL
	LD	(IY+#0A),D
	RET
;
L_1E7A	CALL	L_1E85
	OUT	(C),A
	RET
;
L_1E80	LD	DE,(#5C65)
	RET
;
L_1E85	CALL	L_2DD5
	PUSH	AF
	CALL	FIND_INT2
	POP	AF
L_1E8D	JR	C,L_1E9F
	JR	Z,L_1E93
	NEG
L_1E93	RET


FIND_INT1:	CALL	L_2DD5
		JR	L_1E8D

FIND_INT2:	CALL	L_2DA2
		JR	C,L_1E9F
		RET	Z

L_1E9F	RST	#08
;
;#1EA0
	DB	#0A
;
L_1EA1	CALL	L_1E67
	LD	BC,#0000
	CALL	L_1E45
	JR	L_1EAF
;
L_1EAC	CALL	FIND_INT2
L_1EAF	LD	A,B
	OR	C
	JR	NZ,L_1EB7
	LD	BC,(#5CB2)
L_1EB7	PUSH	BC
	LD	DE,(#5C4B)
	LD	HL,(#5C59)
	DEC	HL
	CALL	L_19E5
	CALL	L_0D6B
	LD	HL,(#5C65)
	LD	DE,#0032
	ADD	HL,DE
	POP	DE
	SBC	HL,DE
	JR	NC,L_1EDA
	LD	HL,(#5CB4)
	AND	A
	SBC	HL,DE
	JR	NC,L_1EDC
L_1EDA	RST	#08
;
;#1EDB
	DB	#15
;
L_1EDC	EX	DE,HL
	LD	(#5CB2),HL
	POP	DE
	POP	BC
	LD	(HL),#3E
	DEC	HL
	LD	SP,HL
	PUSH	BC
	LD	(#5C3D),SP
	EX	DE,HL
	JP	(HL)
;
L_1EED	POP	DE
	LD	H,(IY+#0D)
	INC	H
	EX	(SP),HL
	INC	SP
	LD	BC,(#5C45)
	PUSH	BC
	PUSH	HL
	LD	(#5C3D),SP
	PUSH	DE
	CALL	L_1E67
	LD	BC,#0014
L_1F05	LD	HL,(#5C65)
	ADD	HL,BC
	JR	C,L_1F15
	EX	DE,HL
	LD	HL,#0050
	ADD	HL,DE
	JR	C,L_1F15
	SBC	HL,SP
	RET	C
L_1F15	LD	L,#03
	JP	ERROR_3
;
	LD	BC,#0000
	CALL	L_1F05
	LD	B,H
	LD	C,L
	RET
;
L_1F23	POP	BC
	POP	HL
	POP	DE
	LD	A,D
	CP	#3E
	JR	Z,L_1F36
	DEC	SP
	EX	(SP),HL
	EX	DE,HL
	LD	(#5C3D),SP
	PUSH	BC
	JP	L_1E73
;
L_1F36	PUSH	DE
	PUSH	HL
	RST	#08
;
;#1F39
	DB	#06
;
L_1F3A	CALL	FIND_INT2
L_1F3D	HALT
	DEC	BC
	LD	A,B
	OR	C
	JR	Z,L_1F4F
	LD	A,B
	AND	C
	INC	A
	JR	NZ,L_1F49
	INC	BC
L_1F49	BIT	5,(IY+#01)
	JR	Z,L_1F3D
L_1F4F	RES	5,(IY+#01)
	RET
;
L_1F54	LD	A,#7F
	IN	A,(#FE)
	RRA
	RET	C
	LD	A,#FE
	IN	A,(#FE)
	RRA
	RET
;
L_1F60	CALL	L_2530
	JR	Z,L_1F6A
	LD	A,#CE
	JP	L_1E39
;
L_1F6A	SET	6,(IY+#01)
	CALL	L_2C8D
	JR	NC,L_1F89
	RST	#20
	CP	#24
	JR	NZ,L_1F7D
	RES	6,(IY+#01)
	RST	#20
L_1F7D	CP	#28
	JR	NZ,L_1FBD
L_1F80	EQU	$-1
	RST	#20
	CP	#29
	JR	Z,L_1FA6
L_1F86	CALL	L_2C8D
L_1F89	JP	NC,L_1C8A
	EX	DE,HL
	RST	#20
	CP	#24
	JR	NZ,L_1F94
	EX	DE,HL
	RST	#20
L_1F94	EX	DE,HL
	LD	BC,#0006
	CALL	MAKE_ROOM
	INC	HL
	INC	HL
	LD	(HL),#0E
	CP	#2C
	JR	NZ,L_1FA6
	RST	#20
	JR	L_1F86
;
L_1FA6	CP	#29
	JR	NZ,L_1FBD
	RST	#20
	CP	#3D
	JR	NZ,L_1FBD
	RST	#20
	LD	A,(#5C3B)
	PUSH	AF
	CALL	L_24FB
	POP	AF
	XOR	(IY+#01)
	AND	#40
L_1FBD	JP	NZ,L_1C8A
	CALL	CHECK_END
L_1FC3	CALL	L_2530
	POP	HL
	RET	Z
	JP	(HL)
;
L_1FC9	LD	A,#03
	JR	L_1FCF
;
L_1FCD	LD	A,#02
L_1FCF	CALL	L_2530
	CALL	NZ,L_1601
	CALL	L_0D4D
	CALL	L_1FDF
	CALL	CHECK_END
	RET
;
L_1FDF	RST	#18
	CALL	L_2045
	JR	Z,L_1FF2
L_1FE5	CALL	L_204E
	JR	Z,L_1FE5
	CALL	L_1FFC
	CALL	L_204E
	JR	Z,L_1FE5
L_1FF2	CP	#29
	RET	Z
L_1FF5	CALL	L_1FC3
L_1FF8	LD	A,#0D
	RST	#10
	RET
;
L_1FFC	RST	#18
	CP	#AC
	JR	NZ,L_200E
L_2000	EQU	$-1
	CALL	L_1C79
	CALL	L_1FC3
	CALL	L_2307
	LD	A,#16
	JR	L_201E
;
L_200E	CP	#AD
	JR	NZ,L_2024
	RST	#20
	CALL	L_1C82
	CALL	L_1FC3
	CALL	FIND_INT2
	LD	A,#17
L_201E	RST	#10
	LD	A,C
	RST	#10
	LD	A,B
	RST	#10
	RET
;
L_2024	CALL	L_21F2
	RET	NC
	CALL	L_2070
	RET	NC
	CALL	L_24FB
	CALL	L_1FC3
	BIT	6,(IY+#01)
	CALL	Z,L_2BF1
	JP	NZ,PRINT_FP
L_203C	LD	A,B
	OR	C
	DEC	BC
	RET	Z
	LD	A,(DE)
	INC	DE
	RST	#10
	JR	L_203C
;
L_2045	CP	#29
	RET	Z
L_2048	CP	#0D
	RET	Z
	CP	#3A
	RET
;
L_204E	RST	#18
	CP	#3B
	JR	Z,L_2067
	CP	#2C
	JR	NZ,L_2061
	CALL	L_2530
	JR	Z,L_2067
	LD	A,#06
	RST	#10
	JR	L_2067
;
L_2061	CP	#27
	RET	NZ
	CALL	L_1FF5
L_2067	RST	#20
	CALL	L_2045
	JR	NZ,L_206E
	POP	BC
L_206E	CP	A
	RET
;
L_2070	CP	#23
	SCF
	RET	NZ
	RST	#20
	CALL	L_1C82
	AND	A
	CALL	L_1FC3
	CALL	FIND_INT1
	CP	#10
	JP	NC,L_160E
	CALL	L_1601
	AND	A
	RET
;
L_2089	CALL	L_2530
	JR	Z,L_2096
	LD	A,#01
	CALL	L_1601
	CALL	L_0D6E
L_2096	LD	(IY+#02),#01
	CALL	L_20C1
	CALL	CHECK_END
	LD	BC,(#5C88)
	LD	A,(#5C6B)
	CP	B
	JR	C,L_20AD
	LD	C,#21
	LD	B,A
L_20AD	LD	(#5C88),BC
	LD	A,#19
	SUB	B
	LD	(#5C8C),A
	RES	0,(IY+#02)
	CALL	L_0DD9
	JP	L_0D6E
;
L_20C1	CALL	L_204E
	JR	Z,L_20C1
	CP	#28
	JR	NZ,L_20D8
	RST	#20
	CALL	L_1FDF
	RST	#18
	CP	#29
	JP	NZ,L_1C8A
	RST	#20
	JP	L_21B2
;
L_20D8	CP	#CA
	JR	NZ,L_20ED
	RST	#20
	CALL	L_1C1F
	SET	7,(IY+#37)
	BIT	6,(IY+#01)
	JP	NZ,L_1C8A
	JR	L_20FA
;
L_20ED	CALL	L_2C8D
	JP	NC,L_21AF
	CALL	L_1C1F
	RES	7,(IY+#37)
L_20FA	CALL	L_2530
	JP	Z,L_21B2
	CALL	L_16BF
	LD	HL,#5C71
	RES	6,(HL)
	SET	5,(HL)
	LD	BC,#0001
	BIT	7,(HL)
	JR	NZ,L_211C
	LD	A,(#5C3B)
	AND	#40
	JR	NZ,L_211A
	LD	C,#03
L_211A	OR	(HL)
	LD	(HL),A
L_211C	RST	#30
	LD	(HL),#0D
	LD	A,C
	RRCA
	RRCA
	JR	NC,L_2129
	LD	A,#22
	LD	(DE),A
	DEC	HL
	LD	(HL),A
L_2129	LD	(#5C5B),HL
	BIT	7,(IY+#37)
	JR	NZ,L_215E
	LD	HL,(#5C5D)
	PUSH	HL
	LD	HL,(#5C3D)
	PUSH	HL
L_213A	LD	HL,L_213A
	PUSH	HL
	BIT	4,(IY+#30)
	JR	Z,L_2148
	LD	(#5C3D),SP
L_2148	LD	HL,(#5C61)
	CALL	L_11A7
	LD	(IY+#00),#FF
	CALL	L_0F2C
	RES	7,(IY+#01)
	CALL	L_21B9
	JR	L_2161
;
L_215E	CALL	L_0F2C
L_2161	LD	(IY+#22),#00
	CALL	L_21D6
	JR	NZ,L_2174
	CALL	L_111D
	LD	BC,(#5C82)
	CALL	L_0DD9
L_2174	LD	HL,#5C71
	RES	5,(HL)
	BIT	7,(HL)
	RES	7,(HL)
	JR	NZ,L_219B
	POP	HL
	POP	HL
	LD	(#5C3D),HL
	POP	HL
	LD	(#5C5F),HL
	SET	7,(IY+#01)
	CALL	L_21B9
	LD	HL,(#5C5F)
	LD	(IY+#26),#00
	LD	(#5C5D),HL
	JR	L_21B2
;
L_219B	LD	HL,(#5C63)
	LD	DE,(#5C61)
	SCF
	SBC	HL,DE
	LD	B,H
	LD	C,L
	CALL	L_2AB2
	CALL	L_2AFF
	JR	L_21B2
;
L_21AF	CALL	L_1FFC
L_21B2	CALL	L_204E
	JP	Z,L_20C1
	RET
;
L_21B9	LD	HL,(#5C61)
	LD	(#5C5D),HL
	RST	#18
	CP	#E2
	JR	Z,L_21D0
	LD	A,(#5C71)
	CALL	L_1C59
	RST	#18
	CP	#0D
	RET	Z
	RST	#08
;
;#21CF
	DB	#0B
;
L_21D0	CALL	L_2530
	RET	Z
	RST	#08
;
;#21D5
	DB	#10
;
L_21D6	LD	HL,(#5C51)
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	CP	#4B
	RET
;
L_21E1	RST	#20
L_21E2	CALL	L_21F2
	RET	C
	RST	#18
	CP	#2C
	JR	Z,L_21E1
	CP	#3B
	JR	Z,L_21E1
	JP	L_1C8A
;
L_21F2	CP	#D9
	RET	C
	CP	#DF
	CCF
	RET	C
	PUSH	AF
	RST	#20
	POP	AF
L_21FC	SUB	#C9
	PUSH	AF
	CALL	L_1C82
	POP	AF
	AND	A
	CALL	L_1FC3
	PUSH	AF
	CALL	FIND_INT1
	LD	D,A
	POP	AF
	RST	#10
	LD	A,D
	RST	#10
	RET
;
L_2211	SUB	#11
	ADC	A,#00
	JR	Z,L_2234
	SUB	#02
	ADC	A,#00
	JR	Z,L_2273
	CP	#01
	LD	A,D
	LD	B,#01
	JR	NZ,L_2228
	RLCA
	RLCA
	LD	B,#04
L_2228	LD	C,A
	LD	A,D
	CP	#02
	JR	NC,L_2244
	LD	A,C
	LD	HL,#5C91
	JR	L_226C
;
L_2234	LD	A,D
	LD	B,#07
	JR	C,L_223E
	RLCA
	RLCA
	RLCA
	LD	B,#38
L_223E	LD	C,A
	LD	A,D
	CP	#0A
	JR	C,L_2246
L_2244	RST	#08
;
;#2245
	DB	#13
;
L_2246	LD	HL,#5C8F
	CP	#08
	JR	C,L_2258
	LD	A,(HL)
	JR	Z,L_2257
	OR	B
	CPL
	AND	#24
	JR	Z,L_2257
	LD	A,B
L_2257	LD	C,A
L_2258	LD	A,C
	CALL	L_226C
	LD	A,#07
	CP	D
	SBC	A,A
	CALL	L_226C
	RLCA
	RLCA
	AND	#50
	LD	B,A
	LD	A,#08
	CP	D
	SBC	A,A
L_226C	XOR	(HL)
	AND	B
	XOR	(HL)
	LD	(HL),A
	INC	HL
	LD	A,B
	RET
;
L_2273	SBC	A,A
	LD	A,D
	RRCA
	LD	B,#80
	JR	NZ,L_227D
	RRCA
	LD	B,#40
L_227D	LD	C,A
	LD	A,D
	CP	#08
	JR	Z,L_2287
	CP	#02
	JR	NC,L_2244
L_2287	LD	A,C
	LD	HL,#5C8F
	CALL	L_226C
	LD	A,C
	RRCA
	RRCA
	RRCA
	JR	L_226C
;
L_2294	CALL	FIND_INT1
	CP	#08
	JR	NC,L_2244
	OUT	(#FE),A
	RLCA
	RLCA
	RLCA
	BIT	5,A
	JR	NZ,L_22A6
	XOR	#07
L_22A6	LD	(#5C48),A
	RET
;
L_22AA	LD	A,#AF
	SUB	B
	JP	C,L_24F9
	LD	B,A
	AND	A
	RRA
	SCF
	RRA
	AND	A
	RRA
	XOR	B
	AND	#F8
	XOR	B
	LD	H,A
	LD	A,C
	RLCA
	RLCA
	RLCA
	XOR	B
	AND	#C7
	XOR	B
	RLCA
	RLCA
	LD	L,A
	LD	A,C
	AND	#07
	RET
;
L_22CB	CALL	L_2307
	CALL	L_22AA
	LD	B,A
	INC	B
	LD	A,(HL)
L_22D4	RLCA
	DJNZ	L_22D4
	AND	#01
	JP	STACK_A
;
L_22DC	CALL	L_2307
	CALL	L_22E5
	JP	L_0D4D
;
L_22E5	LD	(#5C7D),BC
	CALL	L_22AA
	LD	B,A
	INC	B
	LD	A,#FE
L_22F0	RRCA
	DJNZ	L_22F0
	LD	B,A
	LD	A,(HL)
	LD	C,(IY+#57)
	BIT	0,C
	JR	NZ,L_22FD
	AND	B
L_22FD	BIT	2,C
	JR	NZ,L_2303
	XOR	B
	CPL
L_2303	LD	(HL),A
	JP	L_0BDB
;
L_2307	CALL	L_2314
	LD	B,A
	PUSH	BC
	CALL	L_2314
	LD	E,C
	POP	BC
	LD	D,C
	LD	C,A
	RET
;
L_2314	CALL	L_2DD5
	JP	C,L_24F9
	LD	C,#01
	RET	Z
	LD	C,#FF
	RET
;
L_2320	RST	#18
	CP	#2C
	JP	NZ,L_1C8A
	RST	#20
	CALL	L_1C82
	CALL	CHECK_END
	RST	#28	;*calc
;
;#232E
	DB	#2A
	DB	#3D
	DB	#38
;
;#2331
	LD	A,(HL)
	CP	#81
	JR	NC,L_233B
	RST	#28	;*calc
;
;#2337
	DB	#02
	DB	#38
;
;#2339
	JR	L_22DC
;
L_233B	RST	#28	;*calc
;
;#233C
	DB	#A3
	DB	#38
;
;#233E
	LD	(HL),#83
	RST	#28	;*calc
;
;#2341
	DB	#C5
	DB	#02
	DB	#38
;
;#2344
	CALL	L_247D
	PUSH	BC
	RST	#28	;*calc
;
;#2349
	DB	#31
	DB	#E1
	DB	#04
	DB	#38
;
;#234D
	LD	A,(HL)
	CP	#80
	JR	NC,L_235A
	RST	#28	;*calc
;
;#2353
	DB	#02
	DB	#02
	DB	#38
;
;#2356
	POP	BC
	JP	L_22DC
;
L_235A	RST	#28	;*calc
;
;#235B
	DB	#C2
	DB	#01
	DB	#C0
	DB	#02
	DB	#03
	DB	#01
	DB	#E0
	DB	#0F
	DB	#C0
	DB	#01
	DB	#31
	DB	#E0
	DB	#01
	DB	#31
	DB	#E0
	DB	#A0
	DB	#C1
	DB	#02
	DB	#38
;
;#236E
	INC	(IY+#62)
	CALL	FIND_INT1
	LD	L,A
	PUSH	HL
	CALL	FIND_INT1
	POP	HL
	LD	H,A
	LD	(#5C7D),HL
	POP	BC
	JP	L_2420
;
L_2382	RST	#18
	CP	#2C
	JR	Z,L_238D
	CALL	CHECK_END
	JP	L_2477
;
L_238D	RST	#20
	CALL	L_1C82
	CALL	CHECK_END
	RST	#28	;*calc
;
;#2395
	DB	#C5
	DB	#A2
	DB	#04
	DB	#1F
	DB	#31
	DB	#30
	DB	#30
	DB	#00
	DB	#06
	DB	#02
	DB	#38
;
;#23A0
	JP	L_2477
;
;#23A3
	DB	#C0
	DB	#02
	DB	#C1
	DB	#02
	DB	#31
	DB	#2A
	DB	#E1
	DB	#01
	DB	#E1
	DB	#2A
	DB	#0F
	DB	#E0
	DB	#05
	DB	#2A
	DB	#E0
	DB	#01
	DB	#3D
	DB	#38
;
;#23B5
	LD	A,(HL)
	CP	#81
	JR	NC,L_23C1
	RST	#28	;*calc
;
;#23BB
	DB	#02
	DB	#02
	DB	#38
;
;#23BE
	JP	L_2477
;
L_23C1	CALL	L_247D
	PUSH	BC
	RST	#28	;*calc
;
;#23C6
	DB	#02
	DB	#E1
	DB	#01
	DB	#05
	DB	#C1
	DB	#02
	DB	#01
	DB	#31
	DB	#E1
	DB	#04
	DB	#C2
	DB	#02
	DB	#01
	DB	#31
	DB	#E1
	DB	#04
	DB	#E2
	DB	#E5
	DB	#E0
	DB	#03
	DB	#A2
	DB	#04
	DB	#31
	DB	#1F
	DB	#C5
	DB	#02
	DB	#20
	DB	#C0
	DB	#02
	DB	#C2
	DB	#02
	DB	#C1
	DB	#E5
	DB	#04
	DB	#E0
	DB	#E2
	DB	#04
	DB	#0F
	DB	#E1
	DB	#01
	DB	#C1
	DB	#02
	DB	#E0
	DB	#04
	DB	#E2
	DB	#E5
	DB	#04
	DB	#03
	DB	#C2
	DB	#2A
	DB	#E1
	DB	#2A
	DB	#0F
	DB	#02
	DB	#38
;
;#23FD
	LD	A,(DE)
	CP	#81
	POP	BC
	JP	C,L_2477
	PUSH	BC
	RST	#28	;*calc
;
;#2406
	DB	#01
	DB	#38
;
;#2408
	LD	A,(#5C7D)
	CALL	STACK_A
	RST	#28	;*calc
;
;#240F
	DB	#C0
	DB	#0F
	DB	#01
	DB	#38
;
;#2413
	LD	A,(#5C7E)
	CALL	STACK_A
	RST	#28	;*calc
;
;#241A
	DB	#C5
	DB	#0F
	DB	#E0
	DB	#E5
	DB	#38
;
;#241F
	POP	BC
L_2420	DEC	B
	JR	Z,L_245F
	JR	L_2439
;
L_2425	RST	#28	;*calc
;
;#2426
	DB	#E1
	DB	#31
	DB	#E3
	DB	#04
	DB	#E2
	DB	#E4
	DB	#04
	DB	#03
	DB	#C1
	DB	#02
	DB	#E4
	DB	#04
	DB	#E2
	DB	#E3
	DB	#04
	DB	#0F
	DB	#C2
	DB	#02
	DB	#38
;
L_2439	PUSH	BC
	RST	#28	;*calc
;
;#243B
	DB	#C0
	DB	#02
	DB	#E1
	DB	#0F
	DB	#31
	DB	#38
;
;#2441
	LD	A,(#5C7D)
	CALL	STACK_A
	RST	#28	;*calc
;
;#2448
	DB	#03
	DB	#E0
	DB	#E2
	DB	#0F
	DB	#C0
	DB	#01
	DB	#E0
	DB	#38
;
;#2450
	LD	A,(#5C7E)
	CALL	STACK_A
	RST	#28	;*calc
;
;#2457
	DB	#03
	DB	#38
;
;#2459
	CALL	L_24B7
	POP	BC
	DJNZ	L_2425
L_245F	RST	#28	;*calc
;
;#2460
	DB	#02
	DB	#02
	DB	#01
	DB	#38
;
;#2464
	LD	A,(#5C7D)
	CALL	STACK_A
	RST	#28	;*calc
;
;#246B
	DB	#03
	DB	#01
	DB	#38
;
;#246E
	LD	A,(#5C7E)
	CALL	STACK_A
	RST	#28	;*calc
;
;#2475
	DB	#03
	DB	#38
;
L_2477	CALL	L_24B7
	JP	L_0D4D
;
L_247D	RST	#28	;*calc
;
;#247E
	DB	#31
	DB	#28
	DB	#34
	DB	#32
	DB	#00
	DB	#01
	DB	#05
	DB	#E5
	DB	#01
	DB	#05
	DB	#2A
	DB	#38
;
;#248A
	CALL	L_2DD5
	JR	C,L_2495
	AND	#FC
	ADD	A,#04
	JR	NC,L_2497
L_2495	LD	A,#FC
L_2497	PUSH	AF
	CALL	STACK_A
	RST	#28	;*calc
;
;#249C
	DB	#E5
	DB	#01
	DB	#05
	DB	#31
	DB	#1F
	DB	#C4
	DB	#02
	DB	#31
	DB	#A2
	DB	#04
	DB	#1F
	DB	#C1
	DB	#01
	DB	#C0
	DB	#02
	DB	#31
	DB	#04
	DB	#31
	DB	#0F
	DB	#A1
	DB	#03
	DB	#1B
	DB	#C3
	DB	#02
	DB	#38
;
;#24B5
	POP	BC
	RET
;
L_24B7	CALL	L_2307
	LD	A,C
	CP	B
	JR	NC,L_24C4
	LD	L,C
	PUSH	DE
	XOR	A
	LD	E,A
	JR	L_24CB
;
L_24C4	OR	C
	RET	Z
	LD	L,B
	LD	B,C
	PUSH	DE
	LD	D,#00
L_24CB	LD	H,B
	LD	A,B
	RRA
L_24CE	ADD	A,L
	JR	C,L_24D4
	CP	H
	JR	C,L_24DB
L_24D4	SUB	H
	LD	C,A
	EXX
	POP	BC
	PUSH	BC
	JR	L_24DF
;
L_24DB	LD	C,A
	PUSH	DE
	EXX
	POP	BC
L_24DF	LD	HL,(#5C7D)
	LD	A,B
	ADD	A,H
	LD	B,A
	LD	A,C
	INC	A
	ADD	A,L
	JR	C,L_24F7
	JR	Z,L_24F9
L_24EC	DEC	A
	LD	C,A
	CALL	L_22E5
	EXX
	LD	A,C
	DJNZ	L_24CE
	POP	DE
	RET
;
L_24F7	JR	Z,L_24EC
L_24F9	RST	#08
;
;#24FA
	DB	#0A
;
L_24FB	RST	#18
	LD	B,#00
	PUSH	BC
L_24FF	LD	C,A
	CALL	HEXA
	CALL	L_16DC
	LD	A,C
	JP	NC,L_2684
	LD	B,#00
	LD	C,(HL)
	ADD	HL,BC
	JP	(HL)
;
L_250F	CALL	CH_ADD_1
	INC	BC
	CP	#0D
	JP	Z,L_1C8A
	CP	#22
	JR	NZ,L_250F
	CALL	CH_ADD_1
	CP	#22
	RET
;
L_2522	RST	#20
	CP	#28
	JR	NZ,L_252D
	CALL	L_1C79
	RST	#18
	CP	#29
L_252D	JP	NZ,L_1C8A
L_2530	BIT	7,(IY+#01)
	RET
;
L_2535	CALL	L_2307
	LD	HL,(#5C36)
	LD	DE,#0100
	ADD	HL,DE
	LD	A,C
	RRCA
	RRCA
	RRCA
	AND	#E0
	XOR	B
	LD	E,A
	LD	A,C
	AND	#18
	XOR	#40
	LD	D,A
	LD	B,#60
L_254F	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	A,(DE)
	XOR	(HL)
	JR	Z,L_255A
	INC	A
	JR	NZ,S_SCR_NXT
	DEC	A
L_255A	LD	C,A
	LD	B,#07
L_255D	INC	D
	INC	HL
	LD	A,(DE)
	XOR	(HL)
	XOR	C
	JR	NZ,S_SCR_NXT
	DJNZ	L_255D
	POP	BC
	POP	BC
	POP	BC
	LD	A,#80
	SUB	B
	LD	BC,#0001
	RST	#30
	LD	(DE),A
	JR	S_SCR_STO

S_SCR_NXT:	POP	HL
		LD	DE,#0008
		ADD	HL,DE
		POP	DE
		POP	BC
		DJNZ	L_254F
		LD	C,B
S_SCR_STO:	RET				; bugfix ?

		DB	#B2,#2A			; remain of CALL STK_STO_D (#2AB2)
L_2580	CALL	L_2307
	LD	A,C
	RRCA
	RRCA
	RRCA
	LD	C,A
	AND	#E0
	XOR	B
	LD	L,A
	LD	A,C
	AND	#03
	XOR	#58
	LD	H,A
	LD	A,(HL)
	JP	STACK_A
;
L_2596	DB	#22
	DB	#1C
	DB	#28
	DB	#4F
	DB	#2E
	DB	#F2
	DB	#2B
	DB	#12
	DB	#A8
	DB	#56
	DB	#A5
	DB	#57
	DB	#A7
	DB	#84
	DB	#A6
	DB	#8F
	DB	#C4
	DB	#E6
	DB	#AA
	DB	#BF
	DB	#AB
	DB	#C7
	DB	#A9
	DB	#CE
	DB	#00
;
;#25AF
	RST	#20
	JP	L_24FF
;
	RST	#18
	INC	HL
	PUSH	HL
	LD	BC,#0000
	CALL	L_250F
	JR	NZ,L_25D9
L_25BE	CALL	L_250F
	JR	Z,L_25BE
	CALL	L_2530
	JR	Z,L_25D9
	RST	#30
	POP	HL
	PUSH	DE
L_25CB	LD	A,(HL)
	INC	HL
	LD	(DE),A
	INC	DE
	CP	#22
	JR	NZ,L_25CB
	LD	A,(HL)
	INC	HL
	CP	#22
	JR	Z,L_25CB
L_25D9	DEC	BC
	POP	DE
L_25DB	LD	HL,#5C3B
	RES	6,(HL)
	BIT	7,(HL)
	CALL	NZ,L_2AB2
	JP	L_2712
;
	RST	#20
	CALL	L_24FB
	CP	#29
	JP	NZ,L_1C8A
	RST	#20
	JP	L_2712
;
	JP	L_27BD
;
	CALL	L_2530
	JR	Z,L_2625
	LD	BC,(#5C76)
	CALL	STACK_BC
	RST	#28	;*calc
;
;#2605
	DB	#A1
	DB	#0F
	DB	#34
	DB	#37
	DB	#16
	DB	#04
	DB	#34
	DB	#80
	DB	#41
	DB	#00
	DB	#00
	DB	#80
	DB	#32
	DB	#02
	DB	#A1
	DB	#03
	DB	#31
	DB	#38
;
;#2617
	CALL	L_2DA2
	LD	(#5C76),BC
	LD	A,(HL)
	AND	A
	JR	Z,L_2625
	SUB	#10
	LD	(HL),A
L_2625	JR	L_2630
;
	CALL	L_2530
	JR	Z,L_2630
	RST	#28	;*calc
;
;#262D
	DB	#A3
	DB	#38
;
;#262F
	INC	(HL)
L_2630	RST	#20
	JP	L_26C3
;
	LD	BC,L_105A
	RST	#20
	CP	#23
	JP	Z,L_270D
	LD	HL,#5C3B
	RES	6,(HL)
	BIT	7,(HL)
	JR	Z,L_2665
	CALL	KEY_SCAN
	LD	C,#00
	JR	NZ,L_2660
	CALL	K_TEST
	JR	NC,L_2660
	DEC	D
	LD	E,A
	CALL	K_DECODE
	PUSH	AF
	LD	BC,#0001
	RST	#30
	POP	AF
	LD	(DE),A
	LD	C,#01
L_2660	LD	B,#00
	CALL	L_2AB2
L_2665	JP	L_2712
;
	CALL	L_2522
	CALL	NZ,L_2535
	RST	#20
	JP	L_25DB
;
	CALL	L_2522
	CALL	NZ,L_2580
	RST	#20
	JR	L_26C3
;
	CALL	L_2522
	CALL	NZ,L_22CB
	RST	#20
	JR	L_26C3
;
L_2684	CALL	L_2C88
	JR	NC,L_26DF
	CP	#41
	JR	NC,L_26C9
	CALL	L_2530
	JR	NZ,L_26B5
	CALL	L_2C9B
L_2695	RST	#18
	LD	BC,#0006
	CALL	MAKE_ROOM
	INC	HL
	LD	(HL),#0E
	INC	HL
	EX	DE,HL
	LD	HL,(#5C65)
	LD	C,#05
	AND	A
	SBC	HL,BC
	LD	(#5C65),HL
	LDIR
	EX	DE,HL
	DEC	HL
	CALL	TEMP_PTR1
	JR	L_26C3
;
L_26B5	RST	#18
L_26B6	INC	HL
	LD	A,(HL)
	CP	#0E
	JR	NZ,L_26B6
	INC	HL
	CALL	STACK_NUM
	LD	(#5C5D),HL
L_26C3	SET	6,(IY+#01)
	JR	L_26DD
;
L_26C9	CALL	L_28B2
	JP	C,L_1C2E
	CALL	Z,L_2996
	LD	A,(#5C3B)
	CP	#C0
	JR	C,L_26DD
	INC	HL
	CALL	STACK_NUM
L_26DD	JR	L_2712
;
L_26DF	LD	BC,#09DB
	CP	#2D
	JR	Z,L_270D
	LD	BC,L_1018
	CP	#AE
	JR	Z,L_270D
L_26ED	SUB	#AF
	JP	C,L_1C8A
	LD	BC,#04F0			; was L_04F0
	CP	#14
	JR	Z,L_270D
	JP	NC,L_1C8A
	LD	B,#10
	ADD	A,#DC
	LD	C,A
	CP	#DF
	JR	NC,L_2707
	RES	6,C
L_2707	CP	#EE
	JR	C,L_270D
	RES	7,C
L_270D	PUSH	BC
	RST	#20
	JP	L_24FF
;
L_2712	RST	#18
L_2713	CP	#28
	JR	NZ,L_2723
	BIT	6,(IY+#01)
	JR	NZ,L_2734
	CALL	L_2A52
	RST	#20
	JR	L_2713
;
L_2723	LD	B,#00
	LD	C,A
	LD	HL,L_2795
	CALL	L_16DC
	JR	NC,L_2734
	LD	C,(HL)
	LD	HL,L_26ED
	ADD	HL,BC
	LD	B,(HL)
L_2734	POP	DE
	LD	A,D
	CP	B
	JR	C,L_2773
	AND	A
	JP	Z,GET_CHAR
	PUSH	BC
	LD	HL,#5C3B
	LD	A,E
	CP	#ED
	JR	NZ,L_274C
	BIT	6,(HL)
	JR	NZ,L_274C
	LD	E,#99
L_274C	PUSH	DE
	CALL	L_2530
	JR	Z,L_275B
	LD	A,E
	AND	#3F
	LD	B,A
	RST	#28	;*calc
;
;#2757
	DB	#3B
	DB	#38
;
;#2759
	JR	L_2764
;
L_275B	LD	A,E
	CALL	VAL1
	AND	#40
L_2761	JP	NZ,L_1C8A
L_2764	POP	DE
	LD	HL,#5C3B
	SET	6,(HL)
	BIT	7,E
	JR	NZ,L_2770
	RES	6,(HL)
L_2770	POP	BC
	JR	L_2734
;
L_2773	PUSH	DE
	LD	A,C
	BIT	6,(IY+#01)
	JR	NZ,L_2790
	AND	#3F
	ADD	A,#08
	LD	C,A
	CP	#10
	JR	NZ,L_2788
	SET	6,C
	JR	L_2790
;
L_2788	JR	C,L_2761
	CP	#17
	JR	Z,L_2790
	SET	7,C
L_2790	PUSH	BC
	RST	#20
	JP	L_24FF
;
L_2795	DB	"+"
;
;#2796
	DB	#CF
;
;#2797
	DB	"-"
;
;#2798
	DB	#C3
;
;#2799
	DB	"*"
;
;#279A
	DB	#C4
;
;#279B
	DB	"/"
;
;#279C
	DB	#C5
;
;#279D
	DB	"^"
;
;#279E
	DB	#C6
;
;#279F
	DB	"="
;
;#27A0
	DB	#CE
;
;#27A1
	DB	">"
;
;#27A2
	DB	#CC
;
;#27A3
	DB	"<"
;
;#27A4
	DB	#CD
	DB	#C7
	DB	#C9
	DB	#C8
	DB	#CA
	DB	#C9
	DB	#CB
	DB	#C5
	DB	#C7
	DB	#C6
	DB	#C8
	DB	#00
	DB	#06
	DB	#08
	DB	#08
	DB	#0A
	DB	#02
	DB	#03
	DB	#05
	DB	#05
	DB	#05
	DB	#05
	DB	#05
	DB	#05
	DB	#06
;
L_27BD	CALL	L_2530
	JR	NZ,L_27F7
	RST	#20
	CALL	L_2C8D
	JP	NC,L_1C8A
	RST	#20
	CP	#24
	PUSH	AF
	JR	NZ,L_27D0
	RST	#20
L_27D0	CP	#28
	JR	NZ,L_27E6
	RST	#20
	CP	#29
	JR	Z,L_27E9
L_27D9	CALL	L_24FB
	RST	#18
	CP	#2C
	JR	NZ,L_27E4
	RST	#20
	JR	L_27D9
;
L_27E4	CP	#29
L_27E6	JP	NZ,L_1C8A
L_27E9	RST	#20
	LD	HL,#5C3B
	RES	6,(HL)
	POP	AF
	JR	Z,L_27F4
	SET	6,(HL)
L_27F4	JP	L_2712
;
L_27F7	RST	#20
	AND	#DF
	LD	B,A
	RST	#20
	SUB	#24
	LD	C,A
	JR	NZ,L_2802
	RST	#20
L_2802	RST	#20
	PUSH	HL
	LD	HL,(#5C53)
	DEC	HL
L_2808	LD	DE,#00CE
	PUSH	BC
	CALL	L_1D86
	POP	BC
	JR	NC,L_2814
	RST	#08
;
;#2813
	DB	#18
;
L_2814	PUSH	HL
	CALL	L_28AB
	AND	#DF
	CP	B
	JR	NZ,L_2825
	CALL	L_28AB
	SUB	#24
	CP	C
	JR	Z,L_2831
L_2825	POP	HL
	DEC	HL
	LD	DE,#0200
	PUSH	BC
	CALL	L_198B
	POP	BC
	JR	L_2808
;
L_2831	AND	A
	CALL	Z,L_28AB
	POP	DE
	POP	DE
	LD	(#5C5D),DE
	CALL	L_28AB
	PUSH	HL
	CP	#29
	JR	Z,L_2885
L_2843	INC	HL
	LD	A,(HL)
	CP	#0E
	LD	D,#40
	JR	Z,L_2852
	DEC	HL
	CALL	L_28AB
	INC	HL
	LD	D,#00
L_2852	INC	HL
	PUSH	HL
	PUSH	DE
	CALL	L_24FB
	POP	AF
	XOR	(IY+#01)
	AND	#40
	JR	NZ,L_288B
	POP	HL
	EX	DE,HL
	LD	HL,(#5C65)
	LD	BC,#0005
	SBC	HL,BC
	LD	(#5C65),HL
	LDIR
	EX	DE,HL
	DEC	HL
	CALL	L_28AB
	CP	#29
	JR	Z,L_2885
	PUSH	HL
	RST	#18
	CP	#2C
	JR	NZ,L_288B
	RST	#20
	POP	HL
	CALL	L_28AB
	JR	L_2843
;
L_2885	PUSH	HL
	RST	#18
	CP	#29
	JR	Z,L_288D
L_288B	RST	#08
;
;#288C
	DB	#19
;
L_288D	POP	DE
	EX	DE,HL
	LD	(#5C5D),HL
	LD	HL,(#5C0B)
	EX	(SP),HL
	LD	(#5C0B),HL
	PUSH	DE
	RST	#20
	RST	#20
	CALL	L_24FB
	POP	HL
	LD	(#5C5D),HL
	POP	HL
	LD	(#5C0B),HL
	RST	#20
	JP	L_2712
;
L_28AB	INC	HL
	LD	A,(HL)
	CP	#21
	JR	C,L_28AB
	RET
;
L_28B2	SET	6,(IY+#01)
	RST	#18
	CALL	L_2C8D
	JP	NC,L_1C8A
	PUSH	HL
	AND	#1F
	LD	C,A
	RST	#20
	PUSH	HL
	CP	#28
	JR	Z,L_28EF
	SET	6,C
	CP	#24
	JR	Z,L_28DE
	SET	5,C
	CALL	L_2C88
	JR	NC,L_28E3
L_28D4	CALL	L_2C88
	JR	NC,L_28EF
	RES	6,C
	RST	#20
	JR	L_28D4
;
L_28DE	RST	#20
	RES	6,(IY+#01)
L_28E3	LD	A,(#5C0C)
	AND	A
	JR	Z,L_28EF
	CALL	L_2530
	JP	NZ,L_2951
L_28EF	LD	B,C
	CALL	L_2530
	JR	NZ,L_28FD
	LD	A,C
	AND	#E0
	SET	7,A
	LD	C,A
	JR	L_2934
;
L_28FD	LD	HL,(#5C4B)
L_2900	LD	A,(HL)
	AND	#7F
	JR	Z,L_2932
	CP	C
	JR	NZ,L_292A
	RLA
	ADD	A,A
	JP	P,L_293F
	JR	C,L_293F
	POP	DE
	PUSH	DE
	PUSH	HL
L_2912	INC	HL
L_2913	LD	A,(DE)
	INC	DE
	CP	#20
	JR	Z,L_2913
	OR	#20
	CP	(HL)
	JR	Z,L_2912
	OR	#80
	CP	(HL)
	JR	NZ,L_2929
	LD	A,(DE)
	CALL	L_2C88
	JR	NC,L_293E
L_2929	POP	HL
L_292A	PUSH	BC
	CALL	L_19B8
	EX	DE,HL
	POP	BC
	JR	L_2900
;
L_2932	SET	7,B
L_2934	POP	DE
	RST	#18
	CP	#28
	JR	Z,L_2943
	SET	5,B
	JR	L_294B
;
L_293E	POP	DE
L_293F	POP	DE
	POP	DE
	PUSH	HL
	RST	#18
L_2943	CALL	L_2C88
	JR	NC,L_294B
	RST	#20
	JR	L_2943
;
L_294B	POP	HL
	RL	B
	BIT	6,B
	RET
;
L_2951	LD	HL,(#5C0B)
	LD	A,(HL)
	CP	#29
	JP	Z,L_28EF
L_295A	LD	A,(HL)
	OR	#60
	LD	B,A
	INC	HL
	LD	A,(HL)
	CP	#0E
	JR	Z,L_296B
	DEC	HL
	CALL	L_28AB
	INC	HL
	RES	5,B
L_296B	LD	A,B
	CP	C
	JR	Z,L_2981
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	CALL	L_28AB
	CP	#29
	JP	Z,L_28EF
	CALL	L_28AB
	JR	L_295A
;
L_2981	BIT	5,C
	JR	NZ,L_2991
	INC	HL
	LD	DE,(#5C65)
	CALL	L_33C0
	EX	DE,HL
	LD	(#5C65),HL
L_2991	POP	DE
	POP	DE
	XOR	A
	INC	A
	RET
;
L_2996	XOR	A
	LD	B,A
	BIT	7,C
	JR	NZ,L_29E7
	BIT	7,(HL)
	JR	NZ,L_29AE
	INC	A
L_29A1	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	EX	DE,HL
	CALL	L_2AB2
	RST	#18
	JP	L_2A49
;
L_29AE	INC	HL
	INC	HL
	INC	HL
	LD	B,(HL)
	BIT	6,C
	JR	Z,L_29C0
	DEC	B
	JR	Z,L_29A1
	EX	DE,HL
	RST	#18
	CP	#28
	JR	NZ,L_2A20
	EX	DE,HL
L_29C0	EX	DE,HL
	JR	L_29E7
;
L_29C3	PUSH	HL
	RST	#18
	POP	HL
	CP	#2C
	JR	Z,L_29EA
	BIT	7,C
	JR	Z,L_2A20
	BIT	6,C
	JR	NZ,L_29D8
	CP	#29
	JR	NZ,L_2A12
	RST	#20
	RET
;
L_29D8	CP	#29
	JR	Z,L_2A48
	CP	#CC
	JR	NZ,L_2A12
L_29E0	RST	#18
	DEC	HL
	LD	(#5C5D),HL
	JR	L_2A45
;
L_29E7	LD	HL,#0000
L_29EA	PUSH	HL
	RST	#20
	POP	HL
	LD	A,C
	CP	#C0
	JR	NZ,L_29FB
	RST	#18
	CP	#29
	JR	Z,L_2A48
	CP	#CC
	JR	Z,L_29E0
L_29FB	PUSH	BC
	PUSH	HL
	CALL	L_2AEE
	EX	(SP),HL
	EX	DE,HL
	CALL	L_2ACC
	JR	C,L_2A20
	DEC	BC
	CALL	L_2AF4
	ADD	HL,BC
	POP	DE
	POP	BC
	DJNZ	L_29C3
	BIT	7,C
L_2A12	JR	NZ,L_2A7A
	PUSH	HL
	BIT	6,C
	JR	NZ,L_2A2C
	LD	B,D
	LD	C,E
	RST	#18
	CP	#29
	JR	Z,L_2A22
L_2A20	RST	#08
;
;#2A21
	DB	#02
;
L_2A22	RST	#20
	POP	HL
	LD	DE,#0005
	CALL	L_2AF4
	ADD	HL,BC
	RET
;
L_2A2C	CALL	L_2AEE
	EX	(SP),HL
	CALL	L_2AF4
	POP	BC
	ADD	HL,BC
	INC	HL
	LD	B,D
	LD	C,E
	EX	DE,HL
	CALL	L_2AB1
	RST	#18
	CP	#29
	JR	Z,L_2A48
	CP	#2C
	JR	NZ,L_2A20
L_2A45	CALL	L_2A52
L_2A48	RST	#20
L_2A49	CP	#28
	JR	Z,L_2A45
	RES	6,(IY+#01)
	RET
;
L_2A52	CALL	L_2530
	CALL	NZ,L_2BF1
	RST	#20
	CP	#29
	JR	Z,L_2AAD
	PUSH	DE
	XOR	A
	PUSH	AF
	PUSH	BC
	LD	DE,#0001
	RST	#18
	POP	HL
	CP	#CC
	JR	Z,L_2A81
	POP	AF
	CALL	L_2ACD
	PUSH	AF
	LD	D,B
	LD	E,C
	PUSH	HL
	RST	#18
	POP	HL
	CP	#CC
	JR	Z,L_2A81
	CP	#29
L_2A7A	JP	NZ,L_1C8A
	LD	H,D
	LD	L,E
	JR	L_2A94
;
L_2A81	PUSH	HL
	RST	#20
	POP	HL
	CP	#29
	JR	Z,L_2A94
	POP	AF
	CALL	L_2ACD
	PUSH	AF
	RST	#18
	LD	H,B
	LD	L,C
	CP	#29
	JR	NZ,L_2A7A
L_2A94	POP	AF
	EX	(SP),HL
	ADD	HL,DE
	DEC	HL
	EX	(SP),HL
	AND	A
	SBC	HL,DE
	LD	BC,#0000
	JR	C,L_2AA8
	INC	HL
	AND	A
	JP	M,L_2A20
	LD	B,H
	LD	C,L
L_2AA8	POP	DE
L_2AA9	RES	6,(IY+#01)
L_2AAD	CALL	L_2530
	RET	Z
L_2AB1	XOR	A
L_2AB2	RES	6,(IY+#01)
L_2AB6	PUSH	BC
	CALL	L_33A9
	POP	BC
	LD	HL,(#5C65)
	LD	(HL),A
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	(HL),C
	INC	HL
	LD	(HL),B
	INC	HL
	LD	(#5C65),HL
	RET
;
L_2ACC	XOR	A
L_2ACD	PUSH	DE
	PUSH	HL
	PUSH	AF
	CALL	L_1C82
	POP	AF
	CALL	L_2530
	JR	Z,L_2AEB
	PUSH	AF
	CALL	FIND_INT2
	POP	DE
	LD	A,B
	OR	C
	SCF
	JR	Z,L_2AE8
	POP	HL
	PUSH	HL
	AND	A
	SBC	HL,BC
L_2AE8	LD	A,D
	SBC	A,#00
L_2AEB	POP	HL
	POP	DE
	RET
;
L_2AEE	EX	DE,HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	RET
;
L_2AF4	CALL	L_2530
	RET	Z
	CALL	L_30A9
	JP	C,L_1F15
	RET
;
L_2AFF	LD	HL,(#5C4D)
	BIT	1,(IY+#37)
	JR	Z,L_2B66
	LD	BC,#0005
L_2B0B	INC	BC
L_2B0C	INC	HL
	LD	A,(HL)
	CP	#20
	JR	Z,L_2B0C
	JR	NC,L_2B1F
	CP	#10
	JR	C,L_2B29
	CP	#16
	JR	NC,L_2B29
	INC	HL
	JR	L_2B0C
;
L_2B1F	CALL	L_2C88
	JR	C,L_2B0B
	CP	#24
	JP	Z,L_2BC0
L_2B29	LD	A,C
	LD	HL,(#5C59)
	DEC	HL
	CALL	MAKE_ROOM
	INC	HL
	INC	HL
	EX	DE,HL
	PUSH	DE
	LD	HL,(#5C4D)
	DEC	DE
	SUB	#06
	LD	B,A
	JR	Z,L_2B4F
L_2B3E	INC	HL
	LD	A,(HL)
	CP	#21
	JR	C,L_2B3E
	OR	#20
	INC	DE
	LD	(DE),A
	DJNZ	L_2B3E
	OR	#80
	LD	(DE),A
	LD	A,#C0
L_2B4F	LD	HL,(#5C4D)
	XOR	(HL)
	OR	#20
	POP	HL
	CALL	L_2BEA
L_2B59	PUSH	HL
	RST	#28	;*calc
;
;#2B5B
	DB	#02
	DB	#38
;
;#2B5D
	POP	HL
	LD	BC,#0005
	AND	A
	SBC	HL,BC
	JR	L_2BA6
;
L_2B66	BIT	6,(IY+#01)
	JR	Z,L_2B72
	LD	DE,#0006
	ADD	HL,DE
	JR	L_2B59
;
L_2B72	LD	HL,(#5C4D)
	LD	BC,(#5C72)
	BIT	0,(IY+#37)
	JR	NZ,L_2BAF
	LD	A,B
	OR	C
	RET	Z
	PUSH	HL
	RST	#30
	PUSH	DE
	PUSH	BC
	LD	D,H
	LD	E,L
	INC	HL
	LD	(HL),#20
	LDDR
	PUSH	HL
	CALL	L_2BF1
	POP	HL
	EX	(SP),HL
	AND	A
	SBC	HL,BC
	ADD	HL,BC
	JR	NC,L_2B9B
	LD	B,H
	LD	C,L
L_2B9B	EX	(SP),HL
	EX	DE,HL
	LD	A,B
	OR	C
	JR	Z,L_2BA3
	LDIR
L_2BA3	POP	BC
	POP	DE
	POP	HL
L_2BA6	EX	DE,HL
	LD	A,B
	OR	C
	RET	Z
	PUSH	DE
	LDIR
	POP	HL
	RET
;
L_2BAF	DEC	HL
	DEC	HL
	DEC	HL
	LD	A,(HL)
	PUSH	HL
	PUSH	BC
	CALL	L_2BC6
	POP	BC
	POP	HL
	INC	BC
	INC	BC
	INC	BC
	JP	L_19E8
;
L_2BC0	LD	A,#DF
	LD	HL,(#5C4D)
	AND	(HL)
L_2BC6	PUSH	AF
	CALL	L_2BF1
	EX	DE,HL
	ADD	HL,BC
	PUSH	BC
	DEC	HL
	LD	(#5C4D),HL
	INC	BC
	INC	BC
	INC	BC
	LD	HL,(#5C59)
	DEC	HL
	CALL	MAKE_ROOM
	LD	HL,(#5C4D)
	POP	BC
	PUSH	BC
	INC	BC
	LDDR
	EX	DE,HL
	INC	HL
	POP	BC
	LD	(HL),B
	DEC	HL
	LD	(HL),C
	POP	AF
L_2BEA	DEC	HL
	LD	(HL),A
	LD	HL,(#5C59)
	DEC	HL
	RET
;
L_2BF1	LD	HL,(#5C65)
	DEC	HL
	LD	B,(HL)
	DEC	HL
	LD	C,(HL)
	DEC	HL
	LD	D,(HL)
	DEC	HL
	LD	E,(HL)
	DEC	HL
	LD	A,(HL)
	LD	(#5C65),HL
	RET
;
L_2C02	CALL	L_28B2
L_2C05	JP	NZ,L_1C8A
	CALL	L_2530
	JR	NZ,L_2C15
	RES	6,C
	CALL	L_2996
	CALL	CHECK_END
L_2C15	JR	C,L_2C1F
	PUSH	BC
	CALL	L_19B8
	CALL	L_19E8
	POP	BC
L_2C1F	SET	7,C
	LD	B,#00
	PUSH	BC
	LD	HL,#0001
	BIT	6,C
	JR	NZ,L_2C2D
	LD	L,#05
L_2C2D	EX	DE,HL
L_2C2E	RST	#20
	LD	H,#FF
	CALL	L_2ACC
	JP	C,L_2A20
	POP	HL
	PUSH	BC
	INC	H
	PUSH	HL
	LD	H,B
	LD	L,C
	CALL	L_2AF4
	EX	DE,HL
	RST	#18
	CP	#2C
	JR	Z,L_2C2E
	CP	#29
	JR	NZ,L_2C05
	RST	#20
	POP	BC
	LD	A,C
	LD	L,B
	LD	H,#00
	INC	HL
	INC	HL
	ADD	HL,HL
	ADD	HL,DE
	JP	C,L_1F15
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	B,H
	LD	C,L
	LD	HL,(#5C59)
	DEC	HL
	CALL	MAKE_ROOM
	INC	HL
	LD	(HL),A
	POP	BC
	DEC	BC
	DEC	BC
	DEC	BC
	INC	HL
	LD	(HL),C
	INC	HL
	LD	(HL),B
	POP	BC
	LD	A,B
	INC	HL
	LD	(HL),A
	LD	H,D
	LD	L,E
	DEC	DE
	LD	(HL),#00
	BIT	6,C
	JR	Z,L_2C7C
	LD	(HL),#20
L_2C7C	POP	BC
	LDDR
L_2C7F	POP	BC
	LD	(HL),B
	DEC	HL
	LD	(HL),C
	DEC	HL
	DEC	A
	JR	NZ,L_2C7F
	RET
;
L_2C88	CALL	NUMERIC
	CCF
	RET	C
L_2C8D	CP	#41
	CCF
	RET	NC
	CP	#5B
	RET	C
	CP	#61
	CCF
	RET	NC
	CP	#7B
	RET
;
L_2C9B	CP	#C4
	JR	NZ,L_2CB8
	LD	DE,#0000
L_2CA2	RST	#20
	SUB	#31
	ADC	A,#00
	JR	NZ,L_2CB3
	EX	DE,HL
	CCF
	ADC	HL,HL
	JP	C,L_31AD
	EX	DE,HL
	JR	L_2CA2
;
L_2CB3	LD	B,D
	LD	C,E
	JP	STACK_BC
;
L_2CB8	CP	#2E
	JR	Z,L_2CCB
	CALL	L_2D3B
	CP	#2E
	JR	NZ,L_2CEB
	RST	#20
	CALL	NUMERIC
	JR	C,L_2CEB
	JR	L_2CD5
;
L_2CCB	RST	#20
	CALL	NUMERIC
L_2CCF	JP	C,L_1C8A
	RST	#28	;*calc
;
;#2CD3
	DB	#A0
	DB	#38
;
L_2CD5	RST	#28	;*calc
;
;#2CD6
	DB	#A1
	DB	#C0
	DB	#02
	DB	#38
;
L_2CDA	RST	#18
	CALL	STK_DIGIT
	JR	C,L_2CEB
	RST	#28	;*calc
;
;#2CE1
	DB	#E0
	DB	#A4
	DB	#05
	DB	#C0
	DB	#04
	DB	#0F
	DB	#38
;
;#2CE8
	RST	#20
	JR	L_2CDA
;
L_2CEB	CP	#45
	JR	Z,L_2CF2
	CP	#65
	RET	NZ
L_2CF2	LD	B,#FF
	RST	#20
	CP	#2B
	JR	Z,L_2CFE
	CP	#2D
	JR	NZ,L_2CFF
	INC	B
L_2CFE	RST	#20
L_2CFF	CALL	NUMERIC
	JR	C,L_2CCF
	PUSH	BC
	CALL	L_2D3B
	CALL	L_2DD5
	POP	BC
	JP	C,L_31AD
	AND	A
	JP	M,L_31AD
	INC	B
	JR	Z,L_2D18
	NEG
L_2D18	JP	L_2D4F

; Check for valid digit
NUMERIC:	CP	#30
		RET	C
		CP	#3A
		CCF
		RET

; Stack digit
STK_DIGIT:	CALL	NUMERIC
		RET	C
		SUB	#30
STACK_A:	LD	C,A		;Stack accumulator
		LD	B,#00
STACK_BC:	LD	IY,#5C3A	;Stack BC register pair
		XOR	A
		LD	E,A
		LD	D,C
		LD	C,B
		LD	B,A
		CALL	L_2AB6
		RST	#28		;*calc
;
;#2D38
	DB	#38
;
;#2D39
	AND	A
	RET
;
L_2D3B	PUSH	AF
	RST	#28	;*calc
;
;#2D3D
	DB	#A0
	DB	#38
;
;#2D3F
	POP	AF
L_2D40	CALL	STK_DIGIT
	RET	C
	RST	#28	;*calc
;
;#2D45
	DB	#01
	DB	#A4
	DB	#04
	DB	#0F
	DB	#38
;
;#2D4A
	CALL	CH_ADD_1
	JR	L_2D40
;
L_2D4F	RLCA
	RRCA
	JR	NC,L_2D55
	CPL
	INC	A
L_2D55	PUSH	AF
	LD	HL,#5C92
	CALL	L_350B
	RST	#28	;*calc
;
;#2D5D
	DB	#A4
	DB	#38
;
;#2D5F
	POP	AF
L_2D60	SRL	A
	JR	NC,L_2D71
	PUSH	AF
	RST	#28	;*calc
;
;#2D66
	DB	#C1
	DB	#E0
	DB	#00
	DB	#04
	DB	#04
	DB	#33
	DB	#02
	DB	#05
	DB	#E1
	DB	#38
;
;#2D70
	POP	AF
L_2D71	JR	Z,L_2D7B
	PUSH	AF
	RST	#28	;*calc
;
;#2D75
	DB	#31
	DB	#04
	DB	#38
;
;#2D78
	POP	AF
	JR	L_2D60
;
L_2D7B	RST	#28	;*calc
;
;#2D7C
	DB	#02
	DB	#38
;
;#2D7E
	RET
;
L_2D7F	INC	HL
	LD	C,(HL)
	INC	HL
	LD	A,(HL)
	XOR	C
	SUB	C
	LD	E,A
	INC	HL
	LD	A,(HL)
	ADC	A,C
	XOR	C
	LD	D,A
	RET
;
	LD	C,#00
L_2D8E	PUSH	HL
	LD	(HL),#00
	INC	HL
	LD	(HL),C
	INC	HL
	LD	A,E
	XOR	C
	SUB	C
	LD	(HL),A
	INC	HL
	LD	A,D
	ADC	A,C
	XOR	C
	LD	(HL),A
	INC	HL
	LD	(HL),#00
	POP	HL
	RET
;
L_2DA2	RST	#28	;*calc
;
;#2DA3
	DB	#38
;
;#2DA4
	LD	A,(HL)
	AND	A
	JR	Z,L_2DAD
	RST	#28	;*calc
;
;#2DA9
	DB	#A2
	DB	#0F
	DB	#27
	DB	#38
;
L_2DAD	RST	#28	;*calc
;
;#2DAE
	DB	#02
	DB	#38
;
;#2DB0
	PUSH	HL
	PUSH	DE
	EX	DE,HL
	LD	B,(HL)
	CALL	L_2D7F
	XOR	A
	SUB	B
	BIT	7,C
	LD	B,D
	LD	C,E
	LD	A,E
	POP	DE
	POP	HL
	RET
;
L_2DC1	LD	D,A
	RLA
	SBC	A,A
	LD	E,A
	LD	C,A
	XOR	A
	LD	B,A
	CALL	L_2AB6
	RST	#28	;*calc
;
;#2DCC
	DB	#34
	DB	#EF
	DB	#1A
	DB	#20
	DB	#9A
	DB	#85
	DB	#04
	DB	#27
	DB	#38
;
L_2DD5	CALL	L_2DA2
	RET	C
	PUSH	AF
	DEC	B
	INC	B
	JR	Z,L_2DE1
	POP	AF
	SCF
	RET
;
L_2DE1	POP	AF
	RET

; Print a floating point number
PRINT_FP:	RST	#28		;*calc
		DB	#31		;DUPLICATE
		DB	#36		;LESS_0
		DB	#00		;JUMP_TRUE
		DB	#0B		;to PF_NEGTVE
		DB	#31		;DUPLICATE
		DB	#37		;GREATER_0
		DB	#00		;JUMP_TRUE
		DB	#0D		;to PS_POSTVE
		DB	#02		;DELETE
		DB	#38		;END_CALC

		LD	A,#30
		RST	#10
		RET
;
;#2DF2
	DB	#2A
	DB	#38
;
;#2DF4
	LD	A,#2D
	RST	#10
	RST	#28	;*calc
;
;#2DF8
	DB	#A0
	DB	#C3
	DB	#C4
	DB	#C5
	DB	#02
	DB	#38
;
;#2DFE
	EXX
	PUSH	HL
	EXX
L_2E01	RST	#28	;*calc
;
;#2E02
	DB	#31
	DB	#27
	DB	#C2
	DB	#03
	DB	#E2
	DB	#01
	DB	#C2
	DB	#02
	DB	#38
;
;#2E0B
	LD	A,(HL)
	AND	A
	JR	NZ,L_2E56
	CALL	L_2D7F
	LD	B,#10
	LD	A,D
	AND	A
	JR	NZ,L_2E1E
	OR	E
	JR	Z,L_2E24
	LD	D,E
	LD	B,#08
L_2E1E	PUSH	DE
	EXX
	POP	DE
	EXX
	JR	L_2E7B
;
L_2E24	RST	#28	;*calc
;
;#2E25
	DB	#E2
	DB	#38
;
;#2E27
	LD	A,(HL)
	SUB	#7E
	CALL	L_2DC1
	LD	D,A
	LD	A,(#5CAC)
	SUB	D
	LD	(#5CAC),A
	LD	A,D
	CALL	L_2D4F
	RST	#28	;*calc
;
;#2E3A
	DB	#31
	DB	#27
	DB	#C1
	DB	#03
	DB	#E1
	DB	#38
;
;#2E40
	CALL	L_2DD5
	PUSH	HL
	LD	(#5CA1),A
	DEC	A
	RLA
	SBC	A,A
	INC	A
	LD	HL,#5CAB
	LD	(HL),A
	INC	HL
	ADD	A,(HL)
	LD	(HL),A
	POP	HL
	JP	L_2ECF
;
L_2E56	SUB	#80
	CP	#1C
	JR	C,L_2E6F
	CALL	L_2DC1
	SUB	#07
	LD	B,A
	LD	HL,#5CAC
	ADD	A,(HL)
	LD	(HL),A
	LD	A,B
	NEG
	CALL	L_2D4F
	JR	L_2E01
;
L_2E6F	EX	DE,HL
	CALL	L_2FBA
	EXX
	SET	7,D
	LD	A,L
	EXX
	SUB	#80
	LD	B,A
L_2E7B	SLA	E
	RL	D
	EXX
	RL	E
	RL	D
	EXX
	LD	HL,#5CAA
	LD	C,#05
L_2E8A	LD	A,(HL)
	ADC	A,A
	DAA
	LD	(HL),A
	DEC	HL
	DEC	C
	JR	NZ,L_2E8A
	DJNZ	L_2E7B
	XOR	A
	LD	HL,#5CA6
	LD	DE,#5CA1
	LD	B,#09
	RLD
	LD	C,#FF
L_2EA1	RLD
	JR	NZ,L_2EA9
	DEC	C
	INC	C
	JR	NZ,L_2EB3
L_2EA9	LD	(DE),A
	INC	DE
	INC	(IY+#71)
	INC	(IY+#72)
	LD	C,#00
L_2EB3	BIT	0,B
	JR	Z,L_2EB8
	INC	HL
L_2EB8	DJNZ	L_2EA1
	LD	A,(#5CAB)
	SUB	#09
	JR	C,L_2ECB
	DEC	(IY+#71)
	LD	A,#04
	CP	(IY+#6F)
	JR	L_2F0C
;
L_2ECB	RST	#28	;*calc
;
;#2ECC
	DB	#02
	DB	#E2
	DB	#38
;
L_2ECF	EX	DE,HL
	CALL	L_2FBA
	EXX
	LD	A,#80
	SUB	L
	LD	L,#00
	SET	7,D
	EXX
	CALL	L_2FDD
L_2EDF	LD	A,(IY+#71)
	CP	#08
	JR	C,L_2EEC
	EXX
	RL	D
	EXX
	JR	L_2F0C
;
L_2EEC	LD	BC,#0200
L_2EEF	LD	A,E
	CALL	L_2F8B
	LD	E,A
	LD	A,D
	CALL	L_2F8B
	LD	D,A
	PUSH	BC
	EXX
	POP	BC
	DJNZ	L_2EEF
	LD	HL,#5CA1
	LD	A,C
	LD	C,(IY+#71)
	ADD	HL,BC
	LD	(HL),A
	INC	(IY+#71)
	JR	L_2EDF
;
L_2F0C	PUSH	AF
	LD	HL,#5CA1
	LD	C,(IY+#71)
	LD	B,#00
	ADD	HL,BC
	LD	B,C
	POP	AF
L_2F18	DEC	HL
	LD	A,(HL)
	ADC	A,#00
	LD	(HL),A
	AND	A
	JR	Z,L_2F25
	CP	#0A
	CCF
	JR	NC,L_2F2D
L_2F25	DJNZ	L_2F18
	LD	(HL),#01
	INC	B
	INC	(IY+#72)
L_2F2D	LD	(IY+#71),B
	RST	#28	;*calc
;
;#2F31
	DB	#02
	DB	#38
;
;#2F33
	EXX
	POP	HL
	EXX
	LD	BC,(#5CAB)
	LD	HL,#5CA1
	LD	A,B
	CP	#09
	JR	C,L_2F46
	CP	#FC
	JR	C,L_2F6C
L_2F46	AND	A
	CALL	Z,L_15EF
L_2F4A	XOR	A
	SUB	B
	JP	M,L_2F52
	LD	B,A
	JR	L_2F5E
;
L_2F52	LD	A,C
	AND	A
	JR	Z,L_2F59
	LD	A,(HL)
	INC	HL
	DEC	C
L_2F59	CALL	L_15EF
	DJNZ	L_2F52
L_2F5E	LD	A,C
	AND	A
	RET	Z
	INC	B
	LD	A,#2E
L_2F64	RST	#10
	LD	A,#30
	DJNZ	L_2F64
	LD	B,C
	JR	L_2F52
;
L_2F6C	LD	D,B
	DEC	D
	LD	B,#01
	CALL	L_2F4A
	LD	A,#45
	RST	#10
	LD	C,D
	LD	A,C
	AND	A
	JP	P,L_2F83
	NEG
	LD	C,A
	LD	A,#2D
	JR	L_2F85
;
L_2F83	LD	A,#2B
L_2F85	RST	#10
	LD	B,#00
	JP	OUT_NUM_1
;
L_2F8B	PUSH	DE
	LD	L,A
	LD	H,#00
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,HL
	LD	E,C
	ADD	HL,DE
	LD	C,H
	LD	A,L
	POP	DE
	RET
;
L_2F9B	LD	A,(HL)
	LD	(HL),#00
	AND	A
	RET	Z
	INC	HL
	BIT	7,(HL)
	SET	7,(HL)
	DEC	HL
	RET	Z
	PUSH	BC
	LD	BC,#0005
	ADD	HL,BC
	LD	B,C
	LD	C,A
	SCF
L_2FAF	DEC	HL
	LD	A,(HL)
	CPL
	ADC	A,#00
	LD	(HL),A
	DJNZ	L_2FAF
	LD	A,C
	POP	BC
	RET
;
L_2FBA	PUSH	HL
	PUSH	AF
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	LD	(HL),A
	INC	HL
	LD	A,C
	LD	C,(HL)
	PUSH	BC
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	EX	DE,HL
	LD	D,A
	LD	E,(HL)
	PUSH	DE
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	E,(HL)
	PUSH	DE
	EXX
	POP	DE
	POP	HL
	POP	BC
	EXX
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	E,(HL)
	POP	AF
	POP	HL
	RET
;
L_2FDD	AND	A
	RET	Z
	CP	#21
	JR	NC,L_2FF9
	PUSH	BC
	LD	B,A
L_2FE5	EXX
	SRA	L
	RR	D
	RR	E
	EXX
	RR	D
	RR	E
	DJNZ	L_2FE5
	POP	BC
	RET	NC
	CALL	L_3004
	RET	NZ
L_2FF9	EXX
	XOR	A
L_2FFB	LD	L,#00
	LD	D,A
	LD	E,L
	EXX
	LD	DE,#0000
	RET
;
L_3004	INC	E
	RET	NZ
	INC	D
	RET	NZ
	EXX
	INC	E
	JR	NZ,L_300D
	INC	D
L_300D	EXX
	RET
;
L_300F	EX	DE,HL
	CALL	L_346E
	EX	DE,HL
L_3014	LD	A,(DE)
	OR	(HL)
	JR	NZ,L_303E
	PUSH	DE
	INC	HL
	PUSH	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	POP	HL
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	ADC	A,(HL)
	RRCA
	ADC	A,#00
	CALL	L_3221
	LD	(HL),A
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	DEC	HL
	DEC	HL
	DEC	HL
	POP	DE
	RET
;
L_303C	DEC	HL
	POP	DE
L_303E	CALL	L_3293
	EXX
	PUSH	HL
	EXX
	PUSH	DE
	PUSH	HL
	CALL	L_2F9B
	LD	B,A
	EX	DE,HL
	CALL	L_2F9B
	LD	C,A
	CP	B
	JR	NC,L_3055
	LD	A,B
	LD	B,C
	EX	DE,HL
L_3055	PUSH	AF
	SUB	B
	CALL	L_2FBA
	CALL	L_2FDD
	POP	AF
	POP	HL
	LD	(HL),A
	PUSH	HL
	LD	L,B
	LD	H,C
	ADD	HL,DE
	EXX
	EX	DE,HL
	ADC	HL,BC
	EX	DE,HL
	LD	A,H
	ADC	A,L
	LD	L,A
	RRA
	XOR	L
	EXX
	EX	DE,HL
	POP	HL
	RRA
	JR	NC,L_307C
	LD	A,#01
	CALL	L_2FDD
	INC	(HL)
	JR	Z,L_309F
L_307C	EXX
	LD	A,L
	AND	#80
	EXX
	INC	HL
	LD	(HL),A
	DEC	HL
	JR	Z,L_30A5
	LD	A,E
	NEG
	CCF
	LD	E,A
	LD	A,D
	CPL
	ADC	A,#00
	LD	D,A
	EXX
	LD	A,E
	CPL
	ADC	A,#00
	LD	E,A
	LD	A,D
	CPL
	ADC	A,#00
	JR	NC,L_30A3
	RRA
	EXX
	INC	(HL)
L_309F	JP	Z,L_31AD
	EXX
L_30A3	LD	D,A
	EXX
L_30A5	XOR	A
	JP	L_3155
;
L_30A9	PUSH	BC
	LD	B,#10
	LD	A,H
	LD	C,L
	LD	HL,#0000
L_30B1	ADD	HL,HL
	JR	C,L_30BE
	RL	C
	RLA
	JR	NC,L_30BC
	ADD	HL,DE
	JR	C,L_30BE
L_30BC	DJNZ	L_30B1
L_30BE	POP	BC
	RET
;
L_30C0	CALL	L_34E9
	RET	C
	INC	HL
	XOR	(HL)
	SET	7,(HL)
	DEC	HL
	RET
;
L_30CA	LD	A,(DE)
	OR	(HL)
	JR	NZ,L_30F0
	PUSH	DE
	PUSH	HL
	PUSH	DE
	CALL	L_2D7F
	EX	DE,HL
	EX	(SP),HL
	LD	B,C
	CALL	L_2D7F
	LD	A,B
	XOR	C
	LD	C,A
	POP	HL
	CALL	L_30A9
	EX	DE,HL
	POP	HL
	JR	C,L_30EF
	LD	A,D
	OR	E
	JR	NZ,L_30EA
	LD	C,A
L_30EA	CALL	L_2D8E
	POP	DE
	RET
;
L_30EF	POP	DE
L_30F0	CALL	L_3293
	XOR	A
	CALL	L_30C0
	RET	C
	EXX
	PUSH	HL
	EXX
	PUSH	DE
	EX	DE,HL
	CALL	L_30C0
	EX	DE,HL
	JR	C,L_315D
	PUSH	HL
	CALL	L_2FBA
	LD	A,B
	AND	A
	SBC	HL,HL
	EXX
	PUSH	HL
	SBC	HL,HL
	EXX
	LD	B,#21
	JR	L_3125
;
L_3114	JR	NC,L_311B
	ADD	HL,DE
	EXX
	ADC	HL,DE
	EXX
L_311B	EXX
	RR	H
	RR	L
	EXX
	RR	H
	RR	L
L_3125	EXX
	RR	B
	RR	C
	EXX
	RR	C
	RRA
	DJNZ	L_3114
	EX	DE,HL
	EXX
	EX	DE,HL
	EXX
	POP	BC
	POP	HL
	LD	A,B
	ADD	A,C
	JR	NZ,L_313B
	AND	A
L_313B	DEC	A
	CCF
L_313D	RLA
	CCF
	RRA
	JP	P,L_3146
	JR	NC,L_31AD
	AND	A
L_3146	INC	A
	JR	NZ,L_3151
	JR	C,L_3151
	EXX
	BIT	7,D
	EXX
	JR	NZ,L_31AD
L_3151	LD	(HL),A
	EXX
	LD	A,B
	EXX
L_3155	JR	NC,L_316C
	LD	A,(HL)
	AND	A
L_3159	LD	A,#80
	JR	Z,L_315E
L_315D	XOR	A
L_315E	EXX
	AND	D
	CALL	L_2FFB
	RLCA
	LD	(HL),A
	JR	C,L_3195
	INC	HL
	LD	(HL),A
	DEC	HL
	JR	L_3195
;
L_316C	LD	B,#20
L_316E	EXX
	BIT	7,D
	EXX
	JR	NZ,L_3186
	RLCA
	RL	E
	RL	D
	EXX
	RL	E
	RL	D
	EXX
	DEC	(HL)
	JR	Z,L_3159
	DJNZ	L_316E
	JR	L_315D
;
L_3186	RLA
	JR	NC,L_3195
	CALL	L_3004
	JR	NZ,L_3195
	EXX
	LD	D,#80
	EXX
	INC	(HL)
	JR	Z,L_31AD
L_3195	PUSH	HL
	INC	HL
	EXX
	PUSH	DE
	EXX
	POP	BC
	LD	A,B
	RLA
	RL	(HL)
	RRA
	LD	(HL),A
	INC	HL
	LD	(HL),C
	INC	HL
	LD	(HL),D
	INC	HL
	LD	(HL),E
	POP	HL
	POP	DE
	EXX
	POP	HL
	EXX
	RET
;
L_31AD	RST	#08
;
;#31AE
	DB	#05
;
L_31AF	CALL	L_3293
	EX	DE,HL
	XOR	A
	CALL	L_30C0
	JR	C,L_31AD
	EX	DE,HL
	CALL	L_30C0
	RET	C
	EXX
	PUSH	HL
	EXX
	PUSH	DE
	PUSH	HL
	CALL	L_2FBA
	EXX
	PUSH	HL
	LD	H,B
	LD	L,C
	EXX
	LD	H,C
	LD	L,B
	XOR	A
	LD	B,#DF
	JR	L_31E2
;
L_31D2	RLA
	RL	C
	EXX
	RL	C
	RL	B
	EXX
L_31DB	ADD	HL,HL
	EXX
	ADC	HL,HL
	EXX
	JR	C,L_31F2
L_31E2	SBC	HL,DE
	EXX
	SBC	HL,DE
	EXX
	JR	NC,L_31F9
	ADD	HL,DE
	EXX
	ADC	HL,DE
	EXX
	AND	A
	JR	L_31FA
;
L_31F2	AND	A
	SBC	HL,DE
	EXX
	SBC	HL,DE
	EXX
L_31F9	SCF
L_31FA	INC	B
	JP	M,L_31D2
	PUSH	AF
	JR	Z,L_31DB
	LD	E,A
	LD	D,C
	EXX
	LD	E,C
	LD	D,B
	POP	AF
	RR	B
	POP	AF
	RR	B
	EXX
	POP	BC
	POP	HL
	LD	A,B
	SUB	C
	JP	L_313D
;
L_3214	LD	A,(HL)
	AND	A
	RET	Z
	CP	#81
	JR	NC,L_323D
	LD	(HL),#00
	LD	A,#20
	JR	L_3272
;
L_3221	JR	NZ,L_322A
	SBC	A,A
	LD	C,A
	INC	A
	OR	D
	OR	E
	LD	A,C
	RET	NZ
L_322A	POP	AF
	JP	L_303C
;
L_322E	CALL	L_2DD5
	RET	C
	RET	Z
	POP	AF
	LD	DE,#0001
	LD	BC,#FFFF
	JP	L_35D7
;
L_323D	CP	#91
	JR	NC,L_326D
	PUSH	DE
	CPL
	ADD	A,#91
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	E,(HL)
	DEC	HL
	DEC	HL
	LD	C,#00
	BIT	7,D
	JR	Z,L_3252
	DEC	C
L_3252	SET	7,D
	LD	B,#08
	SUB	B
	ADD	A,B
	JR	C,L_325E
	LD	E,D
	LD	D,#00
	SUB	B
L_325E	JR	Z,L_3267
	LD	B,A
L_3261	SRL	D
	RR	E
	DJNZ	L_3261
L_3267	CALL	L_2D8E
	POP	DE
	RET
;
	LD	A,(HL)
L_326D	SUB	#A0
	RET	P
	NEG
L_3272	PUSH	DE
	EX	DE,HL
	DEC	HL
	LD	B,A
	SRL	B
	SRL	B
	SRL	B
	JR	Z,L_3283
L_327E	LD	(HL),#00
	DEC	HL
	DJNZ	L_327E
L_3283	AND	#07
	JR	Z,L_3290
	LD	B,A
	LD	A,#FF
L_328A	SLA	A
	DJNZ	L_328A
	AND	(HL)
	LD	(HL),A
L_3290	EX	DE,HL
	POP	DE
	RET
;
L_3293	CALL	L_3296
L_3296	EX	DE,HL
L_3297	LD	A,(HL)
	AND	A
	RET	NZ
	PUSH	DE
	CALL	L_2D7F
	XOR	A
	INC	HL
	LD	(HL),A
	DEC	HL
	LD	(HL),A
	LD	B,#91
	LD	A,D
	AND	A
	JR	NZ,L_32B1
	OR	E
	LD	B,D
	JR	Z,L_32BD
	LD	D,E
	LD	E,B
	LD	B,#89
L_32B1	EX	DE,HL
L_32B2	DEC	B
	ADD	HL,HL
	JR	NC,L_32B2
	RRC	C
	RR	H
	RR	L
	EX	DE,HL
L_32BD	DEC	HL
	LD	(HL),E
	DEC	HL
	LD	(HL),D
	DEC	HL
	LD	(HL),B
	POP	DE
	RET
;
L_32C5	DB	#00
	DB	#B0
	DB	#00
	DB	#40
	DB	#B0
	DB	#00
	DB	#01
	DB	#30
	DB	#00
	DB	#F1
	DB	#49
	DB	#0F
	DB	#DA
	DB	#A2
	DB	#40
	DB	#B0
	DB	#00
	DB	#0A
;
L_32D7	DW	L_368F
	DW	L_343C
	DW	L_33A1
	DW	L_300F
	DW	L_30CA
	DW	L_31AF
	DW	L_3851
	DW	L_351B
	DW	L_3524
	DW	L_353B
	DW	L_353B
	DW	L_353B
	DW	L_353B
	DW	L_353B
	DW	L_353B
	DW	L_3014
	DW	L_352D
	DW	L_353B
	DW	L_353B
	DW	L_353B
	DW	L_353B
	DW	L_353B
	DW	L_353B
	DW	L_359C
	DW	L_35DE
	DW	L_34BC
	DW	L_3645
	DW	L_346E
	DW	L_3669
	DW	L_35DE
	DW	L_3674
	DW	L_37B5
	DW	L_37AA
	DW	L_37DA
	DW	L_3833
	DW	L_3843
	DW	L_37E2
	DW	L_3713
	DW	L_36C4
	DW	L_36AF
	DW	L_384A
	DW	L_3492
	DW	L_346A
	DW	L_34AC
	DW	L_34A5
	DW	L_34B3
	DW	L_361F
	DW	L_35C9
	DW	L_3501
	DW	L_33C0
	DW	L_36A0
	DW	L_3686
	DW	L_33C6
	DW	L_367A
	DW	L_3506
	DW	L_34F9
	DW	L_369B
	DW	L_3783
	DW	L_3214
	DW	L_33A2
	DW	L_2D4F
	DW	L_3297
	DW	L_3449
	DW	L_341B
	DW	L_342D
	DW	L_340F

; The Calculator
CALCULATE:	CALL	L_35BF
L_335E	LD	A,B
	LD	(#5C67),A
L_3362	EXX
	EX	(SP),HL
	EXX
L_3365	LD	(#5C65),DE
	EXX
	LD	A,(HL)
	INC	HL
L_336C	PUSH	HL
	AND	A
	JP	P,L_3380
	LD	D,A
	AND	#60
	RRCA
	RRCA
	RRCA
	RRCA
	ADD	A,#7C
	LD	L,A
	LD	A,D
	AND	#1F
	JR	L_338E
;
L_3380	CP	#18
	JR	NC,L_338C
	EXX
	LD	BC,#FFFB
	LD	D,H
	LD	E,L
	ADD	HL,BC
	EXX
L_338C	RLCA
	LD	L,A
L_338E	LD	DE,L_32D7
	LD	H,#00
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	HL,L_3365
	EX	(SP),HL
	PUSH	DE
	EXX
	LD	BC,(#5C66)
L_33A1	RET
;
L_33A2	POP	AF
	LD	A,(#5C67)
	EXX
	JR	L_336C
;
L_33A9	PUSH	DE
	PUSH	HL
	LD	BC,#0005
	CALL	L_1F05
	POP	HL
	POP	DE
	RET
;
STACK_NUM:	LD	DE,(#5C65)
		CALL	L_33C0
		LD	(#5C65),DE
		RET
;
L_33C0	CALL	L_33A9
	LDIR
	RET
;
L_33C6	LD	H,D
	LD	L,E
L_33C8	CALL	L_33A9
	EXX
	PUSH	HL
	EXX
	EX	(SP),HL
	PUSH	BC
	LD	A,(HL)
	AND	#C0
	RLCA
	RLCA
	LD	C,A
	INC	C
	LD	A,(HL)
	AND	#3F
	JR	NZ,L_33DE
	INC	HL
	LD	A,(HL)
L_33DE	ADD	A,#50
	LD	(DE),A
	LD	A,#05
	SUB	C
	INC	HL
	INC	DE
	LD	B,#00
	LDIR
	POP	BC
	EX	(SP),HL
	EXX
	POP	HL
	EXX
	LD	B,A
	XOR	A
L_33F1	DEC	B
	RET	Z
	LD	(DE),A
	INC	DE
	JR	L_33F1
;
L_33F7	AND	A
L_33F8	RET	Z
	PUSH	AF
	PUSH	DE
	CALL	L_1E80
	CALL	L_33C8
	POP	DE
	POP	AF
	DEC	A
	JR	L_33F8
;
LOC_MEM:	LD	C,A
	RLCA
	RLCA
	ADD	A,C
	LD	C,A
	LD	B,#00
	ADD	HL,BC
	RET
;
L_340F	PUSH	DE
	LD	HL,(#5C68)
	CALL	LOC_MEM
	CALL	L_33C0
	POP	HL
	RET
;
L_341B	LD	H,D
	LD	L,E
	EXX
	PUSH	HL
	LD	HL,L_32C5
	EXX
	CALL	L_33F7
	CALL	L_33C8
	EXX
	POP	HL
	EXX
	RET
;
L_342D	PUSH	HL
	EX	DE,HL
	LD	HL,(#5C68)
	CALL	LOC_MEM
	EX	DE,HL
	CALL	L_33C0
	EX	DE,HL
	POP	HL
	RET
;
L_343C	LD	B,#05
L_343E	LD	A,(DE)
	LD	C,(HL)
	EX	DE,HL
	LD	(DE),A
	LD	(HL),C
	INC	HL
	INC	DE
	DJNZ	L_343E
	EX	DE,HL
	RET
;
L_3449	LD	B,A
	CALL	L_335E
;
;#344D
	DB	#31
	DB	#0F
	DB	#C0
	DB	#02
	DB	#A0
	DB	#C2
	DB	#31
	DB	#E0
	DB	#04
	DB	#E2
	DB	#C1
	DB	#03
	DB	#38
;
;#345A
	CALL	L_33C6
	CALL	L_3362
;
;#3460
	DB	#0F
	DB	#01
	DB	#C2
	DB	#02
	DB	#35
	DB	#EE
	DB	#E1
	DB	#03
	DB	#38
;
;#3469
	RET
;
L_346A	LD	B,#FF
	JR	L_3474
;
L_346E	CALL	L_34E9
	RET	C
	LD	B,#00
L_3474	LD	A,(HL)
	AND	A
	JR	Z,L_3483
	INC	HL
	LD	A,B
	AND	#80
	OR	(HL)
	RLA
	CCF
	RRA
	LD	(HL),A
	DEC	HL
	RET
;
L_3483	PUSH	DE
	PUSH	HL
	CALL	L_2D7F
	POP	HL
	LD	A,B
	OR	C
	CPL
	LD	C,A
	CALL	L_2D8E
	POP	DE
	RET
;
L_3492	CALL	L_34E9
	RET	C
	PUSH	DE
	LD	DE,#0001
	INC	HL
	RL	(HL)
	DEC	HL
	SBC	A,A
	LD	C,A
	CALL	L_2D8E
	POP	DE
	RET
;
L_34A5	CALL	FIND_INT2
	IN	A,(C)
	JR	L_34B0
;
L_34AC	CALL	FIND_INT2
	LD	A,(BC)
L_34B0	JP	STACK_A
;
L_34B3	CALL	FIND_INT2
	LD	HL,STACK_BC
	PUSH	HL
	PUSH	BC
	RET
;
L_34BC	CALL	L_2BF1
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,L_34E7
	LD	A,(DE)
	CALL	L_2C8D
	JR	C,L_34D3
	SUB	#90
	JR	C,L_34E7
	CP	#15
	JR	NC,L_34E7
	INC	A
L_34D3	DEC	A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	CP	#A8
	JR	NC,L_34E7
	LD	BC,(#5C7B)
	ADD	A,C
	LD	C,A
	JR	NC,L_34E4
	INC	B
L_34E4	JP	STACK_BC
;
L_34E7	RST	#08
;
;#34E8
	DB	#09
;
L_34E9	PUSH	HL
	PUSH	BC
	LD	B,A
	LD	A,(HL)
	INC	HL
	OR	(HL)
	INC	HL
	OR	(HL)
	INC	HL
	OR	(HL)
	LD	A,B
	POP	BC
	POP	HL
	RET	NZ
	SCF
	RET
;
L_34F9	CALL	L_34E9
	RET	C
	LD	A,#FF
	JR	L_3507
;
L_3501	CALL	L_34E9
	JR	L_350B
;
L_3506	XOR	A
L_3507	INC	HL
	XOR	(HL)
	DEC	HL
	RLCA
L_350B	PUSH	HL
	LD	A,#00
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	RLA
	LD	(HL),A
	RRA
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
	POP	HL
	RET
;
L_351B	EX	DE,HL
	CALL	L_34E9
	EX	DE,HL
	RET	C
	SCF
	JR	L_350B
;
L_3524	EX	DE,HL
	CALL	L_34E9
	EX	DE,HL
	RET	NC
	AND	A
	JR	L_350B
;
L_352D	EX	DE,HL
	CALL	L_34E9
	EX	DE,HL
	RET	NC
	PUSH	DE
	DEC	DE
	XOR	A
	LD	(DE),A
	DEC	DE
	LD	(DE),A
	POP	DE
	RET
;
L_353B	LD	A,B
	SUB	#08
	BIT	2,A
	JR	NZ,L_3543
	DEC	A
L_3543	RRCA
	JR	NC,L_354E
	PUSH	AF
	PUSH	HL
	CALL	L_343C
	POP	DE
	EX	DE,HL
	POP	AF
L_354E	BIT	2,A
	JR	NZ,L_3559
	RRCA
	PUSH	AF
	CALL	L_300F
	JR	L_358C
;
L_3559	RRCA
	PUSH	AF
	CALL	L_2BF1
	PUSH	DE
	PUSH	BC
	CALL	L_2BF1
	POP	HL
L_3564	LD	A,H
	OR	L
	EX	(SP),HL
	LD	A,B
	JR	NZ,L_3575
	OR	C
L_356B	POP	BC
	JR	Z,L_3572
	POP	AF
	CCF
	JR	L_3588
;
L_3572	POP	AF
	JR	L_3588
;
L_3575	OR	C
	JR	Z,L_3585
	LD	A,(DE)
	SUB	(HL)
	JR	C,L_3585
	JR	NZ,L_356B
	DEC	BC
	INC	DE
	INC	HL
	EX	(SP),HL
	DEC	HL
	JR	L_3564
;
L_3585	POP	BC
	POP	AF
	AND	A
L_3588	PUSH	AF
	RST	#28	;*calc
;
;#358A
	DB	#A0
	DB	#38
;
L_358C	POP	AF
	PUSH	AF
	CALL	C,L_3501
	POP	AF
	PUSH	AF
	CALL	NC,L_34F9
	POP	AF
	RRCA
	CALL	NC,L_3501
	RET
;
L_359C	CALL	L_2BF1
	PUSH	DE
	PUSH	BC
	CALL	L_2BF1
	POP	HL
	PUSH	HL
	PUSH	DE
	PUSH	BC
	ADD	HL,BC
	LD	B,H
	LD	C,L
	RST	#30
	CALL	L_2AB2
	POP	BC
	POP	HL
	LD	A,B
	OR	C
	JR	Z,L_35B7
	LDIR
L_35B7	POP	BC
	POP	HL
	LD	A,B
	OR	C
	JR	Z,L_35BF
	LDIR
L_35BF	LD	HL,(#5C65)
	LD	DE,#FFFB
	PUSH	HL
	ADD	HL,DE
	POP	DE
	RET
;
L_35C9	CALL	L_322E
	JR	C,L_35DC
	JR	NZ,L_35DC
	PUSH	AF
	LD	BC,#0001
	RST	#30
	POP	AF
	LD	(DE),A
L_35D7	CALL	L_2AB2
	EX	DE,HL
	RET
;
L_35DC	RST	#08
;
;#35DD
	DB	#0A
;
L_35DE	CALL	VAL2
	PUSH	HL
	LD	A,B
	ADD	A,#E3
	SBC	A,A
	PUSH	AF
	CALL	L_2BF1
	PUSH	DE
	INC	BC
	RST	#30
	POP	HL
	LD	(#5C5D),DE
	PUSH	DE
	LDIR
	EX	DE,HL
	DEC	HL
	LD	(HL),#0D
	RES	7,(IY+#01)
	CALL	L_24FB
	RST	#18
	CP	#0D
	JR	NZ,L_360C
	POP	HL
	POP	AF
	XOR	(IY+#01)
	AND	#40
L_360C	JP	NZ,L_1C8A
	LD	(#5C5D),HL
	SET	7,(IY+#01)
	CALL	L_24FB
	POP	HL
	LD	(#5C5D),HL
	JR	L_35BF
;
L_361F	LD	BC,#0001
	RST	#30
	LD	(#5C5B),HL
	PUSH	HL
	LD	HL,(#5C51)
	PUSH	HL
	LD	A,#FF
	CALL	L_1601
	CALL	PRINT_FP
	POP	HL
	CALL	L_1615
	POP	DE
	LD	HL,(#5C5B)
	AND	A
	SBC	HL,DE
	LD	B,H
	LD	C,L
	CALL	L_2AB2
	EX	DE,HL
	RET
;
L_3645	CALL	FIND_INT1
	CP	#10
	JP	NC,L_1E9F
	LD	HL,(#5C51)
	PUSH	HL
	CALL	L_1601
	CALL	L_15E6
	LD	BC,#0000
	JR	NC,L_365F
	INC	C
	RST	#30
	LD	(DE),A
L_365F	CALL	L_2AB2
	POP	HL
	CALL	L_1615
	JP	L_35BF
;
L_3669	CALL	L_2BF1
	LD	A,B
	OR	C
	JR	Z,L_3671
	LD	A,(DE)
L_3671	JP	STACK_A
;
L_3674	CALL	L_2BF1
	JP	STACK_BC
;
L_367A	EXX
	PUSH	HL
	LD	HL,#5C67
	DEC	(HL)
	POP	HL
	JR	NZ,L_3687
	INC	HL
	EXX
	RET
;
L_3686	EXX
L_3687	LD	E,(HL)
	LD	A,E
	RLA
	SBC	A,A
	LD	D,A
	ADD	HL,DE
	EXX
	RET
;
L_368F	INC	DE
	INC	DE
	LD	A,(DE)
	DEC	DE
	DEC	DE
	AND	A
	JR	NZ,L_3686
	EXX
	INC	HL
	EXX
	RET
;
L_369B	POP	AF
	EXX
	EX	(SP),HL
	EXX
	RET
;
L_36A0	RST	#28	;*calc
;
;#36A1
	DB	#C0
	DB	#02
	DB	#31
	DB	#E0
	DB	#05
	DB	#27
	DB	#E0
	DB	#01
	DB	#C0
	DB	#04
	DB	#03
	DB	#E0
	DB	#38
;
;#36AE
	RET
;
L_36AF	RST	#28	;*calc
;
;#36B0
	DB	#31
	DB	#36
	DB	#00
	DB	#04
	DB	#3A
	DB	#38
;
;#36B6
	RET
;
;#36B7
	DB	#31
	DB	#3A
	DB	#C0
	DB	#03
	DB	#E0
	DB	#01
	DB	#30
	DB	#00
	DB	#03
	DB	#A1
	DB	#03
	DB	#38
;
;#36C3
	RET
;
L_36C4	RST	#28	;*calc
;
;#36C5
	DB	#3D
	DB	#34
	DB	#F1
	DB	#38
	DB	#AA
	DB	#3B
	DB	#29
	DB	#04
	DB	#31
	DB	#27
	DB	#C3
	DB	#03
	DB	#31
	DB	#0F
	DB	#A1
	DB	#03
	DB	#88
	DB	#13
	DB	#36
	DB	#58
	DB	#65
	DB	#66
	DB	#9D
	DB	#78
	DB	#65
	DB	#40
	DB	#A2
	DB	#60
	DB	#32
	DB	#C9
	DB	#E7
	DB	#21
	DB	#F7
	DB	#AF
	DB	#24
	DB	#EB
	DB	#2F
	DB	#B0
	DB	#B0
	DB	#14
	DB	#EE
	DB	#7E
	DB	#BB
	DB	#94
	DB	#58
	DB	#F1
	DB	#3A
	DB	#7E
	DB	#F8
	DB	#CF
	DB	#E3
	DB	#38
;
;#36F9
	CALL	L_2DD5
	JR	NZ,L_3705
	JR	C,L_3703
	ADD	A,(HL)
	JR	NC,L_370C
L_3703	RST	#08
;
;#3704
	DB	#05
;
L_3705	JR	C,L_370E
	SUB	(HL)
	JR	NC,L_370E
	NEG
L_370C	LD	(HL),A
	RET
;
L_370E	RST	#28	;*calc
;
;#370F
	DB	#02
	DB	#A0
	DB	#38
;
;#3712
	RET
;
L_3713	RST	#28	;*calc
;
;#3714
	DB	#3D
	DB	#31
	DB	#37
	DB	#00
	DB	#04
	DB	#38
;
;#371A
	RST	#08
;
;#371B
	DB	#09
	DB	#A0
	DB	#02
	DB	#38
;
;#371F
	LD	A,(HL)
	LD	(HL),#80
	CALL	STACK_A
	RST	#28	;*calc
;
;#3726
	DB	#34
	DB	#38
	DB	#00
	DB	#03
	DB	#01
	DB	#31
	DB	#34
	DB	#F0
	DB	#4C
	DB	#CC
	DB	#CC
	DB	#CD
	DB	#03
	DB	#37
	DB	#00
	DB	#08
	DB	#01
	DB	#A1
	DB	#03
	DB	#01
	DB	#38
;
;#373B
	INC	(HL)
	RST	#28	;*calc
;
;#373D
	DB	#01
	DB	#34
	DB	#F0
	DB	#31
	DB	#72
	DB	#17
	DB	#F8
	DB	#04
	DB	#01
	DB	#A2
	DB	#03
	DB	#A2
	DB	#03
	DB	#31
	DB	#34
	DB	#32
	DB	#20
	DB	#04
	DB	#A2
	DB	#03
	DB	#8C
	DB	#11
	DB	#AC
	DB	#14
	DB	#09
	DB	#56
	DB	#DA
	DB	#A5
	DB	#59
	DB	#30
	DB	#C5
	DB	#5C
	DB	#90
	DB	#AA
	DB	#9E
	DB	#70
	DB	#6F
	DB	#61
	DB	#A1
	DB	#CB
	DB	#DA
	DB	#96
	DB	#A4
	DB	#31
	DB	#9F
	DB	#B4
	DB	#E7
	DB	#A0
	DB	#FE
	DB	#5C
	DB	#FC
	DB	#EA
	DB	#1B
	DB	#43
	DB	#CA
	DB	#36
	DB	#ED
	DB	#A7
	DB	#9C
	DB	#7E
	DB	#5E
	DB	#F0
	DB	#6E
	DB	#23
	DB	#80
	DB	#93
	DB	#04
	DB	#0F
	DB	#38
;
;#3782
	RET
;
L_3783	RST	#28	;*calc
;
;#3784
	DB	#3D
	DB	#34
	DB	#EE
	DB	#22
	DB	#F9
	DB	#83
	DB	#6E
	DB	#04
	DB	#31
	DB	#A2
	DB	#0F
	DB	#27
	DB	#03
	DB	#31
	DB	#0F
	DB	#31
	DB	#0F
	DB	#31
	DB	#2A
	DB	#A1
	DB	#03
	DB	#31
	DB	#37
	DB	#C0
	DB	#00
	DB	#04
	DB	#02
	DB	#38
;
;#37A0
	RET
;
;#37A1
	DB	#A1
	DB	#03
	DB	#01
	DB	#36
	DB	#00
	DB	#02
	DB	#1B
	DB	#38
;
;#37A9
	RET
;
L_37AA	RST	#28	;*calc
;
;#37AB
	DB	#39
	DB	#2A
	DB	#A1
	DB	#03
	DB	#E0
	DB	#00
	DB	#06
	DB	#1B
	DB	#33
	DB	#03
;
L_37B5	RST	#28	;*calc
;
;#37B6
	DB	#39
	DB	#31
	DB	#31
	DB	#04
	DB	#31
	DB	#0F
	DB	#A1
	DB	#03
	DB	#86
	DB	#14
	DB	#E6
	DB	#5C
	DB	#1F
	DB	#0B
	DB	#A3
	DB	#8F
	DB	#38
	DB	#EE
	DB	#E9
	DB	#15
	DB	#63
	DB	#BB
	DB	#23
	DB	#EE
	DB	#92
	DB	#0D
	DB	#CD
	DB	#ED
	DB	#F1
	DB	#23
	DB	#5D
	DB	#1B
	DB	#EA
	DB	#04
	DB	#38
;
;#37D9
	RET
;
L_37DA	RST	#28	;*calc
;
;#37DB
	DB	#31
	DB	#1F
	DB	#01
	DB	#20
	DB	#05
	DB	#38
;
;#37E1
	RET
;
L_37E2	CALL	L_3297
	LD	A,(HL)
	CP	#81
	JR	C,L_37F8
	RST	#28	;*calc
;
;#37EB
	DB	#A1
	DB	#1B
	DB	#01
	DB	#05
	DB	#31
	DB	#36
	DB	#A3
	DB	#01
	DB	#00
	DB	#06
	DB	#1B
	DB	#33
	DB	#03
;
L_37F8	RST	#28	;*calc
;
;#37F9
	DB	#A0
	DB	#01
	DB	#31
	DB	#31
	DB	#04
	DB	#31
	DB	#0F
	DB	#A1
	DB	#03
	DB	#8C
	DB	#10
	DB	#B2
	DB	#13
	DB	#0E
	DB	#55
	DB	#E4
	DB	#8D
	DB	#58
	DB	#39
	DB	#BC
	DB	#5B
	DB	#98
	DB	#FD
	DB	#9E
	DB	#00
	DB	#36
	DB	#75
	DB	#A0
	DB	#DB
	DB	#E8
	DB	#B4
	DB	#63
	DB	#42
	DB	#C4
	DB	#E6
	DB	#B5
	DB	#09
	DB	#36
	DB	#BE
	DB	#E9
	DB	#36
	DB	#73
	DB	#1B
	DB	#5D
	DB	#EC
	DB	#D8
	DB	#DE
	DB	#63
	DB	#BE
	DB	#F0
	DB	#61
	DB	#A1
	DB	#B3
	DB	#0C
	DB	#04
	DB	#0F
	DB	#38
;
;#3832
	RET
;
L_3833	RST	#28	;*calc
;
;#3834
	DB	#31
	DB	#31
	DB	#04
	DB	#A1
	DB	#03
	DB	#1B
	DB	#28
	DB	#A1
	DB	#0F
	DB	#05
	DB	#24
	DB	#31
	DB	#0F
	DB	#38
;
;#3842
	RET
;
L_3843	RST	#28	;*calc
;
;#3844
	DB	#22
	DB	#A3
	DB	#03
	DB	#1B
	DB	#38
;
;#3849
	RET
;
L_384A	RST	#28	;*calc
;
;#384B
	DB	#31
	DB	#30
	DB	#00
	DB	#1E
	DB	#A2
	DB	#38
;
L_3851	RST	#28	;*calc
;
;#3852
	DB	#01
	DB	#31
	DB	#30
	DB	#00
	DB	#07
	DB	#25
	DB	#04
	DB	#38
;
;#385A
	JP	L_36C4
;
;#385D
	DB	#02
	DB	#31
	DB	#30
	DB	#00
	DB	#09
	DB	#A0
	DB	#01
	DB	#37
	DB	#00
	DB	#06
	DB	#A1
	DB	#01
	DB	#05
	DB	#02
	DB	#A1
	DB	#38
;
;#386D
	RET

; Input of HEX numbers
HEXA:		LD	HL,L_2596
		CP	#25
		RET	NZ
		POP	AF
		CALL	L_2530
		JP	NZ,L_26B5
		LD	DE,#0000
HEX1:		RST	#20
		CALL	L_2C88
		JR	NC,HEXEND
		CP	#41
		JR	C,CIS
		OR	#20
		CP	#67
		JR	NC,HEXEND
		SUB	#27
CIS:		AND	#0F
		LD	C,A
		LD	A,D
		AND	#F0
		JP	NZ,L_31AD
		LD	A,C
		EX	DE,HL
		ADD	HL,HL
		ADD	HL,HL
		ADD	HL,HL
		ADD	HL,HL
		OR	L
		LD	L,A
		EX	DE,HL
		JR	HEX1

HEXEND:		CALL	L_2CB3
		JP	L_2695

; Allow number in VAL$ and VAL
VAL1:		CP	#18
		RET	Z
		CP	#9D
		RET	Z
		XOR	(IY+#01)
		RET

; Evaluation of VAL and VAL$
VAL2:		LD	HL,(#5C5D)
		BIT	6,(IY+#01)
		RET	Z
		POP	AF
		PUSH	BC
		CALL	FIND_INT2
		POP	AF
		RRCA
		JR	NC,DOLAR
		LD	H,B
		LD	L,C
		LD	C,(HL)
		INC	HL
		LD	B,(HL)
		JP	STACK_BC

DOLAR:		PUSH	BC
		LD	BC,#0004
		RST	#30
		POP	HL
		PUSH	DE
		LD	A,H
		CALL	HEX99
		LD	A,L
		CALL	HEX99
		POP	DE
		JP	L_35D7

; Hex numbers
HEX99:		PUSH	AF
		RRCA
		RRCA
		RRCA
		RRCA
		CALL	HEX98
		POP	AF
HEX98:		AND	#0F
		OR	#30
		CP	#3A
		JR	C,HEX98_1
		ADD	A,#27
HEX98_1:	LD	(DE),A
		INC	DE
		RET

INFSUB:		LD	DE,L_153E
		CALL	L_0C13
		JP	HLO

MM:		DW	#FFFF

USERJP:		JP	#0052

DISKTOOLS:	DW	#0052

RES128:		DI
		XOR	A
		LD	I,A
		OUT	(#FE),A
		LD	E,#17
CC0:		LD	BC,#7FFD
		OUT	(C),E
		LD	BC,#0008
		LD	H,A
		LD	L,A
		LD	SP,HL
CC1:		PUSH	HL
		PUSH	HL
		PUSH	HL
		PUSH	HL
		DJNZ	CC1
		DEC	C
		JR	NZ,CC1
		DEC	E
		BIT	4,E
		JR	NZ,CC0
		LD	B,#5C
CC2:		LD	(BC),A
		INC	C
		JR	NZ,CC2
		DEC	HL
		JP	L_1200

;NMI Menu
NMI_MENU:	PUSH	AF
		PUSH	HL
		LD	HL,#BFE0
		ADD	HL,SP
		JR	C,MM1
		LD	SP,#5800
		LD	HL,NMI_MENU
		PUSH	HL
		PUSH	HL
		PUSH	HL
MM1:		PUSH	BC
		PUSH	DE
		PUSH	IX
		LD	A,I
		PUSH	AF
MMRET:		DI
		LD	C,#FE
		LD	A,R
		OUT	(C),A
		OUT 	(C),0
		CALL	KEY_SCAN
		INC	E
		JR	Z,MMRET
		DEC	E
		CALL	K_TEST
		LD	XH,A
		LD	A,#22
		OUT	(#FE),A
PUST:		CALL	KEY_SCAN
		INC	E
		JR	NZ,PUST
		LD	A,#08
		OUT	(#FE),A
		LD	A,XH
		LD	HL,MMRET
		PUSH	HL
		CP	'U'			; U - user function.
		JR	Z,USERJP
		CP	'E'			; E - extended 128k reset.
		JR	Z,RES128
		CP	'I'			; I - quiet AY. Reset FDC, DMA and stop disk drive if MB-02 is present.
		JP	Z,HARD
		CP	'T'			; T - set tape as actual device (only on MB-02).
		JP	Z,JP15522
		CP	'D'			; D - set disk as actual device (only on MB-02)
		JP	Z,JP15524
		CP	'B'			; B - warm start. BASIC program with variables is not deleted.
		JP	Z,BASIC
		CP	'Z'			; Z - user function like 'U' but this key is reserved for MB-02 applications.
		LD	HL,(DISKTOOLS)
		JR	NZ,DSKIP
		JP	(HL)
DSKIP:		CP	'N'			; N - CLEAR #5FFF: NEW - memory above #6000 is not changed.
		LD	DE,#5FFF
		JR	Z,RESNEW
		CP	'R'			; R - CLEAR #FFFF: NEW - classic 48k reset.
		LD	D,E
RESNEW:		JP	Z,L_11BE
NERES:		CP	'S'			; S - save SCREEN$ on tape, or disk if MB-02 is present.
		JR	NZ,NESAV
		LD	IX,#4000
		LD	DE,#1B00
		LD	A,#FF
		JP	SA_BYTES1
NESAV:		CP	'Q'			; Q - quit / return from NMI menu.
		JR	Z,QUIT
		CP	'M'			; M - jump to MRS debugger (MRS must be loaded in memory).
		JR	Z,MRS
		CALL	NUMERIC
		RET	C
		LD	HL,#4000
		ADD	HL,SP
		JR	NC,DD0
		LD	SP,#57F0
DD0:		POP	BC
		CALL	OUT128
		JP	MMRET

; Quit from NMI Menu		
QUIT:		POP	AF
		POP	AF
		LD	I,A
		JP	PO,RET_I
		EI
RET_I:		POP	IX
		POP	DE
		POP	BC
		POP	HL
		POP	AF
		RET

; Jump to MRS debugger
MRS:		POP	AF
		POP	AF
		LD	I,A
		POP	IX
		POP	DE
		POP	BC
		POP	HL
		POP	AF
		LD	(#F4FF),HL
		POP	HL
		LD	(#F544),HL
		JP	#F514

; Print general number
HLODVA:		LD	A,':'
		RST	#10
HLO:		LD	B,H
		LD	C,L
		CALL	STACK_BC
		JP	PRINT_FP

TT:		DW	#0000			;DS #39FF-TT
UU:		DW	#FFFF

DISPL:		LD	C,A
		LD	A,(IY+#02)
		CP	#10
		LD	A,C
		JR	NZ,DIS
		LD	BC,#FBFE
		IN	C,(C)
		RRC	C
		JR	C,DII
PUSTI:		XOR	A
		IN	A,(#FE)
		RRCA
		JR	NC,PUSTI
		LD	SP,(#5C3F)		;LISTSP
		RES	5,(IY+#01)
		RET

DII:		LD	C,(IY+#76)
		BIT	1,C			;bit1=1 don't show colors during autolist
		JR	Z,DIS
		CP	#0D
		JR	Z,DIS
		CP	#20
		JR	C,DIP
DIS:		JP	PO_FETCH

DIP:		BIT	2,C			;bit2=1 show comma instead of codes
		JR	NZ,DID
		POP	AF
DID:		LD	A,#1E
		JR	DIS

; General number printing with spaces
NUMBER:		PUSH	DE
		PUSH	HL
		LD	E,' '
		DB	#06
NUMCOM:		LD	L,C
		LD	BC,#D8F0
		CALL	OUT_SP_NO
		JP	OUT_NUM_3

; Check of BASIC program presence
LIN2:		CALL	LINE_NO
		PUSH	HL
		LD	HL,(#5C53)
		LD	A,(HL)
		POP	HL
		RET

; Test of numbers at the begin of line
LIN3:		RST	#18
		CALL	NUMERIC
		PUSH	AF
		CALL	E_LINE_NO
		POP	AF
		RET

; Show '*' instead of ' ' 
LIN4:		LD	A,(IY+#02)
		CP	#10
		JR	Z,LL40
		LD	D,#20
LL40:		PUSH	HL
		XOR	A
		LD	HL,(#5C51)		;channel R?
		LD	BC,#5CC0
		SBC	HL,BC
		POP	HL
		JR	Z,LL41
		BIT	0,(IY+#76)
		JP	Z,OUT_NUM_2
		DB	#01
LL41:		LD	D,#00			; no cursor at 'R'
		PUSH	DE
		LD	D,(HL)
		INC	HL
		LD	E,(HL)
		EX	DE,HL
		CALL	NUMBER
		EX	DE,HL
		POP	DE
		RET

; Moving around edit zone
DOLE:		CALL	L_100C
		LD	IX,L_100C
		JR	NZ,HORDOL
		LD	HL,#5C49
		RET

HORE:		CALL	L_1007
		LD	IX,L_1007
		JR	NC,HORDOL
		LD	HL,(#5C49)
		RET

HORDOL:		POP	BC
		LD	B,#00
HD1:		INC	B
		BIT	5,B
		RET	NZ
		PUSH	BC
		CALL	L_03F0
		POP	BC
		LD	A,(HL)
		CP	#0D
		RET	Z
		CP	' '
		JR	C,HD1+1
		SUB	#A5
		JR	C,HD1
		EXX
		LD	HL,INCB-2
		LD	(#5C51),HL
		CALL	L_0C10
		CALL	L_1071
		EXX
		JR	HD1+1

		DW	INCB
INCB:		EXX
		inc	B
		EXX
		RET

; Switch 128k bank
BANKA:		RST	#20
		CALL	FETCH_NUM
		CALL	CHECK_END
		CALL	FIND_INT1
OUT128:		AND	#0F
		OR	#10
		LD	BC,#7FFD
		OUT	(C),A
		RET

; Comma instead of semicolon
EDIT:		RST	#20
		CALL	FETCH_NUM
		CALL	CHECK_END
		CALL	FIND_INT2
		LD	(#5C49),BC
		CALL	L_16B0
		CALL	L_0D6E
		RES	5,(IY+#37)
VV:		DW	#FFFF
		RES	3,(IY+#01)
		CALL	L_0FA9
		LD	SP,(#5C3D)
		POP	AF
		JP	L_12AC

CLS:		CALL	FIND_INT1
		OR	A
		JR	Z,NECOL
		LD	(#5C48),A
		LD	(#5C8D),A
		CALL	SA_LD_RET
NECOL:		JP	L_0D6B

COMM:		CP	#27			;"'"
		JR	Z,BANKA
		CP	#2C			;","
		JR	Z,EDIT
		LD	HL,NEWTAB
COM1:		BIT	7,(HL)
		JP	NZ,L_1FCD
		CP	(HL)
		INC	HL
		LD	E,(HL)
		INC	HL
		LD	D,(HL)
		INC	HL
		JR	NZ,COM1
		RST	#20
		CALL	CHECK_END
		EX	DE,HL
		JP	(HL)

NEWTAB:		DB	'#'
		DW	54885	
		DB	'_'
		DW	#66
		DB	'*'
		DW	HEA
		DB	'?'
		DW	INFO
		DB	#7F			;(c)
		DW	BASIC
		DB	'^'
		DW	RES128
		DB	'!'
		DW	HARD
		DB	'='
		DW	USERJP

; Quiet AY. Reset FDC, DMA, stop drives if MB-02 is present
HARD:		XOR	A
		LD	BC,#FFFD
		OUT	(#13),A			; FDD motor
		LD	A,#D0
		OUT	(#0F),A			; FDC
		LD	A,#C3
		OUT	(#0B),A			; DMA
		LD	A,#07	
		OUT	(C),A			; AY
		LD	A,#BF
		OUT	(#FD),A
		LD	A,#0D
		OUT	(C),A
		LD	A,#80
		OUT	(#FD),A
		RET

; Warm start
BASIC:		LD	HL,L_15AF
		LD	DE,#5CB6
		LD	BC,#0015
		LD	(#5C4F),DE
		LDIR
		LD	HL,#3C00
		LD	(#5C36),HL
		LD	HL,#0040
		LD	(#5C38),HL
		LD	IY,#5C3A
		LD	HL,(#5CB2)
		LD	(HL),#3E
		DEC	HL
		LD	SP,HL
		DEC	HL
		DEC	HL
		LD	(#5C3D),HL
		IM	1
		EI
		LD	HL,(#5C59)
		JP	L_1256

; Enhanced POKE
POKE:		CALL	L_2530
		CALL	NZ,FIND_INT2
		LD	D,B
		LD	E,C
POKLOP:		RST	#18
		CP	#2C
		JR	Z,POKOK
		CP	#3B
		RET	NZ
POKOK:		PUSH	DE
		PUSH	AF
		RST	#20
		CALL	L_24FB
		POP	AF
		POP	DE
		CALL	L_2530
		JR	Z,POKLOP
		BIT	6,(IY+#01)
		JR	NZ,POKNUM
POKRET:		PUSH	AF
		PUSH	DE
		CALL	L_2BF1
		EX	DE,HL
		POP	DE
		LD	A,B
		OR	C
		JR	Z,POKNIC
		LDIR
		POP	AF
		RRCA
		JR	NC,POKLOP
		LD	H,D
		LD	L,E
		DEC	HL
		SET	7,(HL)
		PUSH	AF
POKNIC:		POP	AF
		JR	POKLOP

POKNUM:		PUSH	DE
		RRCA
		JR	C,POKDW
POKDB:		CALL	FIND_INT1
		POP	DE
		JR	POKLD

POKDW:		CALL	FIND_INT2
		POP	DE
		LD	A,C
		LD	(DE),A
		INC	DE
		LD	A,B
POKLD:		LD	(DE),A
		INC	DE
		JR	POKLOP

SS:		DB	#FF
WW:		DW	#FFFF

LIN1:		CALL	L_1980
		RET	NC
		LD	A,(HL)
		AND	#C0
		RET	NZ
		SCF
		RET

INFO:		CALL	L_0D6B
		LD	A,#FE
		CALL	L_1601
		LD	HL,(#5C4B)
		LD	BC,(#5C53)
		XOR	A
		PUSH	HL
		SBC	HL,BC
		CALL	INFSUB
		POP	BC
		SCF
		LD	HL,(#5C59)
		SBC	HL,BC
		LD	A,#01
		CALL	INFSUB
		LD	BC,(#5C65)
		LD	HL,#0000
		ADD	HL,SP
		SBC	HL,BC
		LD	A,#02
		CALL	INFSUB
		JP	L_1FF8

HEA:		LD	A,#FE
		CALL	L_1601
ZNOVU:		DI
		LD	IX,#5C9E
		LD	DE,#0010
		XOR	A
		INC	E
		SCF
		EX	AF,AF'
		LD	A,#0E
		OUT	(#FE),A
		IN	A,(#FE)
		RRA
		CALL	LD_BYTES1
		CALL	SA_LD_RET
		JR	NC,ZNOVU
		LD	(#5C8C),A
		LD	A,#17
		RST	#10
		XOR	A
		RST	#10
		RST	#10
		LD	HL,#5C9E
		LD	A,(HL)
		OR	#30
		RST	#10
		LD	A,#3A
		RST	#10
		LD	B,#0A
MENO:		INC	HL
		LD	A,(HL)
		CP	#20
		JR	NC,MENO1
		LD	A,#1E
MENO1:		RST	#10
		DJNZ	MENO
		LD	A,#17
		RST	#10
		LD	A,#15
		RST	#10
		RST	#10
		LD	HL,(#5CAB)
		CALL	NUMBER
		LD	HL,(#5CA9)
		CALL	HLODVA
		LD	A,#0D
		RST	#10
		JR	ZNOVU

; Unused bytes
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DB	#FF

JP15522:	RET

		DB	#FF

JP15524:	RET

		DB	#FF

		DB	" Busy soft rom " 
		DB	VER1, VER2, VER3
		DB	" "

; Unused bytes
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DW	#FFFF
		DB	#FF

H3CF0:		DB	#00,#00,#00,#00,#00,#00,#7E,#00	;line
		DB	#00,#7E,#7E,#7E,#7E,#7E,#7E,#00	;square

; Character set
CHAR_SET:	DB	#00,#00,#00,#00,#00,#00,#00,#00	;space
		DB	#00,#10,#10,#10,#10,#00,#10,#00	;!
		DB	#00,#24,#24,#00,#00,#00,#00,#00	;"
		DB	#00,#24,#7E,#24,#24,#7E,#24,#00	;#
		DB	#00,#08,#3E,#28,#3E,#0A,#3E,#08	;$
		DB	#00,#62,#64,#08,#10,#26,#46,#00	;%
		DB	#00,#10,#28,#10,#2A,#44,#3A,#00	;&
		DB	#00,#08,#10,#00,#00,#00,#00,#00	;'
		DB	#00,#04,#08,#08,#08,#08,#04,#00	;(
		DB	#00,#20,#10,#10,#10,#10,#20,#00	;)
		DB	#00,#00,#14,#08,#3E,#08,#14,#00	;*
		DB	#00,#00,#08,#08,#3E,#08,#08,#00	;+
		DB	#00,#00,#00,#00,#00,#08,#08,#10	;,
		DB	#00,#00,#00,#00,#3E,#00,#00,#00	;-
		DB	#00,#00,#00,#00,#00,#18,#18,#00	;.
		DB	#00,#00,#02,#04,#08,#10,#20,#00	;/
		DB	#00,#3C,#46,#4A,#52,#62,#3C,#00	;0
		DB	#00,#18,#28,#08,#08,#08,#3E,#00	;1
		DB	#00,#3C,#42,#02,#3C,#40,#7E,#00	;2
		DB	#00,#3C,#42,#0C,#02,#42,#3C,#00	;3
		DB	#00,#08,#18,#28,#48,#7E,#08,#00	;4
		DB	#00,#7E,#40,#7C,#02,#42,#3C,#00	;5
		DB	#00,#3C,#40,#7C,#42,#42,#3C,#00	;6
		DB	#00,#7E,#02,#04,#08,#10,#10,#00	;7
		DB	#00,#3C,#42,#3C,#42,#42,#3C,#00	;8
		DB	#00,#3C,#42,#42,#3E,#02,#3C,#00	;9
		DB	#00,#00,#00,#10,#00,#00,#10,#00	;:
		DB	#00,#00,#10,#00,#00,#10,#10,#20	;;
		DB	#00,#00,#04,#08,#10,#08,#04,#00	;<
		DB	#00,#00,#00,#3E,#00,#3E,#00,#00	;=
		DB	#00,#00,#10,#08,#04,#08,#10,#00	;>
		DB	#00,#3C,#42,#04,#08,#00,#08,#00	;?
		DB	#00,#3C,#02,#3A,#4A,#4A,#3C,#00	;@
		DB	#00,#3C,#42,#42,#7E,#42,#42,#00	;A
		DB	#00,#7C,#42,#7C,#42,#42,#7C,#00	;B
		DB	#00,#3C,#42,#40,#40,#42,#3C,#00	;C
		DB	#00,#78,#44,#42,#42,#44,#78,#00	;D
		DB	#00,#7E,#40,#7C,#40,#40,#7E,#00	;E
		DB	#00,#7E,#40,#7C,#40,#40,#40,#00	;F
		DB	#00,#3C,#42,#40,#4E,#42,#3C,#00	;G
		DB	#00,#42,#42,#7E,#42,#42,#42,#00	;H
		DB	#00,#3E,#08,#08,#08,#08,#3E,#00	;I
		DB	#00,#02,#02,#02,#42,#42,#3C,#00	;J
		DB	#00,#44,#48,#70,#48,#44,#42,#00	;K
		DB	#00,#40,#40,#40,#40,#40,#7E,#00	;L
		DB	#00,#42,#66,#5A,#42,#42,#42,#00	;M
		DB	#00,#42,#62,#52,#4A,#46,#42,#00	;N
		DB	#00,#3C,#42,#42,#42,#42,#3C,#00	;O
		DB	#00,#7C,#42,#42,#7C,#40,#40,#00	;P
		DB	#00,#3C,#42,#42,#52,#4A,#3C,#00	;Q
		DB	#00,#7C,#42,#42,#7C,#44,#42,#00	;R
		DB	#00,#3C,#40,#3C,#02,#42,#3C,#00	;S
		DB	#00,#FE,#10,#10,#10,#10,#10,#00	;T
		DB	#00,#42,#42,#42,#42,#42,#3C,#00	;U
		DB	#00,#42,#42,#42,#42,#24,#18,#00	;V
		DB	#00,#42,#42,#42,#42,#5A,#24,#00	;W
		DB	#00,#42,#24,#18,#18,#24,#42,#00	;X
		DB	#00,#82,#44,#28,#10,#10,#10,#00	;Y
		DB	#00,#7E,#04,#08,#10,#20,#7E,#00	;Z
		DB	#00,#0E,#08,#08,#08,#08,#0E,#00	;[
		DB	#00,#00,#40,#20,#10,#08,#04,#00	;\
		DB	#00,#70,#10,#10,#10,#10,#70,#00	;]
		DB	#00,#10,#38,#54,#10,#10,#10,#00	;^
		DB	#00,#00,#00,#00,#00,#00,#00,#FF	;_
		DB	#00,#1C,#22,#78,#20,#20,#7E,#00	;Â£
		DB	#00,#00,#38,#04,#3C,#44,#3C,#00	;a
		DB	#00,#20,#20,#3C,#22,#22,#3C,#00	;b
		DB	#00,#00,#1C,#20,#20,#20,#1C,#00	;c
		DB	#00,#04,#04,#3C,#44,#44,#3C,#00	;d
		DB	#00,#00,#38,#44,#78,#40,#3C,#00	;e
		DB	#00,#0C,#10,#18,#10,#10,#10,#00	;f
		DB	#00,#00,#3C,#44,#44,#3C,#04,#38	;g
		DB	#00,#40,#40,#78,#44,#44,#44,#00	;h
		DB	#00,#10,#00,#30,#10,#10,#38,#00	;i
		DB	#00,#04,#00,#04,#04,#04,#24,#18	;j
		DB	#00,#20,#28,#30,#30,#28,#24,#00	;k
		DB	#00,#10,#10,#10,#10,#10,#0C,#00	;l
		DB	#00,#00,#68,#54,#54,#54,#54,#00	;m
		DB	#00,#00,#78,#44,#44,#44,#44,#00	;n
		DB	#00,#00,#38,#44,#44,#44,#38,#00	;o
		DB	#00,#00,#78,#44,#44,#78,#40,#40	;p
		DB	#00,#00,#3C,#44,#44,#3C,#04,#06	;q
		DB	#00,#00,#1C,#20,#20,#20,#20,#00	;r
		DB	#00,#00,#38,#40,#38,#04,#78,#00	;s
		DB	#00,#10,#38,#10,#10,#10,#0C,#00	;t
		DB	#00,#00,#44,#44,#44,#44,#38,#00	;u
		DB	#00,#00,#44,#44,#28,#28,#10,#00	;v
		DB	#00,#00,#44,#54,#54,#54,#28,#00	;w
		DB	#00,#00,#44,#28,#10,#28,#44,#00	;x
		DB	#00,#00,#44,#44,#44,#3C,#04,#38	;y
		DB	#00,#00,#7C,#08,#10,#20,#7C,#00	;z
		DB	#00,#0E,#08,#30,#08,#08,#0E,#00	;{
		DB	#00,#08,#08,#08,#08,#08,#08,#00	;|
		DB	#00,#70,#10,#0C,#10,#10,#70,#00	;}
		DB	#00,#14,#28,#00,#00,#00,#00,#00	;~
		DB	#3C,#42,#99,#A1,#A1,#99,#42,#3C	;(c)
